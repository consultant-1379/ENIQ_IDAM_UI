{{- $authorizationProxy := fromJson (include "eric-adp-gui-aggregator-service.authz-proxy-values" .) -}}
{{- $global := fromJson (include "eric-adp-gui-aggregator-service.global" .) -}}
{{- $syslogEnabled := eq "true" (include "eric-adp-gui-aggregator-service.syslogEnabled" .) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eric-adp-gui-aggregator-service.name" . }}
  labels:
    {{- include "eric-adp-gui-aggregator-service.labels" . | nindent 4 }}
  annotations:
    {{- include "eric-adp-gui-aggregator-service.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "eric-adp-gui-aggregator-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: {{ .Values.updateStrategy.type }}
{{- if and (eq .Values.updateStrategy.type "RollingUpdate") .Values.updateStrategy.rollingUpdate }}
    rollingUpdate:
{{- if .Values.updateStrategy.rollingUpdate.maxUnavailable }}
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable }}
{{- end }}
{{- if .Values.updateStrategy.rollingUpdate.maxSurge }}
      maxSurge: {{ .Values.updateStrategy.rollingUpdate.maxSurge }}
{{- end }}
{{- end }}
  template:
    metadata:
      labels:
        {{- $commonLabels := include "eric-adp-gui-aggregator-service.labels" . | fromYaml -}}
        {{- $logTransformerLabel := include "eric-adp-gui-aggregator-service.logtransformer.label" . | fromYaml -}}
        {{- include "eric-adp-gui-aggregator-service.mergeLabels" (dict "location" .Template.Name "sources" (list $commonLabels $logTransformerLabel)) | trim | nindent 8 }}
      annotations:
        {{- include "eric-adp-gui-aggregator-service.annotations" . | nindent 8 }}
    spec:
    {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "eric-adp-gui-aggregator-service.topologySpreadConstraints" . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "eric-adp-gui-aggregator-service.name" . }}-serviceaccount
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
{{- if .Values.podPriority.main.priorityClassName }}
      priorityClassName: {{ .Values.podPriority.main.priorityClassName | quote }}
{{- end }}
{{- if $authorizationProxy.enabled }}
      initContainers:
{{ include "eric-adp-gui-aggregator-service.authz-proxy-sap-container.spec" . | indent 6 }}
{{- end }}
      containers:
{{- if $authorizationProxy.enabled }}
{{ include "eric-adp-gui-aggregator-service.authz-proxy-container.spec" . | indent 6 }}
{{- end }}
      - name: main
        image: {{ template "eric-adp-gui-aggregator-service.mainImagePath" . }}
        imagePullPolicy: {{ template "eric-adp-gui-aggregator-service.registryImagePullPolicy" . }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
              - all
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_CONTAINER
          value: {{ .Chart.Name }}
        - name: K8S_POD
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_CHART_VERSION
          value: {{ include "eric-adp-gui-aggregator-service.chart" . | quote}}
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: kubernetes.default.svc
          # Workaround for: [ADPPRG-50848]. To support ipv6 environment, using DNS name instead of IP address
          # More info: docs/development/3pp-libraries.md
        - name: K8S_MEMORY_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: main
              resource: limits.memory
        - name: NODEJS_RUNTIME_RESERVED_MEMORY
          value: {{ .Values.configuration.nodeJsRuntimeReservedMemory | quote}}
        - name: TZ
          value: {{ $global.timezone | quote }}
        ports:
        - name: adp-ui-port
          containerPort: 3000
          protocol: TCP
        resources:
          {{- include "eric-adp-gui-aggregator-service.mainResources" . | indent 10 }}
        livenessProbe:
          {{- if and $global.security.tls.enabled (eq .Values.service.endpoints.http.tls.verifyClientCertificate "required") }}
          exec:
            command:
              - /runtime/probe.sh
              - live
          {{- else }}
          httpGet:
            path: /status/live
            port: adp-ui-port
            {{- if $global.security.tls.enabled }}
            scheme: HTTPS
            {{- end }}
          {{- end }}
          initialDelaySeconds: {{ .Values.probes.main.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.probes.main.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.probes.main.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.probes.main.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.probes.main.livenessProbe.failureThreshold }}
        readinessProbe:
          {{- if and $global.security.tls.enabled (eq .Values.service.endpoints.http.tls.verifyClientCertificate "required") }}
          exec:
            command:
              - /runtime/probe.sh
              - ready
          {{- else }}
          httpGet:
            path: /status/ready
            port: adp-ui-port
            {{- if $global.security.tls.enabled }}
            scheme: HTTPS
            {{- end }}
          {{- end }}
          initialDelaySeconds: {{ .Values.probes.main.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.probes.main.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.probes.main.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.probes.main.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.probes.main.readinessProbe.failureThreshold }}
        volumeMounts:
        - name: config-volume
          mountPath: /runtime/server/config/backend-service-config
        - name: ui-config-volume
          mountPath: /runtime/frontend/deployment-config
        {{- if $global.security.tls.enabled }}
        - name: http-client-cert-volume
          mountPath: /runtime/server/certificates/httpClient
          readOnly: true
        - name: http-client-ca-volume
          mountPath: /runtime/server/certificates/httpCa
          readOnly: true
        - name: http-server-cert-volume
          mountPath: /runtime/server/certificates/httpServer
          readOnly: true
        - name: internal-ui-client-cert-volume
          mountPath: /runtime/server/certificates/internalUi
          readOnly: true
        - name: internal-ui-client-ca-volume
          mountPath: /runtime/server/certificates/internalUiCa
          readOnly: true
        {{- if .Values.metrics.enabled }}
        - name: pm-ca-volume
          mountPath: /runtime/server/certificates/pm
          readOnly: true
        {{- end }}
        {{- if .Values.configuration.helpAggregator.enabled }}
        - name: ha-ca-volume
          mountPath: /runtime/server/certificates/ha
          readOnly: true
        {{- end }}
        {{- if or (and .Values.ingress.enabled .Values.ingress.useContour) .Values.ingress.adpIccrCaSecret }}
        - name: ingress-ca-volume
          mountPath: /runtime/server/certificates/ingress
          readOnly: true
        {{- end }}
        - name: root-ca-volume
          mountPath: /runtime/server/certificates/root
          readOnly: true
        {{- if $syslogEnabled }}
        - name: lt-client-cert-volume
          mountPath: /runtime/server/certificates/logtransformer
          readOnly: true
        {{- end }}
        {{- if .Values.configuration.faultIndications.enabled }}
        - name: fm-client-cert-volume
          mountPath: /runtime/server/certificates/faultHandler
          readOnly: true
        {{- end }}
        {{- end }}
      volumes:
{{- if $authorizationProxy.enabled }}
{{ include "eric-adp-gui-aggregator-service.authz-proxy-volume.spec" . | indent 6 }}
{{- end }}
      {{- if $global.security.tls.enabled }}
      {{- if $authorizationProxy.enabled }}
      - name: {{ .Values.authorizationProxy.localSpClientCertVolumeName }}
        secret:
          secretName: {{ include "eric-adp-gui-aggregator-service.name" . }}-authz-client-cert
      {{- end }}
      - name: http-client-cert-volume
        projected:
          sources:
          - secret:
              name: {{ include "eric-adp-gui-aggregator-service.name" . }}-http-client-cert
      - name: http-client-ca-volume
        projected:
          sources:
          - secret:
              name: {{ include "eric-adp-gui-aggregator-service.name" . }}-http-client-ca
      - name: http-server-cert-volume
        projected:
          sources:
          - secret:
              name: {{ include "eric-adp-gui-aggregator-service.name" . }}-http-server-cert
      - name: internal-ui-client-cert-volume
        projected:
          sources:
          - secret:
              name: {{ include "eric-adp-gui-aggregator-service.name" . }}-internal-ui-client-cert
      - name: internal-ui-client-ca-volume
        projected:
          sources:
          - secret:
              name: {{ include "eric-adp-gui-aggregator-service.name" . }}-internal-ui-client-ca
      {{- if .Values.metrics.enabled }}
      - name: pm-ca-volume
        projected:
          sources:
          - secret:
              name: {{ .Values.configuration.dependencies.prometheus.pmServiceName }}-ca
      {{- end }}
      {{- if .Values.configuration.helpAggregator.enabled }}
      - name: ha-ca-volume
        projected:
          sources:
          - secret:
              name: {{ .Values.configuration.helpAggregator.serviceName }}-internal-help-client-ca
      {{- end }}
      {{- if or (and .Values.ingress.enabled .Values.ingress.useContour) .Values.ingress.adpIccrCaSecret }}
      - name: ingress-ca-volume
        projected:
          sources:
          - secret:
            {{- if .Values.ingress.adpIccrCaSecret }}
              name: {{ .Values.ingress.adpIccrCaSecret }}
            {{- else }}
              name: {{ .Values.ingress.adpIccrServiceName }}-client-ca
            {{- end }}
      {{- end }}
      - name: root-ca-volume
        secret:
          secretName: {{ .Values.configuration.siptls.rootSecretName }}
      {{- if $syslogEnabled }}
      - name: lt-client-cert-volume
        secret:
          secretName: {{ include "eric-adp-gui-aggregator-service.name" . }}-lt-client-cert
      {{- end }}
      {{- if .Values.configuration.faultIndications.enabled }}
      - name: fm-client-cert-volume
        secret:
          secretName: {{ include "eric-adp-gui-aggregator-service.name" . }}-fi-api-client-cert
      {{- end }}
      {{- end }}
      - name: config-volume
        configMap:
          name: {{ include "eric-adp-gui-aggregator-service.name" . }}-configmap
      - name: ui-config-volume
        configMap:
          name: {{ include "eric-adp-gui-aggregator-service.name" . }}-ui-configmap
      {{- if include "eric-adp-gui-aggregator-service.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ template "eric-adp-gui-aggregator-service.pullSecrets" . }}
      {{- end }}
      {{- if include "eric-adp-gui-aggregator-service.nodeSelector" . }}
      nodeSelector: {{- include "eric-adp-gui-aggregator-service.nodeSelector" . | nindent 8 }}
      {{- end }}
{{- if eq .Values.affinity.podAntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ include "eric-adp-gui-aggregator-service.name" . }}
            topologyKey: "kubernetes.io/hostname"
{{- else if eq .Values.affinity.podAntiAffinity  "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ include "eric-adp-gui-aggregator-service.name" . }}
              topologyKey: "kubernetes.io/hostname"
{{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
