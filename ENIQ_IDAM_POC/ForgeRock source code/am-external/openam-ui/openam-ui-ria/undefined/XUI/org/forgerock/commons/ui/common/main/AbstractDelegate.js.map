{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/main/AbstractDelegate.js"],"names":["define","_","constants","configuration","serviceInvoker","obj","AbstractDelegate","serviceUrl","baseRegex","RegExp","context","baseEntity","match","length","prototype","serviceCall","callParams","hasOwnProperty","headers","passwords","HEADER_PARAM_REAUTH","password","url","restCall","createEntity","id","objectParam","successCallback","errorCallback","undefined","_rev","type","success","error","data","JSON","stringify","deleteEntity","current","readEntity","then","updateEntity","patchEntityDifferences","queryParameters","oldObject","newObject","noChangesCallback","errorsHandlers","differences","getDifferences","patchEntity","patchDefinition","i","field","indexOf","rev","patchEntityAttribute","attributeName","newValue","operation","value","method","oldValue","fieldContents","result","patchCmd","isEqual","push"],"mappings":"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","file":"AbstractDelegate.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"underscore\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\",\r\n    \"org/forgerock/commons/ui/common/main/Configuration\",\r\n    \"org/forgerock/commons/ui/common/main/ServiceInvoker\"\r\n], function(_, constants, configuration, serviceInvoker) {\r\n\r\n    var obj = function AbstractDelegate(serviceUrl) {\r\n        var baseRegex = new RegExp(\"^/\" + constants.context + \"\\/([\\\\w/]*)\"),\r\n            baseEntity = serviceUrl.match(baseRegex);\r\n        this.serviceUrl = serviceUrl;\r\n\r\n        if (baseEntity && baseEntity.length > 1) {\r\n            this.baseEntity = baseEntity[1];\r\n        }\r\n    };\r\n\r\n    obj.prototype.serviceCall = function(callParams) {\r\n\r\n        if (!callParams.hasOwnProperty('headers')) {\r\n            callParams.headers = {};\r\n        }\r\n        if (configuration.hasOwnProperty('passwords') && configuration.passwords.hasOwnProperty('password')) {\r\n            callParams.headers[constants.HEADER_PARAM_REAUTH]=configuration.passwords.password;\r\n        }\r\n\r\n        callParams.url = callParams.hasOwnProperty('url') ? callParams.url : \"\";\r\n        if (callParams.serviceUrl) {\r\n            callParams.url = callParams.serviceUrl + callParams.url;\r\n        } else {\r\n            callParams.url = this.serviceUrl + callParams.url;\r\n        }\r\n        return serviceInvoker.restCall(callParams);\r\n    };\r\n\r\n    obj.prototype.createEntity = function(id, objectParam, successCallback, errorCallback) {\r\n        var headers = {};\r\n\r\n        if (typeof id === \"object\" && id !== null) {\r\n            throw \"Invalid id value passed to createEntity\";\r\n        }\r\n\r\n\r\n        if (id !== null && id !== undefined) {\r\n            if(objectParam._rev) {\r\n                headers[\"If-None-Match\"] = '\"' + objectParam._rev + '\"';\r\n            } else {\r\n                headers[\"If-None-Match\"] = '\"' + \"*\" + '\"';\r\n            }\r\n            return this.serviceCall({url: \"/\" + id,\r\n                type: \"PUT\",\r\n                success: successCallback,\r\n                error: errorCallback,\r\n                data: JSON.stringify(objectParam),\r\n                headers: headers\r\n            });\r\n        } else {\r\n            return this.serviceCall({url: \"?_action=create\",\r\n                type: \"POST\",\r\n                success: successCallback,\r\n                error: errorCallback,\r\n                data: JSON.stringify(objectParam),\r\n                headers: headers\r\n            });\r\n        }\r\n    };\r\n\r\n    obj.prototype.deleteEntity = function(id, successCallback, errorCallback) {\r\n        var current = this;\r\n        return this.readEntity(id, null, errorCallback).then(function(data) {\r\n            var callParams = {url: \"/\" + id, type: \"DELETE\", success: successCallback, error: errorCallback };\r\n            if(data._rev) {\r\n                callParams.headers = [];\r\n                callParams.headers[\"If-Match\"] = '\"' + data._rev + '\"';\r\n            }\r\n            return current.serviceCall(callParams);\r\n        });\r\n\r\n    };\r\n\r\n    obj.prototype.readEntity = function(id, successCallback, errorCallback) {\r\n        return this.serviceCall({url: \"/\" + id, type: \"GET\", success: successCallback, error: errorCallback});\r\n    };\r\n\r\n    obj.prototype.updateEntity = function(id, objectParam, successCallback, errorCallback) {\r\n        var headers = {};\r\n\r\n        if(objectParam._rev) {\r\n            headers[\"If-Match\"] = '\"' + objectParam._rev + '\"';\r\n        } else {\r\n            headers[\"If-Match\"] = '\"' + \"*\" + '\"';\r\n        }\r\n\r\n        return this.serviceCall({url: \"/\" + id,\r\n            type: \"PUT\",\r\n            success: successCallback,\r\n            error: errorCallback,\r\n            data: JSON.stringify(objectParam),\r\n            headers: headers\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Discovers differences between new and old object and invokes patch action only on attributes which are not equal.\r\n     */\r\n    obj.prototype.patchEntityDifferences = function(queryParameters, oldObject, newObject, successCallback,\r\n                                                    errorCallback, noChangesCallback, errorsHandlers) {\r\n\r\n        var differences = this.getDifferences(oldObject, newObject);\r\n        if(!differences.length){\r\n            if(noChangesCallback){\r\n                noChangesCallback();\r\n            }\r\n            return;\r\n        }\r\n        return this.patchEntity(queryParameters, differences, successCallback, errorCallback, noChangesCallback,\r\n            errorsHandlers);\r\n    };\r\n\r\n    /**\r\n     * Invokes patch action which modify only selected object attributes defined as PATCH action compatible JSON\r\n     * object {\"operation\": \"replace\", \"field\": \"fieldname\", value: \"value\" }\r\n     */\r\n    obj.prototype.patchEntity = function(queryParameters, patchDefinition, successCallback, errorCallback,\r\n                                         noChangesCallback, errorsHandlers) {\r\n        //simple transformation\r\n        var i;\r\n        for(i = 0; i < patchDefinition.length; i++) {\r\n            if (typeof patchDefinition[i].field === \"string\" && _.indexOf(patchDefinition[i].field, \"/\") !== 0) {\r\n                patchDefinition[i].field = \"/\" + patchDefinition[i].field;\r\n            }\r\n        }\r\n        return this.serviceCall({url: \"/\" + queryParameters.id,\r\n            type: \"PATCH\",\r\n            success: successCallback,\r\n            error: errorCallback,\r\n            data: JSON.stringify(patchDefinition),\r\n            headers: {\r\n                \"If-Match\": '\"' + queryParameters.rev + '\"'\r\n            },\r\n            errorsHandlers: errorsHandlers\r\n        });\r\n    };\r\n\r\n    /**\r\n     *  Patches single attribute\r\n     */\r\n    obj.prototype.patchEntityAttribute = function(queryParameters, attributeName, newValue, successCallback,\r\n                                                  errorCallback, noChangesCallback) {\r\n        return this.patchEntity(queryParameters, [{operation: \"replace\", field: attributeName, value: newValue}],\r\n            successCallback, errorCallback, noChangesCallback);\r\n    };\r\n\r\n    /**\r\n     * Returns differences between new and old object as a PATCH action compatible JSON object\r\n     */\r\n    obj.prototype.getDifferences = function(oldObject, newObject, method) {\r\n        var newValue, oldValue, field, fieldContents, result = [],patchCmd = {};\r\n        if (!method) {\r\n            method = \"replace\";\r\n        }\r\n        for ( field in newObject) {\r\n            fieldContents = newObject[field];\r\n            if ( typeof (fieldContents) !== \"function\") {\r\n                newValue = newObject[field];\r\n                oldValue = oldObject[field];\r\n                if ((newValue!==\"\" || oldValue) && !_.isEqual(newValue,oldValue)) {\r\n                    patchCmd = {\r\n                        operation: method,\r\n                        field: field,\r\n                        value: newValue\r\n                    };\r\n                    result.push( patchCmd );\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    return obj;\r\n});"]}