{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/common/components/TemplateBasedView.js"],"names":["define","_","Backbone","UIUtils","View","extend","initialize","template","data","callback","noop","Error","render","compileTemplate","then","html","$el"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,UAFG,EAGH,8CAHG,CAAP,EAIG,UAACC,CAAD,EAAIC,QAAJ,EAAcC,OAAd;AAAA,WACCD,SAASE,IAAT,CAAcC,MAAd,CAAqB;AACjBC,kBADiB,4BACuC;AAAA,gBAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,iCAAhCC,IAAgC;AAAA,gBAAhCA,IAAgC,6BAAzB,EAAyB;AAAA,qCAArBC,QAAqB;AAAA,gBAArBA,QAAqB,iCAAVR,EAAES,IAAQ;;AACpD,gBAAI,CAACH,QAAL,EAAe;AACX,sBAAM,IAAII,KAAJ,CAAU,4CAAV,CAAN;AACH;AACD,iBAAKJ,QAAL,GAAgBA,QAAhB;AACA,iBAAKE,QAAL,GAAgBA,QAAhB;AACA,iBAAKD,IAAL,GAAYA,IAAZ;AACH,SARgB;AASjBI,cATiB,oBASP;AAAA;;AACNT,oBAAQU,eAAR,CACI,KAAKN,QADT,EAEI,KAAKC,IAFT,EAGEM,IAHF,CAGO,UAACC,IAAD,EAAU;AACb,sBAAKC,GAAL,CAASD,IAAT,CAAcA,IAAd;AACA,sBAAKN,QAAL;AACH,aAND;AAOA,mBAAO,IAAP;AACH;AAlBgB,KAArB,CADD;AAAA,CAJH","file":"TemplateBasedView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"lodash\",\n    \"backbone\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\"\n], (_, Backbone, UIUtils) =>\n    Backbone.View.extend({\n        initialize ({ template, data = {}, callback = _.noop }) {\n            if (!template) {\n                throw new Error(\"[TemplateBasedView] No \\\"template\\\" found.\");\n            }\n            this.template = template;\n            this.callback = callback;\n            this.data = data;\n        },\n        render () {\n            UIUtils.compileTemplate(\n                this.template,\n                this.data\n            ).then((html) => {\n                this.$el.html(html);\n                this.callback();\n            });\n            return this;\n        }\n    })\n);\n"]}