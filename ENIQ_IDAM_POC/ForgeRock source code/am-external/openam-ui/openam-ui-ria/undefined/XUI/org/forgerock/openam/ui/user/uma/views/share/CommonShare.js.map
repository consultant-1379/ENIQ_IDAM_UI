{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/user/uma/views/share/CommonShare.js"],"names":["define","$","_","AbstractView","Backgrid","BackgridUtils","BootstrapDialog","Constants","EventManager","ShareCounter","UMAPolicy","UMAPolicyPermission","UMAPolicyPermissionScope","UMAResourceSetWithPolicy","RealmHelper","CommonShare","realmRegex","resourcesetsRegex","policyRegex","ajaxPrefilter","options","test","url","getOverrideRealm","decorateURLWithOverrideRealm","extend","initialize","parentModel","template","events","enableOrDisableShareButton","subjectValid","$el","find","selectize","getValue","length","permissionsValid","prop","onParentModelError","model","response","console","error","responseJSON","code","reason","message","onParentModelSync","get","set","id","render","syncParentModel","syncRequired","stopListening","findOrCreate","_id","listenTo","fetch","renderDialog","args","callback","self","$div","modelId","type","TYPE_PRIMARY","title","t","size","SIZE_WIDE","cssClass","buttons","label","action","dialog","close","onshow","element","onshown","renderShareCounter","toBeCreated","afterShare","share","show","collection","grid","Array","data","name","icon","scopes","toJSON","permissions","Grid","columns","cell","editable","headerCell","ClassHeaderCell","className","Cell","formatted","pluck","join","empty","append","delegateEvents","emptyText","parentRender","renderUserOptions","renderPermissionOptions","el","parent","addClass","plugins","delimiter","persist","create","hideSelected","onChange","addPrecedence","value","existing","findWhere","subject","selectPermission","focus","setValue","reset","clear","save","subjects","each","scope","newPermissions","policy","forEach","permission","add","push","then","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST","status","remove","always","permissionCount"],"mappings":"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","file":"CommonShare.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/backgrid/Backgrid\",\n    \"org/forgerock/openam/ui/common/util/BackgridUtils\",\n    \"org/forgerock/commons/ui/common/components/BootstrapDialog\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/openam/ui/user/uma/views/share/ShareCounter\",\n    \"org/forgerock/openam/ui/user/uma/models/UMAPolicy\",\n    \"org/forgerock/openam/ui/user/uma/models/UMAPolicyPermission\",\n    \"org/forgerock/openam/ui/user/uma/models/UMAPolicyPermissionScope\",\n    \"org/forgerock/openam/ui/user/uma/models/UMAResourceSetWithPolicy\",\n    \"org/forgerock/openam/ui/common/util/RealmHelper\",\n\n    // jquery dependencies\n    \"selectize\"\n], function ($, _, AbstractView, Backgrid, BackgridUtils, BootstrapDialog, Constants, EventManager, ShareCounter,\n             UMAPolicy, UMAPolicyPermission, UMAPolicyPermissionScope, UMAResourceSetWithPolicy, RealmHelper) {\n    var CommonShare,\n        realmRegex = /[?&]realm=/,\n        resourcesetsRegex = /\\/json\\/users\\/[^/]+\\/uma\\/policies/,\n        policyRegex = /\\/json\\/users\\/[^/]+\\/oauth2\\/resourcesets/;\n\n    $.ajaxPrefilter(function (options) {\n        if ((resourcesetsRegex.test(options.url) || policyRegex.test(options.url)) && !realmRegex.test(options.url) &&\n                RealmHelper.getOverrideRealm()) {\n            options.url = RealmHelper.decorateURLWithOverrideRealm(options.url);\n        }\n    });\n\n    CommonShare = AbstractView.extend({\n        initialize () {\n            this.parentModel = null;\n        },\n        template: \"templates/user/uma/views/share/CommonShare.html\",\n        events: {\n            \"click input#shareButton\": \"save\"\n        },\n        enableOrDisableShareButton () {\n            var subjectValid = this.$el.find(\"#selectUser select\")[0].selectize.getValue().length > 0,\n                permissionsValid = this.$el.find(\"#selectPermission select\")[0].selectize.getValue().length > 0;\n\n            this.$el.find(\"input#shareButton\").prop(\"disabled\", !(subjectValid && permissionsValid));\n        },\n        onParentModelError (model, response) {\n            console.error(`Unrecoverable load failure UMAResourceSetWithPolicy. ${response.responseJSON.code} (${\n                response.responseJSON.reason\n            }) ${response.responseJSON.message}`);\n            // TODO : Fire and event message\n        },\n        onParentModelSync (model) {\n            // Hardwire the policyID into the policy as it's ID\n            model.get(\"policy\").set(\"policyId\", this.parentModel.id);\n\n            this.render();\n        },\n\n        /*\n         * @returns Boolean whether the parent model required sync'ing\n         */\n        syncParentModel (id) {\n            var syncRequired = !this.parentModel || (id && this.parentModel.id !== id);\n\n            if (syncRequired) {\n                this.stopListening(this.parentModel);\n\n                this.parentModel = UMAResourceSetWithPolicy.findOrCreate({ _id: id });\n                this.listenTo(this.parentModel, \"sync\", this.onParentModelSync);\n                this.listenTo(this.parentModel, \"error\", this.onParentModelError);\n                this.parentModel.fetch();\n            }\n\n            return syncRequired;\n        },\n\n        renderDialog (args, callback) {\n            var self = this,\n                $div = $(\"<div></div>\"),\n                modelId = args._id || args,\n                options = {\n                    type: BootstrapDialog.TYPE_PRIMARY,\n                    title: $.t(\"uma.share.shareResource\"),\n                    size: BootstrapDialog.SIZE_WIDE,\n                    cssClass: \"shareDialog\",\n                    message: $div,\n                    buttons: [{\n                        label: $.t(\"common.form.close\"),\n                        cssClass: \"btn-default\",\n                        action (dialog) {\n                            dialog.close();\n                        }\n                    }],\n                    onshow () {\n                        self.element = $div;\n                        self.render(modelId, callback);\n                    },\n\n                    onshown () {\n                        self.renderShareCounter(callback);\n                    }\n                };\n\n            this.toBeCreated = args.toBeCreated;\n            this.afterShare = args.share;\n            BootstrapDialog.show(options);\n        },\n\n        render (args, callback) {\n            var self = this,\n                collection,\n                grid;\n\n            // FIXME: Resolve unknown issue with args appearing as an Array\n            if (args instanceof Array) {\n                args = args[0];\n            }\n            /**\n             * Guard clause to check if model requires sync'ing/updating\n             * Reason: We do not know the id of the data we need until the render function is called with args,\n             * thus we can only check at this point if we have the correct model to render this view (the model\n             * might already contain the correct data).\n             * Behaviour: If the model does require sync'ing then we abort this render via the return and render\n             * will it invoked again when the model is updated\n             */\n            if (this.syncParentModel(args)) {\n                return;\n            }\n            this.data = {};\n            this.data.name = this.parentModel.get(\"name\");\n            this.data.icon = this.parentModel.get(\"icon_uri\");\n            this.data.scopes = this.parentModel.get(\"scopes\").toJSON();\n            collection = this.parentModel.get(\"policy\").get(\"permissions\");\n            this.data.permissions = collection.toJSON();\n\n            grid = new Backgrid.Grid({\n                columns: [{\n                    name: \"subject\",\n                    label: $.t(\"uma.resources.show.grid.0\"),\n                    cell: \"string\",\n                    editable: false,\n                    headerCell : BackgridUtils.ClassHeaderCell.extend({\n                        className: \"col-md-6\"\n                    })\n                },\n                {\n                    name: \"scopes\",\n                    label: $.t(\"uma.resources.show.grid.2\"),\n                    cell: Backgrid.Cell.extend({\n                        render () {\n                            var formatted = this.model.get(\"scopes\").pluck(\"name\").join(\", \");\n                            this.$el.empty();\n                            this.$el.append(formatted);\n                            this.delegateEvents();\n                            return this;\n                        }\n\n                    }),\n                    editable: false,\n                    headerCell : BackgridUtils.ClassHeaderCell.extend({\n                        className: \"col-md-6\"\n                    })\n                }],\n                collection,\n                emptyText: $.t(\"console.common.noResults\"),\n                className:\"backgrid table\"\n            });\n\n            this.parentRender(function () {\n                self.renderUserOptions();\n                self.renderPermissionOptions();\n                self.renderShareCounter(callback);\n                self.$el.find(\"#advancedView\").append(grid.render().el);\n                self.$el.find(\"#umaShareImage img\").error(function () {\n                    $(this).parent().addClass(\"fa-file-image-o no-image\");\n                });\n            });\n        },\n        renderPermissionOptions () {\n            var self = this;\n\n            this.$el.find(\"#selectPermission select\").selectize({\n                plugins: [\"restore_on_backspace\"],\n                delimiter: false,\n                persist: false,\n                create: false,\n                hideSelected: true,\n                onChange () {\n                    self.enableOrDisableShareButton();\n                }\n            });\n        },\n        renderUserOptions () {\n            var self = this;\n\n            this.$el.find(\"#selectUser select\").selectize({\n                addPrecedence: true,\n                create: true, // TODO: false when search for users is enabled\n                // TODO: Disable looking up users\n                // load: function (query, callback) {\n                //     if (query.length < self.MIN_QUERY_LENGTH) {\n                //         return callback();\n                //     }\n                //\n                //     UMAService.searchUsers(query)\n                //     .then(function (data) {\n                //         return _.map(data.result, function (username) {\n                //             return new User(username);\n                //         });\n                //     })\n                //     .done(function (users) {\n                //         callback(users);\n                //     })\n                //     .fail(function (event) {\n                //         console.error('error', event);\n                //         callback();\n                //     });\n                // },\n                onChange (value) {\n                    // Look for existing share and populate permissions if there one already exists\n\n                    var existing = self.parentModel.get(\"policy\").get(\"permissions\").findWhere({ subject: value }),\n                        scopes,\n                        selectPermission = self.$el.find(\"#selectPermission select\");\n\n                    if (existing) {\n                        scopes = existing.get(\"scopes\").pluck(\"name\");\n                        selectPermission[0].selectize.focus();\n                        selectPermission[0].selectize.setValue(scopes);\n                    }\n\n                    self.enableOrDisableShareButton();\n                }\n            });\n        },\n        reset () {\n            this.$el.find(\"#selectUser select\")[0].selectize.clear();\n            this.$el.find(\"#selectPermission select\")[0].selectize.clear();\n            this.$el.find(\"input#shareButton\").prop(\"disabled\", true);\n\n            this.renderShareCounter();\n        },\n        save () {\n            var permissions = this.parentModel.get(\"policy\").get(\"permissions\"),\n                subjects = this.$el.find(\"#selectUser select\")[0].selectize.getValue(),\n                scopes = _.each(this.$el.find(\"#selectPermission select\")[0].selectize.getValue(), function (scope) {\n                    return UMAPolicyPermissionScope.find({ id: scope });\n                }),\n                newPermissions = [],\n                policy;\n            _.forEach(subjects, function (subject) {\n                var permission = UMAPolicyPermission.findOrCreate({\n                    subject,\n                    scopes\n                });\n                permissions.add(permission);\n                newPermissions.push(permission);\n            });\n\n            policy = this.parentModel.get(\"policy\");\n            if (this.toBeCreated) {\n                policy.toBeCreated = this.toBeCreated;\n            }\n            policy.save().then(() => {\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"policyCreatedSuccess\");\n                this.reset();\n            }, (response) => {\n                if (response.status && response.status === 500) {\n                    _.forEach(newPermissions, function (permission) {\n                        permissions.remove(permission);\n                    });\n                }\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"policyCreatedFail\");\n            }).always(() => {\n                this.toBeCreated = false;\n                if (this.afterShare) {\n                    this.afterShare();\n                }\n            });\n        },\n\n        renderShareCounter (callback) {\n            var policy = this.parentModel.get(\"policy\"),\n                permissionCount = policy ? policy.get(\"permissions\").length : 0;\n            ShareCounter.render(permissionCount, callback);\n        }\n    });\n\n    return CommonShare;\n});\n"]}