{"version":3,"sources":["../../../../../../XUI/org/forgerock/commons/ui/common/LoginView.js"],"names":["define","_","placeholder","AbstractView","ModuleLoader","validatorsManager","eventManager","constants","cookieHelper","LoginView","extend","template","baseTemplate","events","partials","formSubmit","event","preventDefault","$el","find","length","expire","Date","setDate","getDate","setCookie","val","deleteCookie","sendEvent","EVENT_LOGIN_REQUEST","userName","password","render","args","callback","parentRender","bindValidators","login","getCookie","prop","validateAllFields","focus"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,YADI,EAEJ,aAFI,EAGJ,mDAHI,EAIJ,mDAJI,EAKJ,wDALI,EAMJ,mDANI,EAOJ,gDAPI,EAQJ,mDARI,CAAP,EASE,UAASC,CAAT,EAAYC,WAAZ,EAAyBC,YAAzB,EAAuCC,YAAvC,EAAqDC,iBAArD,EAAwEC,YAAxE,EAAsFC,SAAtF,EAAiGC,YAAjG,EAA+G;AAC9G,QAAIC,YAAYN,aAAaO,MAAb,CAAoB;AAChCC,kBAAU,qCADsB;AAEhCC,sBAAc,yCAFkB;;AAIhCC,gBAAQ;AACJ,wCAA4B,YADxB;AAEJ,0BAAc;AAFV,SAJwB;;AAShCC,kBAAU,CACN,yCADM,CATsB;;AAahCC,oBAAY,oBAASC,KAAT,EAAgB;AACxBA,kBAAMC,cAAN;AACA,gBAAG,KAAKC,GAAL,CAASC,IAAT,CAAc,8BAAd,EAA8CC,MAA9C,KAAyD,CAA5D,EAA+D;AAC3D,oBAAIC,SAAS,IAAIC,IAAJ,EAAb;AACAD,uBAAOE,OAAP,CAAeF,OAAOG,OAAP,KAAmB,MAAI,EAAtC;AACAhB,6BAAaiB,SAAb,CAAuB,OAAvB,EAAgC,KAAKP,GAAL,CAASC,IAAT,CAAc,mBAAd,EAAmCO,GAAnC,EAAhC,EAA0EL,MAA1E;AACH,aAJD,MAIO;AACHb,6BAAamB,YAAb,CAA0B,OAA1B;AACH;;AAEDrB,yBAAasB,SAAb,CAAuBrB,UAAUsB,mBAAjC,EAAsD;AAClDC,0BAAU,KAAKZ,GAAL,CAASC,IAAT,CAAc,mBAAd,EAAmCO,GAAnC,EADwC;AAElDK,0BAAU,KAAKb,GAAL,CAASC,IAAT,CAAc,sBAAd,EAAsCO,GAAtC;AAFwC,aAAtD;AAIH,SA3B+B;;AA6BhCM,gBAAQ,gBAASC,IAAT,EAAeC,QAAf,EAAyB;AAC7B,iBAAKC,YAAL,CAAkB,YAAW;AACzB9B,kCAAkB+B,cAAlB,CAAiC,KAAKlB,GAAtC;;AAEA,qBAAKA,GAAL,CAASC,IAAT,CAAc,OAAd,EAAuBjB,WAAvB;;AAEA,oBAAImC,QAAQ7B,aAAa8B,SAAb,CAAuB,OAAvB,CAAZ;AACA,oBAAID,KAAJ,EAAW;AACP,yBAAKnB,GAAL,CAASC,IAAT,CAAc,mBAAd,EAAmCO,GAAnC,CAAuCW,KAAvC,EAA8CE,IAA9C,CAAmD,WAAnD,EAAgE,KAAhE;AACA,yBAAKrB,GAAL,CAASC,IAAT,CAAc,sBAAd,EAAsCoB,IAAtC,CAA2C,SAA3C,EAAqD,IAArD;AACAlC,sCAAkBmC,iBAAlB,CAAoC,KAAKtB,GAAzC;AACA,yBAAKA,GAAL,CAASC,IAAT,CAAc,iBAAd,EAAiCsB,KAAjC;AACH,iBALD,MAKO;AACH,yBAAKvB,GAAL,CAASC,IAAT,CAAc,mBAAd,EAAmCsB,KAAnC;AACH;;AAED,oBAAIP,QAAJ,EAAc;AACVA;AACH;AAEJ,aAnBD;AAoBH;AAlD+B,KAApB,CAAhB;;AAqDA,WAAO,IAAIzB,SAAJ,EAAP;AACH,CAhEA","file":"LoginView.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"underscore\",\r\n    \"placeholder\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\r\n    \"org/forgerock/commons/ui/common/util/ModuleLoader\",\r\n    \"org/forgerock/commons/ui/common/main/ValidatorsManager\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\",\r\n    \"org/forgerock/commons/ui/common/util/CookieHelper\"\r\n], function(_, placeholder, AbstractView, ModuleLoader, validatorsManager, eventManager, constants, cookieHelper) {\r\n    var LoginView = AbstractView.extend({\r\n        template: \"templates/common/LoginTemplate.html\",\r\n        baseTemplate: \"templates/common/LoginBaseTemplate.html\",\r\n\r\n        events: {\r\n            \"click input[type=submit]\": \"formSubmit\",\r\n            \"onValidate\": \"onValidate\"\r\n        },\r\n\r\n        partials: [\r\n            \"partials/providers/_providerButton.html\"\r\n        ],\r\n\r\n        formSubmit: function(event) {\r\n            event.preventDefault();\r\n            if(this.$el.find(\"[name=loginRemember]:checked\").length !== 0) {\r\n                var expire = new Date();\r\n                expire.setDate(expire.getDate() + 365*20);\r\n                cookieHelper.setCookie(\"login\", this.$el.find(\"input[name=login]\").val(), expire);\r\n            } else {\r\n                cookieHelper.deleteCookie(\"login\");\r\n            }\r\n\r\n            eventManager.sendEvent(constants.EVENT_LOGIN_REQUEST, {\r\n                userName: this.$el.find(\"input[name=login]\").val(),\r\n                password: this.$el.find(\"input[name=password]\").val()\r\n            });\r\n        },\r\n\r\n        render: function(args, callback) {\r\n            this.parentRender(function() {\r\n                validatorsManager.bindValidators(this.$el);\r\n\r\n                this.$el.find(\"input\").placeholder();\r\n\r\n                var login = cookieHelper.getCookie(\"login\");\r\n                if (login) {\r\n                    this.$el.find(\"input[name=login]\").val(login).prop('autofocus', false);\r\n                    this.$el.find(\"[name=loginRemember]\").prop(\"checked\",true);\r\n                    validatorsManager.validateAllFields(this.$el);\r\n                    this.$el.find(\"[name=password]\").focus();\r\n                } else {\r\n                    this.$el.find(\"input[name=login]\").focus();\r\n                }\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n\r\n            });\r\n        }\r\n    });\r\n\r\n    return new LoginView();\r\n});"]}