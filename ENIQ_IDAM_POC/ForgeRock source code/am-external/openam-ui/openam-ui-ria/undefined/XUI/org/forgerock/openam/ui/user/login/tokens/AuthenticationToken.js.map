{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/user/login/tokens/AuthenticationToken.jsm"],"names":["set","get","remove","cookieName","cookieDomains","globalData","auth","secureCookie","token","setCookie","getCookie","deleteCookie"],"mappings":";;;;;;YAmCgBA,G,GAAAA,G;YAIAC,G,GAAAA,G;YAIAC,M,GAAAA,M;;;;;;;;;;;;AA3ChB;;;;;;;;;;;;;;;;AAgBA;;;;;;AASA,QAAMC,aAAa,QAAnB;;AAEA,aAASC,aAAT,GAA0B;AACtB,eAAO,wBAAcC,UAAd,CAAyBC,IAAzB,CAA8BF,aAArC;AACH;;AAED,aAASG,YAAT,GAAyB;AACrB,eAAO,wBAAcF,UAAd,CAAyBE,YAAhC;AACH;;AAEM,aAASP,GAAT,CAAcQ,KAAd,EAAqB;AACxB,eAAO,uBAAaC,SAAb,CAAuBN,UAAvB,EAAmCK,KAAnC,EAA0C,EAA1C,EAA8C,GAA9C,EAAmDJ,eAAnD,EAAoEG,cAApE,CAAP;AACH;;AAEM,aAASN,GAAT,GAAgB;AACnB,eAAO,uBAAaS,SAAb,CAAuBP,UAAvB,CAAP;AACH;;AAEM,aAASD,MAAT,GAAmB;AACtB,eAAO,uBAAaS,YAAb,CAA0BR,UAA1B,EAAsC,GAAtC,EAA2CC,eAA3C,CAAP;AACH","file":"AuthenticationToken.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\n/**\n * The Authentication Token (authId) used by OpenAM to track an authentication session, usually\n * this is an unauthenticated users progress through an authentication chain.\n * @module org/forgerock/openam/ui/user/login/tokens/AuthenticationToken\n */\n\nimport CookieHelper from \"org/forgerock/commons/ui/common/util/CookieHelper\";\nimport Configuration from \"org/forgerock/commons/ui/common/main/Configuration\";\n\nconst cookieName = \"authId\";\n\nfunction cookieDomains () {\n    return Configuration.globalData.auth.cookieDomains;\n}\n\nfunction secureCookie () {\n    return Configuration.globalData.secureCookie;\n}\n\nexport function set (token) {\n    return CookieHelper.setCookie(cookieName, token, \"\", \"/\", cookieDomains(), secureCookie());\n}\n\nexport function get () {\n    return CookieHelper.getCookie(cookieName);\n}\n\nexport function remove () {\n    return CookieHelper.deleteCookie(cookieName, \"/\", cookieDomains());\n}\n"]}