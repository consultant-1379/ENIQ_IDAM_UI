{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authorization/common/AbstractListView.js"],"names":["define","$","_","Messages","AbstractView","EventManager","Router","Constants","UIUtils","FormHelper","BackgridUtils","extend","toolbarTemplateID","initialize","prototype","call","onDeleteClick","e","msg","id","callback","preventDefault","showConfirmationBeforeDeleting","bind","deleteRecord","self","item","data","items","get","onSuccess","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST","destroy","success","wait","always","fetch","reset","editRecord","route","routeTo","args","map","realmPath","encodeURIComponent","trigger","bindDefaultHandlers","on","doubleSortFix","renderToolbar","fillTemplateWithData","toolbarTemplate","tpl","$el","find","html"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,qDAHG,EAIH,mDAJG,EAKH,mDALG,EAMH,6CANG,EAOH,gDAPG,EAQH,8CARG,EASH,gDATG,EAUH,mDAVG,CAAP,EAWG,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,QAAhB,EAA0BC,YAA1B,EAAwCC,YAAxC,EAAsDC,MAAtD,EAA8DC,SAA9D,EAAyEC,OAAzE,EAAkFC,UAAlF,EAA8FC,aAA9F,EAA6G;AAC5G,WAAON,aAAaO,MAAb,CAAoB;AACvBC,2BAAmB,qBADI;;AAGvBC,kBAHuB,wBAGT;AACVT,yBAAaU,SAAb,CAAuBD,UAAvB,CAAkCE,IAAlC,CAAuC,IAAvC;AACH,SALsB;AAOvBC,qBAPuB,yBAORC,CAPQ,EAOLC,GAPK,EAOAC,EAPA,EAOIC,QAPJ,EAOc;AACjCH,cAAEI,cAAF;;AAEAZ,uBAAWa,8BAAX,CAA0CJ,GAA1C,EAA+ChB,EAAEqB,IAAF,CAAO,KAAKC,YAAZ,EAA0B,IAA1B,EAAgCL,EAAhC,EAAoCC,QAApC,CAA/C;AACH,SAXsB;AAavBI,oBAbuB,wBAaTL,EAbS,EAaLC,QAbK,EAaK;AACxB,gBAAIK,OAAO,IAAX;AAAA,gBACIC,OAAOD,KAAKE,IAAL,CAAUC,KAAV,CAAgBC,GAAhB,CAAoBV,EAApB,CADX;AAAA,gBAEIW,YAAY,SAAZA,SAAY,GAAY;AACpBzB,6BAAa0B,SAAb,CAAuBxB,UAAUyB,6BAAjC,EAAgE,cAAhE;;AAEA,oBAAIZ,QAAJ,EAAc;AACVA;AACH;AACJ,aARL;;AAUAM,iBAAKO,OAAL,CAAa;AACTC,yBAASJ,SADA;AAETK,sBAAM;AAFG,aAAb,EAGGC,MAHH,CAGU,YAAY;AAClBX,qBAAKE,IAAL,CAAUC,KAAV,CAAgBS,KAAhB,CAAsB,EAAEC,OAAO,IAAT,EAAtB;AACH,aALD;AAMH,SA9BsB;AAgCvBC,kBAhCuB,sBAgCXtB,CAhCW,EAgCRE,EAhCQ,EAgCJqB,KAhCI,EAgCG;AACtB,gBAAIf,OAAO,IAAX;;AAEAnB,mBAAOmC,OAAP,CAAeD,KAAf,EAAsB;AAClBE,sBAAMxC,EAAEyC,GAAF,CAAM,CAAClB,KAAKmB,SAAN,EAAiBzB,EAAjB,CAAN,EAA4B0B,kBAA5B,CADY;AAElBC,yBAAS;AAFS,aAAtB;AAIH,SAvCsB;AAyCvBC,2BAzCuB,iCAyCA;AACnB,iBAAKpB,IAAL,CAAUC,KAAV,CAAgBoB,EAAhB,CAAmB,eAAnB,EAAoCtC,cAAcuC,aAAlD;AACH,SA3CsB;AA6CvBC,qBA7CuB,2BA6CN;AACb,gBAAIzB,OAAO,IAAX;;AAEAjB,oBAAQ2C,oBAAR,CAA6B,KAAKC,eAAlC,EAAmD,KAAKzB,IAAxD,EAA8D,UAAU0B,GAAV,EAAe;AACzE5B,qBAAK6B,GAAL,CAASC,IAAT,CAAc9B,KAAKb,iBAAnB,EAAsC4C,IAAtC,CAA2CH,GAA3C;AACH,aAFD;AAGH;AAnDsB,KAApB,CAAP;AAqDH,CAjED","file":"AbstractListView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/admin/utils/FormHelper\",\n    \"org/forgerock/openam/ui/common/util/BackgridUtils\"\n], function ($, _, Messages, AbstractView, EventManager, Router, Constants, UIUtils, FormHelper, BackgridUtils) {\n    return AbstractView.extend({\n        toolbarTemplateID: \"[data-grid-toolbar]\",\n\n        initialize () {\n            AbstractView.prototype.initialize.call(this);\n        },\n\n        onDeleteClick (e, msg, id, callback) {\n            e.preventDefault();\n\n            FormHelper.showConfirmationBeforeDeleting(msg, _.bind(this.deleteRecord, this, id, callback));\n        },\n\n        deleteRecord (id, callback) {\n            var self = this,\n                item = self.data.items.get(id),\n                onSuccess = function () {\n                    EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"changesSaved\");\n\n                    if (callback) {\n                        callback();\n                    }\n                };\n\n            item.destroy({\n                success: onSuccess,\n                wait: true\n            }).always(function () {\n                self.data.items.fetch({ reset: true });\n            });\n        },\n\n        editRecord (e, id, route) {\n            var self = this;\n\n            Router.routeTo(route, {\n                args: _.map([self.realmPath, id], encodeURIComponent),\n                trigger: true\n            });\n        },\n\n        bindDefaultHandlers () {\n            this.data.items.on(\"backgrid:sort\", BackgridUtils.doubleSortFix);\n        },\n\n        renderToolbar () {\n            var self = this;\n\n            UIUtils.fillTemplateWithData(this.toolbarTemplate, this.data, function (tpl) {\n                self.$el.find(self.toolbarTemplateID).html(tpl);\n            });\n        }\n    });\n});\n"]}