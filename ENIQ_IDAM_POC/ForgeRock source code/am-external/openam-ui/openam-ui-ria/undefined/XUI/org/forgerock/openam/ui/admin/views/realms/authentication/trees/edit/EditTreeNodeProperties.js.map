{"version":3,"sources":["../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/trees/edit/EditTreeNodeProperties.jsx"],"names":["EditTreeNodeProperties","isExpanded","nodeId","nodeName","nodeType","onFieldChange","onPropertiesChange","properties","schema","handleOnFieldChange","formData","handlePropertiesChange","title","content","propTypes","bool","isRequired","string","func","objectOf","any"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAwBA,QAAMA,yBAAyB,SAAzBA,sBAAyB,OACd;AAAA,YADiBC,UACjB,QADiBA,UACjB;AAAA,YAD6BC,MAC7B,QAD6BA,MAC7B;AAAA,YADqCC,QACrC,QADqCA,QACrC;AAAA,YAD+CC,QAC/C,QAD+CA,QAC/C;AAAA,YADyDC,aACzD,QADyDA,aACzD;AAAA,YADwEC,kBACxE,QADwEA,kBACxE;AAAA,YAD4FC,UAC5F,QAD4FA,UAC5F;AAAA,YAAbC,MAAa,QAAbA,MAAa;;AACb,YAAMC,sBAAsB,SAAtBA,mBAAsB;AAAA,gBAAGC,QAAH,SAAGA,QAAH;AAAA,mBAAkBL,cAAcK,QAAd,CAAlB;AAAA,SAA5B;AACA,YAAMC,yBAAyB,SAAzBA,sBAAyB;AAAA,mBAAML,mBAAmBJ,MAAnB,EAA2BE,QAA3B,EAAqCG,UAArC,CAAN;AAAA,SAA/B;;AAEA,YAAIK,cAAJ;AACA,YAAIC,gBAAJ;;AAEA,YAAIZ,UAAJ,EAAgB;AACZW,oBAAQ;AAAA;AAAA,kBAAI,WAAU,0CAAd;AAA2DT;AAA3D,aAAR;AACAU,sBAAU,iBAAIL,MAAJ,EAAY,YAAZ,IAEF;AAAA;AAAA;AACI,8BAAWD,UADf;AAEI,4BAASI,sBAFb;AAGI,8BAAWF,mBAHf;AAII,8BAAWE,sBAJf;AAKI,4BAASH;AALb;AAOI,0DAAQ,WAAU,QAAlB,EAA2B,MAAK,QAAhC;AAPJ,aAFE,GAaF;AAAA;AAAA,kBAAO,SAAQ,MAAf;AACI;AAAA;AAAA;AAAK,oCAAE,iEAAF;AAAL;AADJ,aAbR;AAiBH;;AAED,eACI;AAAA;AAAA;AACI,2BAAY,0BAAW;AACnB,6CAAyB,IADN;AAEnB,8CAA0B,IAFP;AAGnB,gCAAY,CAAC,CAACP;AAHK,iBAAX;AADhB;AAOMW,iBAPN;AAQMC;AARN,SADJ;AAYH,KAzCD;;AA2CAb,2BAAuBc,SAAvB,GAAmC;AAC/Bb,oBAAY,iBAAUc,IAAV,CAAeC,UADI;AAE/Bd,gBAAQ,iBAAUe,MAFa;AAG/Bd,kBAAU,iBAAUc,MAHW;AAI/Bb,kBAAU,iBAAUa,MAJW;AAK/BZ,uBAAe,iBAAUa,IAAV,CAAeF,UALC;AAM/BV,4BAAoB,iBAAUY,IAAV,CAAeF,UANJ;AAO/BT,oBAAY,iBAAUY,QAAV,CAAmB,iBAAUC,GAA7B,CAPmB;AAQ/BZ,gBAAQ,iBAAUW,QAAV,CAAmB,iBAAUC,GAA7B;AARuB,KAAnC;;sBAWepB,sB","file":"EditTreeNodeProperties.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { Alert } from \"react-bootstrap\";\nimport { has } from \"lodash\";\nimport { t } from \"i18next\";\nimport classnames from \"classnames\";\nimport React, { PropTypes } from \"react\";\n\nimport Form from \"components/form/Form\";\n\nconst EditTreeNodeProperties = ({ isExpanded, nodeId, nodeName, nodeType, onFieldChange, onPropertiesChange, properties,\n    schema }) => {\n    const handleOnFieldChange = ({ formData }) => onFieldChange(formData);\n    const handlePropertiesChange = () => onPropertiesChange(nodeId, nodeType, properties);\n\n    let title;\n    let content;\n\n    if (isExpanded) {\n        title = <h4 className=\"authtree-content-side-title text-primary\">{ nodeName }</h4>;\n        content = has(schema, \"properties\")\n            ? (\n                <Form\n                    formData={ properties }\n                    onBlur={ handlePropertiesChange }\n                    onChange={ handleOnFieldChange }\n                    onSubmit={ handlePropertiesChange }\n                    schema={ schema }\n                >\n                    <button className=\"hidden\" type=\"submit\" />\n                </Form>\n            )\n            : (\n                <Alert bsStyle=\"info\">\n                    <p>{ t(\"console.authentication.trees.edit.nodes.properties.noProperties\") }</p>\n                </Alert>\n            );\n    }\n\n    return (\n        <div\n            className={ classnames({\n                \"authtree-content-side\": true,\n                \"authtree-content-right\": true,\n                \"expanded\": !!isExpanded\n            }) }\n        >\n            { title }\n            { content }\n        </div>\n    );\n};\n\nEditTreeNodeProperties.propTypes = {\n    isExpanded: PropTypes.bool.isRequired,\n    nodeId: PropTypes.string,\n    nodeName: PropTypes.string,\n    nodeType: PropTypes.string,\n    onFieldChange: PropTypes.func.isRequired,\n    onPropertiesChange: PropTypes.func.isRequired,\n    properties: PropTypes.objectOf(PropTypes.any),\n    schema: PropTypes.objectOf(PropTypes.any)\n};\n\nexport default EditTreeNodeProperties;\n"]}