{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/user/uma/views/request/EditRequest.js"],"names":["define","$","Backbone","Backgrid","AbstractView","Configuration","Router","Constants","fetchUrl","BackgridUtils","UMAService","PermissionsCell","EditRequest","extend","template","events","allowRequest","approveRequest","model","get","done","routeTo","configuration","routes","umaRequestList","args","trigger","denyRequest","render","callback","self","id","columns","grid","RequestCollection","Collection","url","context","default","loggedUser","name","label","t","cell","editable","DatetimeAgoCell","headerCell","ClassHeaderCell","className","onChange","value","set","silent","anySelected","$el","parent","find","prop","data","requests","Grid","collection","emptyText","parentRender","append","el","fetch","reset","processData","findWhere","_id","fail"],"mappings":"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","file":"EditRequest.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"backbone\",\n    \"org/forgerock/commons/ui/common/backgrid/Backgrid\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Configuration\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/common/services/fetchUrl\",\n    \"org/forgerock/openam/ui/common/util/BackgridUtils\",\n    \"org/forgerock/openam/ui/user/uma/services/UMAService\",\n    \"org/forgerock/openam/ui/user/uma/views/backgrid/cells/PermissionsCell\"\n], function ($, Backbone, Backgrid, AbstractView, Configuration, Router, Constants, fetchUrl, BackgridUtils,\n             UMAService, PermissionsCell) {\n    var EditRequest = AbstractView.extend({\n        template: \"templates/user/uma/views/request/EditRequestTemplate.html\",\n        events: {\n            \"click button[data-permission=allow]\": \"allowRequest\",\n            \"click button[data-permission=deny]\": \"denyRequest\"\n        },\n\n        allowRequest () {\n            UMAService.approveRequest(this.model.get(\"_id\"), this.model.get(\"permissions\")).done(function () {\n                Router.routeTo(Router.configuration.routes.umaRequestList, {\n                    args: [],\n                    trigger: true\n                });\n            });\n        },\n\n        denyRequest () {\n            UMAService.denyRequest(this.model.get(\"_id\")).done(function () {\n                Router.routeTo(Router.configuration.routes.umaRequestList, {\n                    args: [],\n                    trigger: true\n                });\n            });\n        },\n\n        render (args, callback) {\n            var self = this,\n                id = null,\n                columns,\n                grid,\n                RequestCollection;\n\n            id = args[0];\n\n            RequestCollection = Backbone.Collection.extend({\n                url: `${Constants.context}/json${\n                    fetchUrl.default(`/users/${Configuration.loggedUser.get(\"username\")}/uma/pendingrequests/${id}`)\n                }`\n            });\n\n            columns = [{\n                name: \"user\",\n                label: $.t(\"uma.requests.grid.header.0\"),\n                cell: \"string\",\n                editable: false\n            }, {\n                name: \"resource\",\n                label: $.t(\"uma.requests.grid.header.1\"),\n                cell: \"string\",\n                editable: false\n            }, {\n                name: \"when\",\n                label: $.t(\"uma.requests.grid.header.2\"),\n                cell: BackgridUtils.DatetimeAgoCell,\n                editable: false\n            }, {\n                name: \"permissions\",\n                label: $.t(\"uma.requests.grid.header.3\"),\n                headerCell: BackgridUtils.ClassHeaderCell.extend({\n                    className: \"col-xs-7 col-md-6\"\n                }),\n                cell: PermissionsCell.extend({\n                    onChange (value) {\n                        this.model.set(\"permissions\", value, { silent: true });\n                        var anySelected = value !== null;\n                        this.$el.parent().find(\"[data-permission=allow]\").prop(\"disabled\", !anySelected);\n                    }\n                }),\n                editable: false\n            }];\n\n            this.data.requests = new RequestCollection();\n\n            grid = new Backgrid.Grid({\n                columns,\n                className: \"backgrid table\",\n                collection: this.data.requests,\n                emptyText: $.t(\"console.common.noResults\")\n            });\n\n            this.parentRender(function () {\n                self.$el.find(\".table-container\").append(grid.render().el);\n                self.data.requests.fetch({ reset: true, processData: false }).done(function () {\n                    self.model = self.data.requests.findWhere({ _id: id });\n                    if (callback) { callback(); }\n                }).fail(function () {\n                    self.$el.find(\"button[data-permission]\").prop(\"disabled\", true);\n                });\n            });\n        }\n    });\n\n    return new EditRequest();\n});\n"]}