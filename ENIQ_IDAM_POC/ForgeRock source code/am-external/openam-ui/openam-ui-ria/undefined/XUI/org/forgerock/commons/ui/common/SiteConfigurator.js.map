{"version":3,"sources":["../../../../../../XUI/org/forgerock/commons/ui/common/SiteConfigurator.js"],"names":["define","$","_","AbstractConfigurationAware","constants","eventManager","conf","ModuleLoader","obj","initialized","registerListener","EVENT_READ_CONFIGURATION_REQUEST","globalData","setProperty","auth","delegateCache","configuration","remoteConfig","load","delegate","then","configurationDelegate","getConfiguration","config","processConfiguration","sendEvent","EVENT_APP_INITIALIZED","extend","defaultNotificationType","defaultType","notificationTypes","roles","userRoles","cookieName","cookieDomains","domains","configurePage","route","params","promise","Deferred","checkForDifferences","resolve"],"mappings":"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","file":"SiteConfigurator.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"underscore\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractConfigurationAware\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\",\r\n    \"org/forgerock/commons/ui/common/main/Configuration\",\r\n    \"org/forgerock/commons/ui/common/util/ModuleLoader\"\r\n], function($, _, AbstractConfigurationAware, constants, eventManager, conf, ModuleLoader) {\r\n    var obj = new AbstractConfigurationAware();\r\n\r\n    obj.initialized = false;\r\n\r\n    eventManager.registerListener(constants.EVENT_READ_CONFIGURATION_REQUEST, function() {\r\n        if (!conf.globalData) {\r\n            conf.setProperty('globalData', {});\r\n            conf.globalData.auth = {};\r\n        }\r\n\r\n        if (!conf.delegateCache) {\r\n            conf.setProperty('delegateCache', {});\r\n        }\r\n\r\n        if (obj.configuration && obj.initialized === false) {\r\n            obj.initialized = true;\r\n\r\n            if (obj.configuration.remoteConfig === true) {\r\n                ModuleLoader.load(obj.configuration.delegate).then(function (configurationDelegate) {\r\n                    configurationDelegate.getConfiguration(function(config) {\r\n                        obj.processConfiguration(config);\r\n                        eventManager.sendEvent(constants.EVENT_APP_INITIALIZED);\r\n                    }, function() {\r\n                        obj.processConfiguration({});\r\n                        eventManager.sendEvent(constants.EVENT_APP_INITIALIZED);\r\n                    });\r\n                });\r\n            } else {\r\n                obj.processConfiguration(obj.configuration);\r\n                eventManager.sendEvent(constants.EVENT_APP_INITIALIZED);\r\n            }\r\n        }\r\n    });\r\n\r\n    obj.processConfiguration = function(config) {\r\n        // whatever settings were found will be saved in globalData\r\n        _.extend(conf.globalData, config);\r\n\r\n        if (config.defaultNotificationType) {\r\n            conf.defaultType = config.defaultNotificationType;\r\n        }\r\n\r\n        if (config.notificationTypes) {\r\n            conf.notificationTypes = config.notificationTypes;\r\n        }\r\n\r\n        if (config.roles) {\r\n            conf.globalData.userRoles = config.roles;\r\n        }\r\n\r\n        conf.globalData.auth.cookieName = config.cookieName;\r\n        conf.globalData.auth.cookieDomains = config.domains;\r\n    };\r\n\r\n    obj.configurePage = function (route, params) {\r\n        var promise = $.Deferred();\r\n\r\n        if (obj.configuration.remoteConfig === true) {\r\n            ModuleLoader.load(obj.configuration.delegate).then(function (configurationDelegate) {\r\n                if (typeof configurationDelegate.checkForDifferences === \"function\") {\r\n                    configurationDelegate.checkForDifferences(route, params).then(function (config) {\r\n                        if (config) {\r\n                            obj.processConfiguration(config);\r\n                        }\r\n                        promise.resolve();\r\n                    });\r\n                } else {\r\n                    promise.resolve();\r\n                }\r\n            });\r\n        } else {\r\n            promise.resolve();\r\n        }\r\n\r\n        return promise;\r\n    };\r\n\r\n    return obj;\r\n});"]}