{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/components/Dialog.js"],"names":["define","$","_","AbstractView","UIUtils","Constants","EventManager","Configuration","extend","template","element","data","mode","events","actions","stop","event","stopPropagation","show","callback","map","a","type","buttonClass","setElement","parentRender","bind","$el","addClass","find","off","on","close","loadContent","delegateEvents","renderTemplate","contentTemplate","globalData","noop","render","e","preventDefault","length","removeClass","hide","sendEvent","EVENT_DIALOG_CLOSE","remove","addAction","name","getAction","push","addTitle","title","dialogTitle"],"mappings":"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","file":"Dialog.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"underscore\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\r\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\",\r\n    \"org/forgerock/commons/ui/common/main/Configuration\"\r\n], function($, _, AbstractView, UIUtils, Constants, EventManager, Configuration) {\r\n    /**\r\n     * @exports org/forgerock/commons/ui/common/components/Dialog\r\n     */\r\n    return AbstractView.extend({\r\n        template: \"templates/common/DialogTemplate.html\",\r\n        element: \"#dialogs\",\r\n\r\n        data: { },\r\n\r\n        mode: \"append\",\r\n\r\n        events: {\r\n            \"click .dialogCloseCross\": \"close\",\r\n            \"click input[name='close']\": \"close\",\r\n            \"click .dialogContainer\": \"stop\"\r\n        },\r\n\r\n        actions: [\r\n            {\r\n                \"type\": \"button\",\r\n                \"name\": \"close\"\r\n            }\r\n        ],\r\n\r\n        stop: function(event) {\r\n            event.stopPropagation();\r\n        },\r\n\r\n        /**\r\n         * Creates new dialog in #dialogs div. Fills it with dialog template.\r\n         * Then creates actions buttons and bind events. If actions map is empty, default\r\n         * close action is added.\r\n         */\r\n        show: function(callback) {\r\n\r\n            this.data.actions = _.map(this.actions, function (a) {\r\n                if (a.type === \"submit\") {\r\n                    a.buttonClass = \"btn-primary\";\r\n                } else {\r\n                    a.buttonClass = \"btn-default\";\r\n                }\r\n                return a;\r\n            });\r\n\r\n            this.setElement($(\"#dialogs\"));\r\n            this.parentRender(_.bind(function() {\r\n\r\n                this.$el.addClass('show');\r\n                this.setElement(this.$el.find(\".dialogContainer:last\"));\r\n\r\n                $(\"#dialog-background\").addClass('show');\r\n                this.$el.off('click').on('click', _.bind(this.close, this));\r\n\r\n                this.loadContent(callback);\r\n                this.delegateEvents();\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Loads template from 'contentTemplate'\r\n         */\r\n        loadContent: function(callback) {\r\n            UIUtils.renderTemplate(\r\n                this.contentTemplate,\r\n                this.$el.find(\".dialogContent\"),\r\n                _.extend({}, Configuration.globalData, this.data),\r\n                callback ? _.bind(callback, this) : _.noop(),\r\n                \"append\");\r\n        },\r\n\r\n        render: function() {\r\n            this.show();\r\n        },\r\n\r\n        close: function(e) {\r\n            if (e) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            if ($(\".dialogContainer\").length < 2) {\r\n                $(\"#dialog-background\").removeClass('show');\r\n                $(\"#dialogs\").removeClass('show');\r\n                $(\"#dialogs\").hide();\r\n            }\r\n\r\n            EventManager.sendEvent(Constants.EVENT_DIALOG_CLOSE);\r\n\r\n            this.$el.remove();\r\n        },\r\n\r\n        addAction: function(name, type) {\r\n            if(!this.getAction(name)) {\r\n                this.actions.push({\r\n                    \"name\" : name,\r\n                    \"type\" : type\r\n                });\r\n            }\r\n        },\r\n\r\n        addTitle: function(title) {\r\n            this.data.dialogTitle = title;\r\n        },\r\n\r\n        getAction: function(name) {\r\n            return _.find(this.actions, function(a) {\r\n                return a.name === name;\r\n            });\r\n        }\r\n    });\r\n});"]}