{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/user/dashboard/views/DevicesSettingsDialog.js"],"names":["define","$","_","BootstrapDialog","Messages","UIUtils","DeviceManagementService","closeDialog","dialog","close","template","authSkip","checkDevicesOathSkippable","show","title","t","cssClass","message","buttons","label","action","$modalBody","find","is","setDevicesOathSkippable","then","response","addMessage","type","TYPE_DANGER","onshown","when","skip","compileTemplate","authNeeded","tpl","append"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,4DAHG,EAIH,qDAJG,EAKH,8CALG,EAMH,yEANG,CAAP,EAOG,UAACC,CAAD,EAAIC,CAAJ,EAAOC,eAAP,EAAwBC,QAAxB,EAAkCC,OAAlC,EAA2CC,uBAA3C,EAAuE;AACtE,aAASC,WAAT,CAAsBC,MAAtB,EAA8B;AAC1BA,eAAOC,KAAP;AACH;;AAED,WAAO,YAAY;AACf,YAAMC,WAAW,6DAAjB;AACA,YAAIC,WAAWL,wBAAwBM,yBAAxB,EAAf;;AAEAT,wBAAgBU,IAAhB,CAAqB;AACjBC,mBAAOb,EAAEc,CAAF,CAAI,+CAAJ,CADU;AAEjBC,sBAAU,kBAFO;AAGjBC,qBAAShB,EAAE,aAAF,CAHQ;AAIjBiB,qBAAS,CAAC;AACNC,uBAAOlB,EAAEc,CAAF,CAAI,oBAAJ,CADD;AAENK,wBAAQb;AAFF,aAAD,EAGN;AACCY,uBAAOlB,EAAEc,CAAF,CAAI,kBAAJ,CADR;AAECC,0BAAU,aAFX;AAGCI,sBAHD,kBAGSZ,MAHT,EAGiB;AACZG,+BAAW,CAACH,OAAOa,UAAP,CAAkBC,IAAlB,CAAuB,aAAvB,EAAsCC,EAAtC,CAAyC,UAAzC,CAAZ;AACAjB,4CAAwBkB,uBAAxB,CAAgDb,QAAhD,EAA0Dc,IAA1D,CAA+D,YAAM;AACjEjB,+BAAOC,KAAP;AACH,qBAFD,EAEG,UAACiB,QAAD,EAAc;AACbtB,iCAASuB,UAAT,CAAoB;AAChBC,kCAAMxB,SAASyB,WADC;AAEhBH;AAFgB,yBAApB;AAIH,qBAPD;AAQH;AAbF,aAHM,CAJQ;AAuBjBI,mBAvBiB,mBAuBRtB,MAvBQ,EAuBA;AACbP,kBAAE8B,IAAF,CAAOpB,QAAP,EAAiBc,IAAjB,CAAsB,UAACO,IAAD,EAAU;AAC5B,2BAAO3B,QAAQ4B,eAAR,CAAwBvB,QAAxB,EAAkC,EAAEwB,YAAY,CAACF,IAAf,EAAlC,CAAP;AACH,iBAFD,EAEG,UAACN,QAAD,EAAc;AACbtB,6BAASuB,UAAT,CAAoB;AAChBC,8BAAMxB,SAASyB,WADC;AAEhBH;AAFgB,qBAApB;AAIH,iBAPD,EAOGD,IAPH,CAOQ,UAACU,GAAD,EAAS;AACb3B,2BAAOa,UAAP,CAAkBe,MAAlB,CAAyBD,GAAzB;AACH,iBATD;AAUH;AAlCgB,SAArB;AAoCH,KAxCD;AAyCH,CArDD","file":"DevicesSettingsDialog.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/components/BootstrapDialog\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/user/dashboard/services/DeviceManagementService\"\n], ($, _, BootstrapDialog, Messages, UIUtils, DeviceManagementService) => {\n    function closeDialog (dialog) {\n        dialog.close();\n    }\n\n    return function () {\n        const template = \"templates/user/dashboard/DevicesSettingsDialogTemplate.html\";\n        let authSkip = DeviceManagementService.checkDevicesOathSkippable();\n\n        BootstrapDialog.show({\n            title: $.t(\"openam.authDevices.devicesSettingDialog.title\"),\n            cssClass: \"devices-settings\",\n            message: $(\"<div></div>\"),\n            buttons: [{\n                label: $.t(\"common.form.cancel\"),\n                action: closeDialog\n            }, {\n                label: $.t(\"common.form.save\"),\n                cssClass: \"btn-primary\",\n                action (dialog) {\n                    authSkip = !dialog.$modalBody.find(\"#oathStatus\").is(\":checked\");\n                    DeviceManagementService.setDevicesOathSkippable(authSkip).then(() => {\n                        dialog.close();\n                    }, (response) => {\n                        Messages.addMessage({\n                            type: Messages.TYPE_DANGER,\n                            response\n                        });\n                    });\n                }\n            }\n            ],\n            onshown (dialog) {\n                $.when(authSkip).then((skip) => {\n                    return UIUtils.compileTemplate(template, { authNeeded: !skip });\n                }, (response) => {\n                    Messages.addMessage({\n                        type: Messages.TYPE_DANGER,\n                        response\n                    });\n                }).then((tpl) => {\n                    dialog.$modalBody.append(tpl);\n                });\n            }\n        });\n    };\n});\n"]}