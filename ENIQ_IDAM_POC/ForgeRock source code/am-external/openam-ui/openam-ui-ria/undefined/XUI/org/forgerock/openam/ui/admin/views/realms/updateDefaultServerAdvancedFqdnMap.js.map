{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/updateDefaultServerAdvancedFqdnMap.jsm"],"names":["getKey","alias","updateDefaultServerAdvancedFqdnMap","realm","currentDnsAliases","originalDnsAliases","createFqdnMapKeys","aliases","map","newDnsAliases","difference","fqdnMapKeysToAdd","fqdnMapKeysToRemove","deferred","Deferred","servers","get","DEFAULT_SERVER","ADVANCED_SECTION","then","data","valuesWithoutRemovedKeys","removeByValues","values","raw","newValues","value","key","update","concat","resolve","reject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,QAAMA,SAAS,SAATA,MAAS,CAACC,KAAD;AAAA,oDAA8CA,KAA9C;AAAA,KAAf;;AAEA,QAAMC,qCAAqC,SAArCA,kCAAqC,CAACC,KAAD,EAAQC,iBAAR,EAA2BC,kBAA3B,EAAkD;AACzF,YAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,OAAD;AAAA,mBAAa,iBAAEC,GAAF,CAAMD,OAAN,EAAe,UAACN,KAAD,EAAW;AAC7D,uBAAOD,OAAOC,KAAP,CAAP;AACH,aAFsC,CAAb;AAAA,SAA1B;;AAIA,YAAMQ,gBAAgB,iBAAEC,UAAF,CAAaN,iBAAb,EAAgCC,kBAAhC,CAAtB;AACA,YAAMM,mBAAmBL,kBAAkBG,aAAlB,CAAzB;AACA,YAAMG,sBAAsBN,kBAAkB,iBAAEI,UAAF,CAAaL,kBAAb,EAAiCD,iBAAjC,CAAlB,CAA5B;AACA,YAAMS,WAAW,iBAAEC,QAAF,EAAjB;;AAEA,iCAAeC,OAAf,CAAuBC,GAAvB,CACI,yBAAeD,OAAf,CAAuBE,cAD3B,EAEI,yBAAeF,OAAf,CAAuBG,gBAF3B,EAGEC,IAHF,CAGO,UAACC,IAAD,EAAU;AACb,gBAAMC,2BAA2B,iBAAEC,cAAF,CAC7BF,KAAKG,MAAL,CAAYC,GADiB,EACZ,KADY,+BACDZ,mBADC,sBACuBD,gBADvB,GAAjC;;AAGA,gBAAMc,YAAY,iBAAEjB,GAAF,CAAMC,aAAN,EAAqB,UAACiB,KAAD,EAAW;AAC9C,oBAAMC,MAAM3B,OAAO0B,KAAP,CAAZ;AACA,uBAAO,EAAEC,QAAF,EAAOD,YAAP,EAAP;AACH,aAHiB,CAAlB;;AAKA,qCAAeX,OAAf,CAAuBa,MAAvB,CACI,yBAAeb,OAAf,CAAuBG,gBAD3B,sBAEO,yBAAeH,OAAf,CAAuBG,gBAF9B,EAEkDG,yBAAyBQ,MAAzB,CAAgCJ,SAAhC,CAFlD,GAGI,yBAAeV,OAAf,CAAuBE,cAH3B,EAIEE,IAJF,CAION,SAASiB,OAJhB,EAIyBjB,SAASkB,MAJlC;AAKH,SAjBD,EAiBGlB,SAASkB,MAjBZ;;AAmBA,eAAOlB,QAAP;AACH,KA9BD;;sBAgCeX,kC","file":"updateDefaultServerAdvancedFqdnMap.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\n/**\n * @module org/forgerock/openam/ui/admin/views/realms/updateDefaultServerAdvancedFqdnMap\n */\n\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport ServersService from \"org/forgerock/openam/ui/admin/services/global/ServersService\";\n\nconst getKey = (alias) => `com.sun.identity.server.fqdnMap[${alias}]`;\n\nconst updateDefaultServerAdvancedFqdnMap = (realm, currentDnsAliases, originalDnsAliases) => {\n    const createFqdnMapKeys = (aliases) => _.map(aliases, (alias) => {\n        return getKey(alias);\n    });\n\n    const newDnsAliases = _.difference(currentDnsAliases, originalDnsAliases);\n    const fqdnMapKeysToAdd = createFqdnMapKeys(newDnsAliases);\n    const fqdnMapKeysToRemove = createFqdnMapKeys(_.difference(originalDnsAliases, currentDnsAliases));\n    const deferred = $.Deferred();\n\n    ServersService.servers.get(\n        ServersService.servers.DEFAULT_SERVER,\n        ServersService.servers.ADVANCED_SECTION\n    ).then((data) => {\n        const valuesWithoutRemovedKeys = _.removeByValues(\n            data.values.raw, \"key\", [...fqdnMapKeysToRemove, ...fqdnMapKeysToAdd]);\n\n        const newValues = _.map(newDnsAliases, (value) => {\n            const key = getKey(value);\n            return { key, value };\n        });\n\n        ServersService.servers.update(\n            ServersService.servers.ADVANCED_SECTION,\n            { [ServersService.servers.ADVANCED_SECTION] : valuesWithoutRemovedKeys.concat(newValues) },\n            ServersService.servers.DEFAULT_SERVER\n        ).then(deferred.resolve, deferred.reject);\n    }, deferred.reject);\n\n    return deferred;\n};\n\nexport default updateDefaultServerAdvancedFqdnMap;\n"]}