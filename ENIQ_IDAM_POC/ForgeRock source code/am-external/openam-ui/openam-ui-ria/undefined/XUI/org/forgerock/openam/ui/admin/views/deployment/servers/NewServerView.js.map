{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/deployment/servers/NewServerView.js"],"names":["define","$","_","Messages","AbstractView","Router","URIUtils","ServersService","Backlink","getTrimmedValue","field","val","trim","sendErrorMessage","response","addMessage","type","TYPE_DANGER","routeToEdit","id","routeTo","configuration","routes","editServerGeneral","args","trigger","NewServerView","extend","template","events","render","data","fragments","getCurrentFragment","split","isCloneView","indexOf","title","buttonTitle","parentRender","createServer","serverUrl","$el","find","servers","clone","then","clonedId","create","_id","toggleCreateButton","event","currentTarget","valid","prop"],"mappings":"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","file":"NewServerView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/URIUtils\",\n    \"org/forgerock/openam/ui/admin/services/global/ServersService\",\n    \"org/forgerock/openam/ui/admin/views/common/Backlink\"\n], ($, _, Messages, AbstractView, Router, URIUtils, ServersService, Backlink) => {\n    const getTrimmedValue = (field) => field.val().trim();\n    const sendErrorMessage = (response) => {\n        Messages.addMessage({ response, type: Messages.TYPE_DANGER });\n    };\n    const routeToEdit = (id) => {\n        Router.routeTo(Router.configuration.routes.editServerGeneral, {\n            args: [id],\n            trigger: true\n        });\n    };\n\n    const NewServerView = AbstractView.extend({\n        template: \"templates/admin/views/deployment/servers/NewServerTemplate.html\",\n        events: {\n            \"click [data-create]\": \"createServer\",\n            \"keyup [data-server-url]\": \"toggleCreateButton\"\n        },\n        render ([id]) {\n            this.data.id = id;\n            const fragments = URIUtils.getCurrentFragment().split(\"/\");\n            this.isCloneView = fragments.indexOf(\"clone\") !== -1;\n            if (this.isCloneView) {\n                this.data.title = \"console.servers.clone.title\";\n                this.data.buttonTitle = \"common.form.clone\";\n            } else {\n                this.data.title = \"console.servers.new.title\";\n                this.data.buttonTitle = \"common.form.create\";\n            }\n            this.parentRender(() => { new Backlink().render(); });\n            return this;\n        },\n        createServer () {\n            const serverUrl = getTrimmedValue(this.$el.find(\"[data-server-url]\"));\n\n            if (this.isCloneView) {\n                ServersService.servers.clone(this.data.id, serverUrl).then((response) => {\n                    routeToEdit(response.clonedId);\n                }, sendErrorMessage);\n            } else {\n                ServersService.servers.create({ \"url\": serverUrl }).then((response) => {\n                    routeToEdit(response._id);\n                }, sendErrorMessage);\n            }\n        },\n        toggleCreateButton (event) {\n            const serverUrl = getTrimmedValue($(event.currentTarget));\n            const valid = serverUrl !== \"\";\n\n            this.$el.find(\"[data-create]\").prop(\"disabled\", !valid);\n        }\n    });\n\n    return new NewServerView();\n});\n"]}