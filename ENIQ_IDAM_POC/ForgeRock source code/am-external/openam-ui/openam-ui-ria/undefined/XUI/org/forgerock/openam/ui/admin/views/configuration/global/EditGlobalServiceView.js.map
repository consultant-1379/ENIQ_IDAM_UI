{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/configuration/global/EditGlobalServiceView.js"],"names":["define","AbstractView","UIUtils","ServicesService","Backlink","EditSchemaComponent","EditGlobalServiceView","extend","template","render","serviceType","editComponent","data","subSchemaTemplate","getInstance","instance","get","updateInstance","values","update","getSubSchemaTypes","type","subSchema","getAll","getSubSchemaCreatableTypes","getCreatables","getSubSchemaInstances","deleteSubSchemaInstance","subSchemaType","subSchemaInstance","remove","parentRender","$el","find","append"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;AAgBA;;;AAGAA,OAAO,CACH,mDADG,EAEH,8CAFG,EAGH,+DAHG,EAIH,qDAJG,EAKH,uEALG,CAAP,EAMG,UAACC,YAAD,EAAeC,OAAf,EAAwBC,eAAxB,EAAyCC,QAAzC,EAAmDC,mBAAnD,EAA2E;AAC1E,QAAMC,wBAAwBL,aAAaM,MAAb,CAAoB;AAC9CC,kBAAU,8EADoC;AAE9CC,cAF8C,wBAEvB;AAAA;;AAAA;AAAA,gBAAdC,WAAc;;AACnB,gBAAMC,gBAAgB,IAAIN,mBAAJ,CAAwB;AAC1CO,sBAAM,EAAEF,wBAAF,EADoC;;AAG1CF,0BAAU,0EAHgC;AAI1CK,mCAAmB,uEAJuB;;AAM1CC,6BAAa;AAAA,2BAAMX,gBAAgBY,QAAhB,CAAyBC,GAAzB,CAA6BN,WAA7B,CAAN;AAAA,iBAN6B;AAO1CO,gCAAgB,wBAACC,MAAD;AAAA,2BAAYf,gBAAgBY,QAAhB,CAAyBI,MAAzB,CAAgCT,WAAhC,EAA6CQ,MAA7C,CAAZ;AAAA,iBAP0B;;AAS1CE,mCAAmB;AAAA,2BAAMjB,gBAAgBkB,IAAhB,CAAqBC,SAArB,CAA+BD,IAA/B,CAAoCE,MAApC,CAA2Cb,WAA3C,CAAN;AAAA,iBATuB;AAU1Cc,4CAA4B;AAAA,2BAAMrB,gBAAgBkB,IAAhB,CAAqBC,SAArB,CAA+BD,IAA/B,CAAoCI,aAApC,CAAkDf,WAAlD,CAAN;AAAA,iBAVc;AAW1CgB,uCAAuB;AAAA,2BAAMvB,gBAAgBkB,IAAhB,CAAqBC,SAArB,CAA+BP,QAA/B,CAAwCQ,MAAxC,CAA+Cb,WAA/C,CAAN;AAAA,iBAXmB;AAY1CiB,yCAAyB,iCAACC,aAAD,EAAgBC,iBAAhB;AAAA,2BACrB1B,gBAAgBkB,IAAhB,CAAqBC,SAArB,CAA+BP,QAA/B,CAAwCe,MAAxC,CAA+CpB,WAA/C,EAA4DkB,aAA5D,EAA2EC,iBAA3E,CADqB;AAAA;AAZiB,aAAxB,CAAtB;;AAgBA,iBAAKE,YAAL,CAAkB,YAAM;AACpB,oBAAI3B,QAAJ,GAAeK,MAAf;AACA,sBAAKuB,GAAL,CAASC,IAAT,CAAc,6BAAd,EAA6CC,MAA7C,CAAoDvB,cAAcF,MAAd,GAAuBuB,GAA3E;AACH,aAHD;AAIH;AAvB6C,KAApB,CAA9B;;AA0BA,WAAO,IAAI1B,qBAAJ,EAAP;AACH,CAlCD","file":"EditGlobalServiceView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\n/**\n  * @module org/forgerock/openam/ui/admin/views/configuration/global/EditGlobalServiceView\n  */\ndefine([\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/admin/services/global/ServicesService\",\n    \"org/forgerock/openam/ui/admin/views/common/Backlink\",\n    \"org/forgerock/openam/ui/admin/views/common/schema/EditSchemaComponent\"\n], (AbstractView, UIUtils, ServicesService, Backlink, EditSchemaComponent) => {\n    const EditGlobalServiceView = AbstractView.extend({\n        template: \"templates/admin/views/configuration/EditGlobalConfigurationBaseTemplate.html\",\n        render ([serviceType]) {\n            const editComponent = new EditSchemaComponent({\n                data: { serviceType },\n\n                template: \"templates/admin/views/configuration/EditGlobalConfigurationTemplate.html\",\n                subSchemaTemplate: \"templates/admin/views/configuration/global/SubSchemaListTemplate.html\",\n\n                getInstance: () => ServicesService.instance.get(serviceType),\n                updateInstance: (values) => ServicesService.instance.update(serviceType, values),\n\n                getSubSchemaTypes: () => ServicesService.type.subSchema.type.getAll(serviceType),\n                getSubSchemaCreatableTypes: () => ServicesService.type.subSchema.type.getCreatables(serviceType),\n                getSubSchemaInstances: () => ServicesService.type.subSchema.instance.getAll(serviceType),\n                deleteSubSchemaInstance: (subSchemaType, subSchemaInstance) =>\n                    ServicesService.type.subSchema.instance.remove(serviceType, subSchemaType, subSchemaInstance)\n            });\n\n            this.parentRender(() => {\n                new Backlink().render();\n                this.$el.find(\"[data-global-configuration]\").append(editComponent.render().$el);\n            });\n        }\n    });\n\n    return new EditGlobalServiceView();\n});\n"]}