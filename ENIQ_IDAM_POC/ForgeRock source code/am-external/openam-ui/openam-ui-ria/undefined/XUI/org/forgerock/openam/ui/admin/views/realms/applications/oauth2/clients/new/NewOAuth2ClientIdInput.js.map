{"version":3,"sources":["../../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/applications/oauth2/clients/new/NewOAuth2ClientIdInput.jsx"],"names":["NewOAuth2ClientIdInput","clientId","onClientIdChange","handleClientIdChange","event","target","value","propTypes","string","isRequired","func"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAqBA,QAAMA,yBAAyB,SAAzBA,sBAAyB,OAAoC;AAAA,YAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,YAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAC/D,YAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,KAAD;AAAA,mBAAWF,iBAAiBE,MAAMC,MAAN,CAAaC,KAA9B,CAAX;AAAA,SAA7B;;AAEA,eACI;AAAA;AAAA,cAAM,gBAAN;AACI;AAAA;AAAA,kBAAW,WAAY,sBAAS,UAAT,CAAvB;AACI;AAAA;AAAA,sBAAc,WAAU,UAAxB;AACM,oCAAE,kDAAF;AADN,iBADJ;AAII;AAAA;AAAA,sBAAK,IAAK,CAAV;AACI;AACI,kCAAWH,oBADf;AAEI,8BAAK,MAFT;AAGI,+BAAQF;AAHZ;AADJ;AAJJ;AADJ,SADJ;AAgBH,KAnBD;;AAqBAD,2BAAuBO,SAAvB,GAAmC;AAC/BN,kBAAU,iBAAUO,MAAV,CAAiBC,UADI;AAE/BP,0BAAkB,iBAAUQ,IAAV,CAAeD;AAFF,KAAnC;;sBAKeT,sB","file":"NewOAuth2ClientIdInput.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { Col, ControlLabel, FormControl, Form, FormGroup } from \"react-bootstrap\";\nimport { t } from \"i18next\";\nimport { uniqueId } from \"lodash\";\nimport React, { PropTypes } from \"react\";\n\nconst NewOAuth2ClientIdInput = ({ clientId, onClientIdChange }) => {\n    const handleClientIdChange = (event) => onClientIdChange(event.target.value);\n\n    return (\n        <Form horizontal>\n            <FormGroup controlId={ uniqueId(\"clientId\") }>\n                <ControlLabel className=\"col-sm-4\">\n                    { t(\"console.applications.oauth2.clients.new.clientId\") }\n                </ControlLabel>\n                <Col sm={ 6 }>\n                    <FormControl\n                        onChange={ handleClientIdChange }\n                        type=\"text\"\n                        value={ clientId }\n                    />\n                </Col>\n            </FormGroup>\n        </Form>\n    );\n};\n\nNewOAuth2ClientIdInput.propTypes = {\n    clientId: PropTypes.string.isRequired,\n    onClientIdChange: PropTypes.func.isRequired\n};\n\nexport default NewOAuth2ClientIdInput;\n"]}