{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/admin/models/Form.js"],"names":["define","$","_","JSONEditor","JSONEditorTheme","obj","Form","element","schema","values","console","warn","passwordProperties","where","properties","format","passwordAttributes","map","property","findKey","plugins","selectize","enable","defaults","themes","openam","getTheme","editor","find","attr","t","addClass","each","group","parent","append","popoverclickaway","container","html","placement","content","innerHTML","click","event","preventDefault","reset","filterEmptyAttributes","object","attributes","omit","value","key","contains","isEmpty","prototype","data","getValue","setValue","pick","keys","destroy"],"mappings":"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","file":"Form.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\n/**\n * @deprecated\n */\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"jsonEditor\",\n    \"org/forgerock/openam/ui/admin/utils/JSONEditorTheme\",\n    \"popoverclickaway\", // depends on jquery and bootstrap\n    \"selectize\" // jquery dependencies\n], function ($, _, JSONEditor, JSONEditorTheme) {\n    var obj = function Form (element, schema, values) {\n        console.warn(\"[Form] \\\"Form\\\" is deprecated. Use a FlatJSONSchemaView or GroupedJSONSchemaView instead.\");\n\n        this.element = element;\n        this.schema = schema;\n        this.values = values;\n\n        // Attributes that are identifiable as passwords\n        const passwordProperties = _.where(schema.properties, { format: \"password\" });\n        this.passwordAttributes = _.map(passwordProperties, (property) => _.findKey(schema.properties, property));\n\n        JSONEditor.plugins.selectize.enable = true;\n        JSONEditor.defaults.themes.openam = JSONEditorTheme.getTheme(6, 4);\n\n        this.editor = new JSONEditor(element, {\n            \"disable_collapse\": true,\n            \"disable_edit_json\": true,\n            \"iconlib\": \"fontawesome4\",\n            schema,\n            \"theme\": \"openam\"\n        });\n\n        /**\n         * Passwords are not delivered to the UI from the server. Thus we set a placeholder informing the user that\n         * the password will remain unchanged if they do nothing\n         */\n        $(element).find(\"input:password\").attr(\"placeholder\", $.t(\"common.form.passwordPlaceholder\"));\n\n        $(element).find(\".help-block\").addClass(\"hidden-lg hidden-md hidden-sm\").each(function () {\n            var group = $(this).parent(),\n                element = $('<a class=\"btn info-button visible-lg-inline-block' +\n                    ' visible-md-inline-block visible-sm-inline-block\" ' +\n                    'tabindex=\"0\" data-toggle=\"popoverclickaway\" ><i class=\"fa fa-info-circle\"></i></a>');\n\n            $(group).append(element);\n\n            element.popoverclickaway({\n                container: \"#content\",\n                html: true,\n                placement: \"auto top\",\n                content: this.innerHTML\n            });\n            element.click(function (event) {\n                event.preventDefault();\n            });\n        });\n\n        this.reset();\n    };\n\n    /**\n     * Filters out empty, specified attributes from an object\n     * @param  {Object} object    Object to filter\n     * @param  {Array} attributes Attribute names to filter\n     * @returns {Object}          Filtered object\n     */\n    function filterEmptyAttributes (object, attributes) {\n        return _.omit(object, function (value, key) {\n            if (_.contains(attributes, key)) {\n                return _.isEmpty(value);\n            } else {\n                return false;\n            }\n        });\n    }\n\n    obj.prototype.data = function () {\n        return filterEmptyAttributes(this.editor.getValue(), this.passwordAttributes);\n    };\n\n    obj.prototype.reset = function () {\n        this.editor.setValue(_.pick(this.values, _.keys(this.schema.properties)));\n    };\n\n    obj.prototype.destroy = function () {\n        this.editor.destroy();\n    };\n\n    return obj;\n});\n"]}