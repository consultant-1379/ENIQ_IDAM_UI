{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/sessions/SessionsTableRow.jsx"],"names":["SessionsTableRow","checked","data","onDelete","onSelect","sessionHandle","handleDelete","handleSelect","event","target","selectId","uniqueId","rowActions","undefined","latestAccessTime","fromNow","timestamp","maxIdleExpirationTime","toISOString","maxSessionExpirationTime","propTypes","bool","isRequired","arrayOf","shape","string","func"],"mappings":";;;;;;;;;;;;;;;;;;;AAsBA,QAAMA,mBAAmB,SAAnBA,gBAAmB,OAA0D;AAAA,YAAvDC,OAAuD,QAAvDA,OAAuD;AAAA,YAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,YAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,YAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,YAApBC,aAAoB,QAApBA,aAAoB;;AAC/E,YAAMC,eAAe,SAAfA,YAAe;AAAA,mBAAMH,SAASD,IAAT,CAAN;AAAA,SAArB;AACA,YAAMK,eAAe,SAAfA,YAAe,CAACC,KAAD;AAAA,mBAAWJ,SAASF,IAAT,EAAeM,MAAMC,MAAN,CAAaR,OAA5B,CAAX;AAAA,SAArB;AACA,YAAMS,WAAW,iBAAEC,QAAF,CAAW,QAAX,CAAjB;AACA,YAAMC,aAAaV,KAAKG,aAAL,KAAuBA,aAAvB,GACb;AAAA;AAAA;AAAS,4BAAE,8BAAF;AAAT,SADa,GAGX;AAAA;AAAA,cAAa,WAAU,YAAvB;AACI;AAAA;AAAA,kBAAQ,SAAQ,MAAhB,EAAuB,SAAUC,YAAjC,EAAgD,OAAQ,gBAAE,6BAAF,CAAxD;AACI,qDAAG,WAAU,aAAb;AADJ;AADJ,SAHR;;AAUA,eACI;AAAA;AAAA,cAAI,WAAYL,UAAU,UAAV,GAAuBY,SAAvC;AACI;AAAA;AAAA;AACI;AAAA;AAAA,sBAAc,SAAUH,QAAxB,EAAmC,YAAnC;AAA4C,oCAAE,oBAAF;AAA5C,iBADJ;AAEI;AACI,6BAAUT,OADd;AAEI,8BAAWC,KAAKG,aAAL,KAAuBA,aAFtC;AAGI,wBAAKK,QAHT;AAII,8BAAWH,YAJf;AAKI,0BAAK;AALT;AAFJ,aADJ;AAYI;AAAA;AAAA;AAAM,sCAAOL,KAAKY,gBAAZ,EAA8BC,OAA9B,CAAsC,IAAtC;AAAN,aAZJ;AAcI;AAAA;AAAA;AACI,2BAAQ,gBAAE,gCAAF,EAAoC;AACxCC,mCAAW,sBAAOd,KAAKe,qBAAZ,EAAmCC,WAAnC;AAD6B,qBAApC;AADZ;AAKM,sCAAOhB,KAAKe,qBAAZ,EAAmCF,OAAnC,CAA2C,IAA3C;AALN,aAdJ;AAsBI;AAAA;AAAA;AACI,2BAAQ,gBAAE,gCAAF,EAAoC;AACxCC,mCAAW,sBAAOd,KAAKiB,wBAAZ,EAAsCD,WAAtC;AAD6B,qBAApC;AADZ;AAKM,sCAAOhB,KAAKiB,wBAAZ,EAAsCJ,OAAtC,CAA8C,IAA9C;AALN,aAtBJ;AA8BI;AAAA;AAAA,kBAAI,WAAU,cAAd;AACMH;AADN;AA9BJ,SADJ;AAoCH,KAlDD,C,CAtBA;;;;;;;;;;;;;;;;AA0EAZ,qBAAiBoB,SAAjB,GAA6B;AACzBnB,iBAAS,iBAAUoB,IAAV,CAAeC,UADC;AAEzBpB,cAAM,iBAAUqB,OAAV,CAAkB,iBAAUC,KAAV,CAAgB;AACpCV,8BAAkB,iBAAUW,MAAV,CAAiBH,UADC;AAEpCL,mCAAuB,iBAAUQ,MAAV,CAAiBH,UAFJ;AAGpCH,sCAA0B,iBAAUM,MAAV,CAAiBH,UAHP;AAIpCjB,2BAAe,iBAAUoB,MAAV,CAAiBH;AAJI,SAAhB,CAAlB,EAKFA,UAPqB;AAQzBnB,kBAAU,iBAAUuB,IAAV,CAAeJ,UARA;AASzBlB,kBAAU,iBAAUsB,IAAV,CAAeJ,UATA;AAUzBjB,uBAAe,iBAAUoB,MAAV,CAAiBH;AAVP,KAA7B;;sBAaetB,gB","file":"SessionsTableRow.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\nimport _ from \"lodash\";\nimport { Badge, Button, ButtonGroup, ControlLabel } from \"react-bootstrap\";\nimport { t } from \"i18next\";\nimport moment from \"moment\";\nimport React, { PropTypes } from \"react\";\n\nconst SessionsTableRow = ({ checked, data, onDelete, onSelect, sessionHandle }) => {\n    const handleDelete = () => onDelete(data);\n    const handleSelect = (event) => onSelect(data, event.target.checked);\n    const selectId = _.uniqueId(\"select\");\n    const rowActions = data.sessionHandle === sessionHandle\n        ? <Badge>{ t(\"console.sessions.yourSession\") }</Badge>\n        : (\n            <ButtonGroup className=\"pull-right\">\n                <Button bsStyle=\"link\" onClick={ handleDelete } title={ t(\"console.sessions.invalidate\") }>\n                    <i className=\"fa fa-close\" />\n                </Button>\n            </ButtonGroup>\n        );\n\n    return (\n        <tr className={ checked ? \"selected\" : undefined } >\n            <td>\n                <ControlLabel htmlFor={ selectId } srOnly>{ t(\"common.form.select\") }</ControlLabel>\n                <input\n                    checked={ checked }\n                    disabled={ data.sessionHandle === sessionHandle }\n                    id={ selectId }\n                    onChange={ handleSelect }\n                    type=\"checkbox\"\n                />\n            </td>\n\n            <td>{ moment(data.latestAccessTime).fromNow(true) }</td>\n\n            <td\n                title={ t(\"console.sessions.table.expires\", {\n                    timestamp: moment(data.maxIdleExpirationTime).toISOString()\n                }) }\n            >\n                { moment(data.maxIdleExpirationTime).fromNow(true) }\n            </td>\n\n            <td\n                title={ t(\"console.sessions.table.expires\", {\n                    timestamp: moment(data.maxSessionExpirationTime).toISOString()\n                }) }\n            >\n                { moment(data.maxSessionExpirationTime).fromNow(true) }\n            </td>\n\n            <td className=\"fr-col-btn-1\">\n                { rowActions }\n            </td>\n        </tr>\n    );\n};\n\nSessionsTableRow.propTypes = {\n    checked: PropTypes.bool.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({\n        latestAccessTime: PropTypes.string.isRequired,\n        maxIdleExpirationTime: PropTypes.string.isRequired,\n        maxSessionExpirationTime: PropTypes.string.isRequired,\n        sessionHandle: PropTypes.string.isRequired\n    })).isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    sessionHandle: PropTypes.string.isRequired\n};\n\nexport default SessionsTableRow;\n"]}