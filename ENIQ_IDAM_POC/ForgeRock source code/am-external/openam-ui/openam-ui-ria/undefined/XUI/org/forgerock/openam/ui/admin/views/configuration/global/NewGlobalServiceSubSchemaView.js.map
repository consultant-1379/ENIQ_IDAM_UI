{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/configuration/global/NewGlobalServiceSubSchemaView.js"],"names":["define","$","_","AbstractView","Router","ServicesService","Backlink","NewSchemaComponent","NewGlobalServiceSubSchemaView","extend","template","render","serviceInstance","subSchemaType","newSchemaComponent","data","title","t","subSchema","listRoute","configuration","routes","editGlobalService","listRouteArgs","encodeURIComponent","editRoute","globalServiceSubSchemaEdit","editRouteArgs","newInstanceId","map","getInitialState","type","instance","createInstance","values","create","parentRender","$el","find","append"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,mDAHG,EAIH,6CAJG,EAKH,+DALG,EAMH,qDANG,EAOH,sEAPG,CAAP,EAQG,UAACC,CAAD,EAAIC,CAAJ,EAAOC,YAAP,EAAqBC,MAArB,EAA6BC,eAA7B,EAA8CC,QAA9C,EAAwDC,kBAAxD,EAA+E;AAC9E,QAAMC,gCAAgCL,aAAaM,MAAb,CAAoB;AACtDC,kBAAU,8EAD4C;AAEtDC,cAFsD,wBAEZ;AAAA;;AAAA;AAAA,gBAAjCC,eAAiC;AAAA,gBAAhBC,aAAgB;;AACtC,gBAAMC,qBAAqB,IAAIP,kBAAJ,CAAuB;AAC9CQ,sBAAM;AACFH,oDADE;AAEFC,gDAFE;AAGFG,2BAAOf,EAAEgB,CAAF,CAAI,sCAAJ,EAA4C,EAAEC,WAAWL,aAAb,EAA5C;AAHL,iBADwC;;AAO9CM,2BAAWf,OAAOgB,aAAP,CAAqBC,MAArB,CAA4BC,iBAPO;AAQ9CC,+BAAe,CAACC,mBAAmBZ,eAAnB,CAAD,CAR+B;;AAU9Ca,2BAAWrB,OAAOgB,aAAP,CAAqBC,MAArB,CAA4BK,0BAVO;AAW9CC,+BAAe,uBAACC,aAAD;AAAA,2BAAmB1B,EAAE2B,GAAF,CAAM,CAACjB,eAAD,EAAkBC,aAAlB,EAAiCe,aAAjC,CAAN,EAC9BJ,kBAD8B,CAAnB;AAAA,iBAX+B;;AAc9Cd,0BAAU,sEAdoC;;AAgB9CoB,iCAAiB;AAAA,2BAAMzB,gBAAgB0B,IAAhB,CAAqBb,SAArB,CAA+Bc,QAA/B,CAAwCF,eAAxC,CACnBlB,eADmB,EACFC,aADE,CAAN;AAAA,iBAhB6B;AAkB9CoB,gCAAgB,wBAACC,MAAD;AAAA,2BAAY7B,gBAAgB0B,IAAhB,CAAqBb,SAArB,CAA+Bc,QAA/B,CAAwCG,MAAxC,CACxBvB,eADwB,EACPC,aADO,EACQqB,MADR,CAAZ;AAAA;AAlB8B,aAAvB,CAA3B;;AAsBA,iBAAKE,YAAL,CAAkB,YAAM;AACpB,oBAAI9B,QAAJ,GAAeK,MAAf;AACA,sBAAK0B,GAAL,CAASC,IAAT,CAAc,6BAAd,EAA6CC,MAA7C,CAAoDzB,mBAAmBH,MAAnB,GAA4B0B,GAAhF;AACH,aAHD;AAIH;AA7BqD,KAApB,CAAtC;;AAgCA,WAAO,IAAI7B,6BAAJ,EAAP;AACH,CA1CD","file":"NewGlobalServiceSubSchemaView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/openam/ui/admin/services/global/ServicesService\",\n    \"org/forgerock/openam/ui/admin/views/common/Backlink\",\n    \"org/forgerock/openam/ui/admin/views/common/schema/NewSchemaComponent\"\n], ($, _, AbstractView, Router, ServicesService, Backlink, NewSchemaComponent) => {\n    const NewGlobalServiceSubSchemaView = AbstractView.extend({\n        template: \"templates/admin/views/configuration/EditGlobalConfigurationBaseTemplate.html\",\n        render ([serviceInstance, subSchemaType]) {\n            const newSchemaComponent = new NewSchemaComponent({\n                data: {\n                    serviceInstance,\n                    subSchemaType,\n                    title: $.t(\"console.services.subSchema.new.title\", { subSchema: subSchemaType })\n                },\n\n                listRoute: Router.configuration.routes.editGlobalService,\n                listRouteArgs: [encodeURIComponent(serviceInstance)],\n\n                editRoute: Router.configuration.routes.globalServiceSubSchemaEdit,\n                editRouteArgs: (newInstanceId) => _.map([serviceInstance, subSchemaType, newInstanceId],\n                    encodeURIComponent),\n\n                template: \"templates/admin/views/common/schema/NewServiceSubSchemaTemplate.html\",\n\n                getInitialState: () => ServicesService.type.subSchema.instance.getInitialState(\n                    serviceInstance, subSchemaType),\n                createInstance: (values) => ServicesService.type.subSchema.instance.create(\n                    serviceInstance, subSchemaType, values)\n            });\n\n            this.parentRender(() => {\n                new Backlink().render();\n                this.$el.find(\"[data-global-configuration]\").append(newSchemaComponent.render().$el);\n            });\n        }\n    });\n\n    return new NewGlobalServiceSubSchemaView();\n});\n"]}