{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/services/EditServiceSubSchemaView.js"],"names":["define","$","_","AbstractView","Router","ServicesService","EditSchemaComponent","extend","render","realmPath","serviceType","subSchemaType","id","editComponent","data","type","t","subSchema","subSchemaInstanceId","decodeURIComponent","headerActions","actionPartial","title","icon","listRoute","configuration","routes","realmsServiceEdit","listRouteArgs","map","encodeURIComponent","template","getInstance","instance","get","updateInstance","values","update","deleteInstance","remove","parentRender","$el","append"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,mDAHG,EAIH,6CAJG,EAKH,8DALG,EAMH,uEANG,CAAP,EAOG,UAACC,CAAD,EAAIC,CAAJ,EAAOC,YAAP,EAAqBC,MAArB,EAA6BC,eAA7B,EAA8CC,mBAA9C;AAAA,WAAsEH,aAAaI,MAAb,CAAoB;AACzFC,cADyF,wBACpC;AAAA;;AAAA;AAAA,gBAA5CC,SAA4C;AAAA,gBAAjCC,WAAiC;AAAA,gBAApBC,aAAoB;AAAA,gBAALC,EAAK;;AACjD,gBAAMC,gBAAgB,IAAIP,mBAAJ,CAAwB;AAC1CQ,sBAAM;AACFL,wCADE;AAEFC,4CAFE;AAGFC,gDAHE;AAIFC,0BAJE;AAKFG,0BAAMd,EAAEe,CAAF,CAAI,kCAAJ,EAAwC,EAAEC,WAAWN,aAAb,EAAxC,CALJ;AAMFO,yCAAqBC,mBAAmBP,EAAnB,CANnB;AAOFQ,mCAAe,CACX,EAAEC,eAAe,cAAjB,EAAiCP,MAAM,QAAvC,EAAiDQ,OAAO,oBAAxD,EAA8EC,MAAK,UAAnF,EADW;AAPb,iBADoC;AAY1CC,2BAAWpB,OAAOqB,aAAP,CAAqBC,MAArB,CAA4BC,iBAZG;AAa1CC,+BAAe1B,EAAE2B,GAAF,CAAM,CAACpB,SAAD,EAAYC,WAAZ,CAAN,EAAgCoB,kBAAhC,CAb2B;;AAe1CC,0BAAU,uEAfgC;;AAiB1CC,6BACI;AAAA,2BAAM3B,gBAAgBU,IAAhB,CAAqBE,SAArB,CAA+BgB,QAA/B,CAAwCC,GAAxC,CAA4CzB,SAA5C,EAAuDC,WAAvD,EAAoEC,aAApE,EAAmFC,EAAnF,CAAN;AAAA,iBAlBsC;AAmB1CuB,gCACI,wBAACC,MAAD;AAAA,2BAAY/B,gBAAgBU,IAAhB,CAAqBE,SAArB,CAA+BgB,QAA/B,CAAwCI,MAAxC,CACR5B,SADQ,EACGC,WADH,EACgBC,aADhB,EAC+BC,EAD/B,EACmCwB,MADnC,CAAZ;AAAA,iBApBsC;AAsB1CE,gCACI;AAAA,2BAAMjC,gBAAgBU,IAAhB,CAAqBE,SAArB,CAA+BgB,QAA/B,CAAwCM,MAAxC,CAA+C9B,SAA/C,EAA0DC,WAA1D,EAAuEC,aAAvE,EAAsFC,EAAtF,CAAN;AAAA;AAvBsC,aAAxB,CAAtB;;AA0BA,iBAAK4B,YAAL,CAAkB,YAAM;AAAE,sBAAKC,GAAL,CAASC,MAAT,CAAgB7B,cAAcL,MAAd,GAAuBiC,GAAvC;AAA8C,aAAxE;AACH;AA7BwF,KAApB,CAAtE;AAAA,CAPH","file":"EditServiceSubSchemaView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/openam/ui/admin/services/realm/ServicesService\",\n    \"org/forgerock/openam/ui/admin/views/common/schema/EditSchemaComponent\"\n], ($, _, AbstractView, Router, ServicesService, EditSchemaComponent) => AbstractView.extend({\n    render ([realmPath, serviceType, subSchemaType, id]) {\n        const editComponent = new EditSchemaComponent({\n            data: {\n                realmPath,\n                serviceType,\n                subSchemaType,\n                id,\n                type: $.t(\"console.services.subSchema.title\", { subSchema: subSchemaType }),\n                subSchemaInstanceId: decodeURIComponent(id),\n                headerActions: [\n                    { actionPartial: \"form/_Button\", data: \"delete\", title: \"common.form.delete\", icon:\"fa-times\" }\n                ]\n            },\n            listRoute: Router.configuration.routes.realmsServiceEdit,\n            listRouteArgs: _.map([realmPath, serviceType], encodeURIComponent),\n\n            template: \"templates/admin/views/common/schema/EditServiceSubSchemaTemplate.html\",\n\n            getInstance:\n                () => ServicesService.type.subSchema.instance.get(realmPath, serviceType, subSchemaType, id),\n            updateInstance:\n                (values) => ServicesService.type.subSchema.instance.update(\n                    realmPath, serviceType, subSchemaType, id, values),\n            deleteInstance:\n                () => ServicesService.type.subSchema.instance.remove(realmPath, serviceType, subSchemaType, id)\n        });\n\n        this.parentRender(() => { this.$el.append(editComponent.render().$el); });\n    }\n}));\n"]}