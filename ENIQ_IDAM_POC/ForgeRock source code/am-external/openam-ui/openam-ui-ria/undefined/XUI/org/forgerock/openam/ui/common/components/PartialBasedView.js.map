{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/common/components/PartialBasedView.js"],"names":["define","Backbone","Handlebars","_","View","extend","initialize","options","isString","partial","TypeError","render","template","html","compile","data","$el"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,UADG,EAEH,YAFG,EAGH,QAHG,CAAP,EAIG,UAACC,QAAD,EAAWC,UAAX,EAAuBC,CAAvB;AAAA,WAA6BF,SAASG,IAAT,CAAcC,MAAd,CAAqB;AACjDC,kBADiD,sBACrCC,OADqC,EAC5B;AACjB,gBAAI,CAACJ,EAAEK,QAAF,CAAWD,QAAQE,OAAnB,CAAL,EAAkC;AAC9B,sBAAM,IAAIC,SAAJ,CAAc,0DAAd,CAAN;AACH;;AAED,iBAAKH,OAAL,GAAeA,OAAf;AACH,SAPgD;AAQjDI,cARiD,oBAQvC;AACN,gBAAMC,oBAAkB,KAAKL,OAAL,CAAaE,OAA/B,OAAN;AACA,gBAAMI,OAAOX,WAAWY,OAAX,CAAmBF,QAAnB,EAA6B,KAAKL,OAAL,CAAaQ,IAA1C,CAAb;AACA,iBAAKC,GAAL,CAASH,IAAT,CAAcA,IAAd;AACA,mBAAO,IAAP;AACH;AAbgD,KAArB,CAA7B;AAAA,CAJH","file":"PartialBasedView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"backbone\",\n    \"handlebars\",\n    \"lodash\"\n], (Backbone, Handlebars, _) => Backbone.View.extend({\n    initialize (options) {\n        if (!_.isString(options.partial)) {\n            throw new TypeError(\"[PartialBasedView] \\\"partial\\\" argument is not a String.\");\n        }\n\n        this.options = options;\n    },\n    render () {\n        const template = `{{> ${this.options.partial}}}`;\n        const html = Handlebars.compile(template)(this.options.data);\n        this.$el.html(html);\n        return this;\n    }\n}));\n"]}