{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/user/profile/UserProfileView.js"],"names":["define","$","_","form2js","js2form","AbstractUserProfileTab","AbstractView","Configuration","Constants","EventManager","UserProfileView","extend","template","partials","events","dynamicTabs","registerTab","tabView","push","resetTabs","focusInput","event","target","attr","find","focus","updateRoute","tabPane","form","tabRoute","sendEvent","ROUTE_REQUEST","routeName","args","trigger","render","callback","tabName","data","user","loggedUser","toJSON","parentRender","staticTabs","map","$el","tabPanel","tab","el","when","apply","promise","Deferred","tabDetail","getTabDetail","panelId","append","element","cloneDeep","bind","text","label","resolve","then","selectedTabId","closest","selectedTab","each","concat","reloadFormData"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,QADI,EAEJ,YAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,8DALI,EAMJ,mDANI,EAOJ,oDAPI,EAQJ,gDARI,EASJ,mDATI,EAUJ,WAVI,CAAP,EAWE,UAASC,CAAT,EAAYC,CAAZ,EAAeC,OAAf,EAAwBC,OAAxB,EACCC,sBADD,EAECC,YAFD,EAGCC,aAHD,EAICC,SAJD,EAKCC,YALD,EAKe;;AAEd;;;;AAIA,QAAIC,kBAAkBJ,aAAaK,MAAb,CAAoB;AACtCC,kBAAU,yCAD4B;AAEtCC,kBAAU,CACN,gCADM,EAEN,oCAFM,CAF4B;AAMtCC,gBAAQ;AACJ,iCAAqB,aADjB;AAEJ,4BAAgB;AAFZ,SAN8B;AAUtCC,qBAAa,EAVyB;AAWtC;;;;AAIAC,qBAAc,qBAAUC,OAAV,EAAmB;AAC7B,iBAAKF,WAAL,CAAiBG,IAAjB,CAAsBD,OAAtB;AACH,SAjBqC;;AAmBtC;;;AAGAE,mBAAW,qBAAY;AACnB,iBAAKJ,WAAL,GAAmB,EAAnB;AACH,SAxBqC;;AA0BtC;;;AAGAK,oBAAY,oBAAUC,KAAV,EAAiB;AACzBpB,cAAEA,EAAEoB,MAAMC,MAAR,EAAgBC,IAAhB,CAAqB,MAArB,CAAF,EAAgCC,IAAhC,CAAqC,8BAArC,EAAqEC,KAArE;AACH,SA/BqC;;AAiCtC;;;AAGAC,qBAAa,qBAAUL,KAAV,EAAiB;AAC1B,gBAAIM,UAAU1B,EAAEA,EAAEoB,MAAMC,MAAR,EAAgBC,IAAhB,CAAqB,MAArB,CAAF,CAAd;AAAA,gBACIK,OAAOD,QAAQH,IAAR,CAAa,MAAb,CADX;AAAA,gBAEIK,WAAWD,KAAKL,IAAL,CAAU,IAAV,CAFf;;AAIAd,yBAAaqB,SAAb,CAAuBtB,UAAUuB,aAAjC,EAAgD,EAACC,WAAW,SAAZ,EAAuBC,MAAM,CAACJ,QAAD,CAA7B,EAAyCK,SAAS,KAAlD,EAAhD;AACH,SA1CqC;;AA4CtC;;;;;AAKAC,gBAAQ,gBAAUF,IAAV,EAAgBG,QAAhB,EAA0B;AAC9B,gBAAIC,UAAUJ,KAAK,CAAL,KAAW,SAAzB;;AAEA,iBAAKK,IAAL,CAAUC,IAAV,GAAiBhC,cAAciC,UAAd,CAAyBC,MAAzB,EAAjB;;AAEA,iBAAKC,YAAL,CAAkB,YAAY;;AAE1B;AACA;AACA,qBAAKC,UAAL,GAAkBzC,EAAE0C,GAAF,CAAM,KAAKC,GAAL,CAASrB,IAAT,CAAc,wBAAd,CAAN,EAA+C,UAAUsB,QAAV,EAAoB;AACjF,wBAAIC,MAAM,IAAI1C,sBAAJ,CAA2B;AACjC2C,4BAAIF;AAD6B,qBAA3B,CAAV;AAGA;AACA,2BAAOC,GAAP;AACH,iBANiB,CAAlB;;AAQA;AACA9C,kBAAEgD,IAAF,CAAOC,KAAP,CAAajD,CAAb,EAAgBC,EAAE0C,GAAF,CAAM,KAAK7B,WAAX,EAAwB,UAAUgC,GAAV,EAAe;AACnD,wBAAII,UAAUlD,EAAEmD,QAAF,EAAd;AAAA,wBACIC,YAAYN,IAAIO,YAAJ,EADhB;AAAA,wBAEIR,WAAW7C,EAAE,yEAAF,CAFf;AAGA6C,6BAASvB,IAAT,CAAc,IAAd,EAAoB8B,UAAUE,OAA9B;AACA,yBAAKV,GAAL,CAASrB,IAAT,CAAc,cAAd,EAA8BgC,MAA9B,CAAqCV,QAArC;AACAC,wBAAIU,OAAJ,GAAcX,SAAS,CAAT,CAAd;;AAEAC,wBAAIZ,MAAJ,CAAWjC,EAAEwD,SAAF,CAAY,KAAKpB,IAAjB,CAAX,EAAmCpC,EAAEyD,IAAF,CAAO,YAAY;AAClD,6BAAKd,GAAL,CAASrB,IAAT,CAAc,WAAd,EAA2BgC,MAA3B,CACIvD,EAAE,0BAAF,EAA8BuD,MAA9B,CACIvD,EAAE,eAAaoD,UAAUE,OAAvB,GAA+B,iCAAjC,EACKK,IADL,CACUP,UAAUQ,KADpB,CADJ,CADJ;AAMAV,gCAAQW,OAAR;AACH,qBARkC,EAQhC,IARgC,CAAnC;AASA,2BAAOX,OAAP;AACH,iBAlBe,EAkBb,IAlBa,CAAhB,EAkBUY,IAlBV,CAkBe7D,EAAEyD,IAAF,CAAO,YAAY;AAC9B,wBAAIK,gBAAgB,KAAKnB,GAAL,CAASrB,IAAT,CAAc,UAAQa,OAAtB,EAA+B4B,OAA/B,CAAuC,WAAvC,EAAoD1C,IAApD,CAAyD,IAAzD,CAApB;AAAA,wBACI2C,cAAc,KAAKrB,GAAL,CAASrB,IAAT,CAAc,0BAAwBwC,aAAxB,GAAsC,IAApD,CADlB;;AAGA9D,sBAAEiE,IAAF,CAAO,KAAKxB,UAAL,CAAgByB,MAAhB,CAAuB,KAAKrD,WAA5B,CAAP,EAAiDb,EAAEyD,IAAF,CAAO,UAAUZ,GAAV,EAAe;AACnEA,4BAAIsB,cAAJ,CAAmBnE,EAAEwD,SAAF,CAAY,KAAKpB,IAAL,CAAUC,IAAtB,CAAnB;AACH,qBAFgD,EAE9C,IAF8C,CAAjD;;AAIA2B,gCAAYnB,GAAZ,CAAgB,MAAhB;AACA,yBAAKF,GAAL,CAASrB,IAAT,CAAc,MAAMwC,aAApB,EAAmCxC,IAAnC,CAAwC,8BAAxC,EAAwEC,KAAxE;AACA,wBAAIW,QAAJ,EAAc;AACVA;AACH;AACJ,iBAbc,EAaZ,IAbY,CAlBf;AAgCH,aA7CD;AA8CH;AApGqC,KAApB,CAAtB;;AAuGA,WAAO,IAAI1B,eAAJ,EAAP;AACH,CA9HA","file":"UserProfileView.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"underscore\",\r\n    \"form2js\",\r\n    \"js2form\",\r\n    \"org/forgerock/commons/ui/user/profile/AbstractUserProfileTab\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\r\n    \"org/forgerock/commons/ui/common/main/Configuration\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\",\r\n    \"bootstrap\"\r\n], function($, _, form2js, js2form,\r\n    AbstractUserProfileTab,\r\n    AbstractView,\r\n    Configuration,\r\n    Constants,\r\n    EventManager) {\r\n\r\n    /**\r\n     * Manages the tabs and routing amongst them for the user's profile\r\n     * @exports org/forgerock/commons/ui/user/profile/UserProfileView\r\n     */\r\n    var UserProfileView = AbstractView.extend({\r\n        template: \"templates/user/UserProfileTemplate.html\",\r\n        partials: [\r\n            \"partials/form/_basicInput.html\",\r\n            \"partials/form/_basicSaveReset.html\"\r\n        ],\r\n        events: {\r\n            \"click a[role=tab]\": \"updateRoute\",\r\n            \"shown.bs.tab\": \"focusInput\"\r\n        },\r\n        dynamicTabs: [],\r\n        /**\r\n         * Accepts an instance of AbstractUserProfileTab (or an extension of it) as a new tab\r\n         * to include in the profile\r\n         */\r\n        registerTab : function (tabView) {\r\n            this.dynamicTabs.push(tabView);\r\n        },\r\n\r\n        /**\r\n         * Removes any tabs which had been added dynamically\r\n         */\r\n        resetTabs: function () {\r\n            this.dynamicTabs = [];\r\n        },\r\n\r\n        /**\r\n         * As the tabs change, place the focus on the first editable form field\r\n         */\r\n        focusInput: function (event) {\r\n            $($(event.target).attr(\"href\")).find(\":input:not([readonly]):first\").focus();\r\n        },\r\n\r\n        /**\r\n         * When clicking on a new tab, the route needs to be updated to reflect the new nav state\r\n         */\r\n        updateRoute: function (event) {\r\n            var tabPane = $($(event.target).attr(\"href\")),\r\n                form = tabPane.find(\"form\"),\r\n                tabRoute = form.attr(\"id\");\r\n\r\n            EventManager.sendEvent(Constants.ROUTE_REQUEST, {routeName: \"profile\", args: [tabRoute], trigger: false});\r\n        },\r\n\r\n        /**\r\n         * Show the main view container along with any tabs which are declared statically within\r\n         * the UserProfileView template. Then load any additional tabs which have been registered.\r\n         * Finally, show the appropriate tab based on the \"args\" provided (via URL params).\r\n         */\r\n        render: function (args, callback) {\r\n            var tabName = args[0] || \"details\";\r\n\r\n            this.data.user = Configuration.loggedUser.toJSON();\r\n\r\n            this.parentRender(function () {\r\n\r\n                // instantiate a profile tab view which covers the DOM elements created\r\n                // statically as part of the UserProfileTemplate\r\n                this.staticTabs = _.map(this.$el.find('.tab-content>.tab-pane'), function (tabPanel) {\r\n                    var tab = new AbstractUserProfileTab({\r\n                        el: tabPanel\r\n                    });\r\n                    //tab.delegateEvents();\r\n                    return tab;\r\n                });\r\n\r\n                // build the dynamically-registered tabs\r\n                $.when.apply($, _.map(this.dynamicTabs, function (tab) {\r\n                    var promise = $.Deferred(),\r\n                        tabDetail = tab.getTabDetail(),\r\n                        tabPanel = $('<div role=\"tabpanel\" class=\"tab-pane panel panel-default fr-panel-tab\">');\r\n                    tabPanel.attr('id', tabDetail.panelId);\r\n                    this.$el.find(\".tab-content\").append(tabPanel);\r\n                    tab.element = tabPanel[0];\r\n\r\n                    tab.render(_.cloneDeep(this.data), _.bind(function () {\r\n                        this.$el.find(\".nav-tabs\").append(\r\n                            $('<li role=\"presentation\">').append(\r\n                                $('<a href=\"#'+tabDetail.panelId+'\" role=\"tab\" data-toggle=\"tab\">')\r\n                                    .text(tabDetail.label)\r\n                            )\r\n                        );\r\n                        promise.resolve();\r\n                    }, this));\r\n                    return promise;\r\n                }, this)).then(_.bind(function () {\r\n                    var selectedTabId = this.$el.find('form#'+tabName).closest(\".tab-pane\").attr(\"id\"),\r\n                        selectedTab = this.$el.find(\"ul.nav-tabs a[href='#\"+selectedTabId+\"']\");\r\n\r\n                    _.each(this.staticTabs.concat(this.dynamicTabs), _.bind(function (tab) {\r\n                        tab.reloadFormData(_.cloneDeep(this.data.user));\r\n                    }, this));\r\n\r\n                    selectedTab.tab('show');\r\n                    this.$el.find(\"#\" + selectedTabId).find(\":input:not([readonly]):first\").focus();\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                }, this));\r\n            });\r\n        }\r\n    });\r\n\r\n    return new UserProfileView();\r\n});"]}