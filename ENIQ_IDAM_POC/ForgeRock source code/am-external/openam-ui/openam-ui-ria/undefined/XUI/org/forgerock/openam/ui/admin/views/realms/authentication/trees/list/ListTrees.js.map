{"version":3,"sources":["../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/trees/list/ListTrees.jsx"],"names":["ListTrees","state","selectedIds","nextProps","currentIds","props","trees","nextIds","sort","setState","handleOnDelete","onDelete","handleRowClick","row","onEdit","_id","handleSelectedChange","ids","toolbar","content","isFetching","length","newHref","propTypes","bool","isRequired","string","func","arrayOf","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA4BMA,S;;;AACF,6BAAe;AAAA;;AAAA;;AAEX,kBAAKC,KAAL,GAAa;AACTC,6BAAa;AADJ,aAAb;AAFW;AAKd;;;;sDAE0BC,S,EAAW;AAClC,oBAAMC,aAAa,mBAAM,KAAKC,KAAL,CAAWC,KAAjB,EAAwB,KAAxB,CAAnB;AACA,oBAAMC,UAAU,mBAAMJ,UAAUG,KAAhB,EAAuB,KAAvB,CAAhB;;AAEA,oBAAI,CAAC,qBAAQF,WAAWI,IAAX,EAAR,EAA2BD,QAAQC,IAAR,EAA3B,CAAL,EAAiD;AAC7C,yBAAKC,QAAL,CAAc,EAAEP,aAAa,EAAf,EAAd;AACH;AACJ;;;qCAES;AAAA;;AACN,oBAAMQ,iBAAiB,SAAjBA,cAAiB;AAAA,2BAAM,OAAKL,KAAL,CAAWM,QAAX,CAAoB,OAAKV,KAAL,CAAWC,WAA/B,CAAN;AAAA,iBAAvB;AACA,oBAAMU,iBAAiB,SAAjBA,cAAiB,CAACC,GAAD;AAAA,2BAAS,OAAKR,KAAL,CAAWS,MAAX,CAAkBD,IAAIE,GAAtB,CAAT;AAAA,iBAAvB;AACA,oBAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,GAAD;AAAA,2BAAS,OAAKR,QAAL,CAAc,EAAEP,aAAae,GAAf,EAAd,CAAT;AAAA,iBAA7B;AACA,oBAAIC,gBAAJ;AACA,oBAAIC,gBAAJ;;AAEA,oBAAI,KAAKd,KAAL,CAAWe,UAAf,EAA2B;AACvBD,8BAAU,sDAAV;AACH,iBAFD,MAEO,IAAI,KAAKd,KAAL,CAAWC,KAAX,CAAiBe,MAArB,EAA6B;AAChCH,8BACI;AACI,0CAAmB,CAAC,KAAKjB,KAAL,CAAWC,WAAX,CAAuBmB,MAD/C;AAEI,iCAAU,KAAKhB,KAAL,CAAWiB,OAFzB;AAGI,wCAAiB,KAAKrB,KAAL,CAAWC,WAAX,CAAuBmB,MAH5C;AAII,kCAAWX;AAJf,sBADJ;AAQAS,8BACI;AAAA;AAAA;AACI,kCAAO,KAAKd,KAAL,CAAWC,KADtB;AAEI,qCAAQ,KAFZ;AAGI,wCAAaM,cAHjB;AAII,8CAAmBI,oBAJvB;AAKI,yCAAc,KAAKf,KAAL,CAAWC;AAL7B;AAOI;AAAA;AAAA,8BAAmB,WAAU,KAA7B,EAAmC,YAAa,wBAAS,SAAT,CAAhD,EAAsE,cAAtE,EAA+E,WAA/E;AACM,4CAAE,0CAAF;AADN;AAPJ,qBADJ;AAaH,iBAtBM,MAsBA;AACHiB,8BAAU,iEAAuB,MAAO,KAAKd,KAAL,CAAWiB,OAAzC,GAAV;AACH;;AAED,uBACI;AAAA;AAAA;AACI,0EAAY,OAAQ,gBAAE,yCAAF,CAApB,GADJ;AAEMJ,2BAFN;AAGI;AAAA;AAAA;AACMC;AADN;AAHJ,iBADJ;AASH;;;;;;AAGLnB,cAAUuB,SAAV,GAAsB;AAClBH,oBAAY,iBAAUI,IAAV,CAAeC,UADT;AAElBH,iBAAS,iBAAUI,MAAV,CAAiBD,UAFR;AAGlBd,kBAAU,iBAAUgB,IAAV,CAAeF,UAHP;AAIlBX,gBAAQ,iBAAUa,IAAV,CAAeF,UAJL;AAKlBnB,eAAO,iBAAUsB,OAAV,CAAkB,iBAAUC,MAA5B,EAAoCJ;AALzB,KAAtB;;sBAQezB,S","file":"ListTrees.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\nimport { isEqual, pluck } from \"lodash\";\nimport { Panel } from \"react-bootstrap\";\nimport { t } from \"i18next\";\nimport { TableHeaderColumn } from \"react-bootstrap-table\";\nimport React, { Component, PropTypes } from \"react\";\n\nimport IconCell from \"components/table/cells/IconCell\";\nimport ListTreesCallToAction from \"./ListTreesCallToAction\";\nimport ListTreesToolbar from \"./ListTreesToolbar\";\nimport Loading from \"components/Loading\";\nimport PageHeader from \"components/PageHeader\";\nimport Table from \"components/table/Table\";\n\nclass ListTrees extends Component {\n    constructor () {\n        super();\n        this.state = {\n            selectedIds: []\n        };\n    }\n\n    componentWillReceiveProps (nextProps) {\n        const currentIds = pluck(this.props.trees, \"_id\");\n        const nextIds = pluck(nextProps.trees, \"_id\");\n\n        if (!isEqual(currentIds.sort(), nextIds.sort())) {\n            this.setState({ selectedIds: [] });\n        }\n    }\n\n    render () {\n        const handleOnDelete = () => this.props.onDelete(this.state.selectedIds);\n        const handleRowClick = (row) => this.props.onEdit(row._id);\n        const handleSelectedChange = (ids) => this.setState({ selectedIds: ids });\n        let toolbar;\n        let content;\n\n        if (this.props.isFetching) {\n            content = <Loading />;\n        } else if (this.props.trees.length) {\n            toolbar = (\n                <ListTreesToolbar\n                    isDeleteDisabled={ !this.state.selectedIds.length }\n                    newHref={ this.props.newHref }\n                    numberSelected={ this.state.selectedIds.length }\n                    onDelete={ handleOnDelete }\n                />\n            );\n            content = (\n                <Table\n                    data={ this.props.trees }\n                    idField=\"_id\"\n                    onRowClick={ handleRowClick }\n                    onSelectedChange={ handleSelectedChange }\n                    selectedIds={ this.state.selectedIds }\n                >\n                    <TableHeaderColumn dataField=\"_id\" dataFormat={ IconCell(\"fa-tree\") } dataSort isKey>\n                        { t(\"console.authentication.trees.list.grid.0\") }\n                    </TableHeaderColumn>\n                </Table>\n            );\n        } else {\n            content = <ListTreesCallToAction href={ this.props.newHref } />;\n        }\n\n        return (\n            <div>\n                <PageHeader title={ t(\"console.authentication.trees.list.title\") } />\n                { toolbar }\n                <Panel>\n                    { content }\n                </Panel>\n            </div>\n        );\n    }\n}\n\nListTrees.propTypes = {\n    isFetching: PropTypes.bool.isRequired,\n    newHref: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    trees: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default ListTrees;\n"]}