{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/util/CookieHelper.js"],"names":["define","_","obj","createCookie","name","value","expirationDate","path","domain","secure","expirationDatePart","nameValuePart","pathPart","domainPart","securePart","toGMTString","setCookie","domains","isArray","length","document","cookie","undefined","each","getCookie","c_name","i","x","y","cookies","split","substr","indexOf","replace","unescape","deleteCookie","date","Date","setTime","getTime","cookiesEnabled"],"mappings":"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","file":"CookieHelper.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"lodash\"\r\n], function(_) {\r\n\r\n    /**\r\n     * @exports org/forgerock/commons/ui/common/util/CookieHelper\r\n     */\r\n    var obj = {};\r\n\r\n    /**\r\n     * Creates a cookie with given parameters.\r\n     * @param {String} name - cookie name.\r\n     * @param {String} [value] - cookie value.\r\n     * @param {Date} [expirationDate] - cookie expiration date.\r\n     * @param {String} [path] - cookie path.\r\n     * @param {String|String[]} [domain] - cookie domain(s).\r\n     * @param {Boolean} [secure] - is cookie secure.\r\n     * @returns {String} created cookie.\r\n     */\r\n    obj.createCookie = function (name, value, expirationDate, path, domain, secure) {\r\n        var expirationDatePart,\r\n            nameValuePart,\r\n            pathPart,\r\n            domainPart,\r\n            securePart;\r\n\r\n        expirationDatePart = expirationDate ? \";expires=\" + expirationDate.toGMTString() : \"\";\r\n        nameValuePart = name + \"=\" + value;\r\n        pathPart = path ? \";path=\" + path : \"\";\r\n        domainPart = domain ? \";domain=\" + domain : \"\";\r\n        securePart = secure ? \";secure\" : \"\";\r\n\r\n        return nameValuePart + expirationDatePart + pathPart + domainPart + securePart;\r\n    };\r\n\r\n    /**\r\n     * Sets a cookie with given parameters in the browser.\r\n     * @param {String} name - cookie name.\r\n     * @param {String} [value] - cookie value.\r\n     * @param {Date} [expirationDate] - cookie expiration date.\r\n     * @param {String} [path] - cookie path.\r\n     * @param {String|String[]} [domain] - cookie domain(s). Use empty array for creating host-only cookies.\r\n     * @param {Boolean} [secure] - is cookie secure.\r\n     */\r\n    obj.setCookie = function (name, value, expirationDate, path, domains, secure) {\r\n        if (!_.isArray(domains)) {\r\n            domains = [domains];\r\n        }\r\n\r\n        if (domains.length === 0) {\r\n            document.cookie = obj.createCookie(name, value, expirationDate, path, undefined, secure);\r\n        } else {\r\n            _.each(domains, function(domain) {\r\n                document.cookie = obj.createCookie(name, value, expirationDate, path, domain, secure);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns cookie with a given name.\r\n     * @param {String} name - cookie name.\r\n     * @returns {String} cookie or undefined if cookie was not found\r\n     */\r\n    obj.getCookie = function (c_name) {\r\n        var i, x, y, cookies = document.cookie.split(\";\");\r\n        for (i = 0; i < cookies.length; i++) {\r\n            x = cookies[i].substr(0, cookies[i].indexOf(\"=\"));\r\n            y = cookies[i].substr(cookies[i].indexOf(\"=\") + 1);\r\n            x = x.replace(/^\\s+|\\s+$/g, \"\");\r\n            if (x === c_name) {\r\n                return unescape(y);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deletes cookie with given parameters.\r\n     * @param {String} name - cookie name.\r\n     * @param {String} [path] - cookie path.\r\n     * @param {String|String[]} [domain] - cookie domain(s).\r\n     */\r\n    obj.deleteCookie = function(name, path, domains) {\r\n        var date = new Date();\r\n        date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\r\n        obj.setCookie(name, \"\", date, path, domains);\r\n    };\r\n\r\n    /**\r\n     * Checks if cookies are enabled.\r\n     * @returns {Boolean} whether cookies enabled or not.\r\n     */\r\n    obj.cookiesEnabled = function() {\r\n        this.setCookie(\"cookieTest\", \"test\");\r\n        if (!this.getCookie(\"cookieTest\")) {\r\n            return false;\r\n        }\r\n        this.deleteCookie(\"cookieTest\");\r\n        return true;\r\n    };\r\n\r\n    return obj;\r\n});"]}