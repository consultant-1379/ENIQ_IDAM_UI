{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/maines/ErrorsHandler.js"],"names":["define","_","$","AbstractConfigurationAware","eventManager","constants","obj","handleError","error","handlers","handler","status","hasOwnProperty","responseObj","parseJSON","responseText","parseErr","matchError","configuration","defaultHandlers","code","message","match","event","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST","console","handlerName","isUndefined","field","value","parseInt"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,YADI,EAEJ,QAFI,EAGJ,iEAHI,EAIJ,mDAJI,EAKJ,gDALI,CAAP,EAME,UAASC,CAAT,EAAYC,CAAZ,EAAeC,0BAAf,EAA2CC,YAA3C,EAAyDC,SAAzD,EAAoE;AACnE,QAAIC,MAAM,IAAIH,0BAAJ,EAAV;;AAEAG,QAAIC,WAAJ,GAAkB,UAASC,KAAT,EAAgBC,QAAhB,EAA0B;AACxC,YAAIC,OAAJ;;AAEA,YAAGF,MAAMA,KAAN,IAAe,CAACA,MAAMG,MAAzB,EAAiC;AAC7BH,kBAAMG,MAAN,GAAeH,MAAMA,KAArB;AACH;;AAED,YAAIA,MAAMI,cAAN,CAAqB,cAArB,CAAJ,EAA0C;AACtC,gBAAI;AACAJ,sBAAMK,WAAN,GAAoBX,EAAEY,SAAF,CAAYN,MAAMO,YAAlB,CAApB;AACH,aAFD,CAEE,OAAOC,QAAP,EAAiB,CAAE,sBAAwB;AAChD;;AAED,YAAGP,QAAH,EAAa;AACT;AACAC,sBAAUJ,IAAIW,UAAJ,CAAeT,KAAf,EAAsBC,QAAtB,CAAV;AACH;;AAED,YAAG,CAACC,OAAJ,EAAa;AACT;AACAA,sBAAUJ,IAAIW,UAAJ,CAAeT,KAAf,EAAsBF,IAAIY,aAAJ,CAAkBC,eAAxC,CAAV;AACH;;AAED,YAAGT,OAAH,EAAY;AACR;AACA;AACA,gBAAIF,MAAMI,cAAN,CAAqB,aAArB,KAAuCJ,MAAMK,WAAN,KAAsB,IAA7D,IACA,EAEQL,MAAMK,WAAN,CAAkBO,IAAlB,KAA2B,GAA3B,IAEIZ,MAAMK,WAAN,CAAkBQ,OAAlB,KAA8B,gCAHtC,IAOIb,MAAMK,WAAN,CAAkBL,KAAlB,KAA4B,GAA5B,IAEIA,MAAMK,WAAN,CAAkBQ,OAAlB,KAA8B,yBATtC,IAaIb,MAAMK,WAAN,CAAkBL,KAAlB,KAA4B,GAA5B,IAEIA,MAAMK,WAAN,CAAkBQ,OAAlB,CAA0BC,KAA1B,CAAgC,6BAAhC,CAhBZ,CADJ,EAqBK;AACD,oBAAGZ,QAAQa,KAAX,EAAkB;AACdnB,iCAAaoB,SAAb,CAAuBd,QAAQa,KAA/B,EAAsC,EAACb,SAASA,OAAV,EAAmBF,OAAOA,KAA1B,EAAtC;AACH;;AAED,oBAAGE,QAAQW,OAAX,EAAoB;AAChBjB,iCAAaoB,SAAb,CAAuBnB,UAAUoB,6BAAjC,EAAgEf,QAAQW,OAAxE;AACH;AACJ;AACJ,SAjCD,MAiCO;AACHK,oBAAQlB,KAAR,CAAcA,MAAMG,MAApB;AACAP,yBAAaoB,SAAb,CAAuBnB,UAAUoB,6BAAjC,EAAgE,SAAhE;AACH;AACJ,KA5DD;;AA8DA;;;;;;;;;;;;;;;;;;;;AAoBAnB,QAAIW,UAAJ,GAAiB,UAAST,KAAT,EAAgBC,QAAhB,EAA0B;AACvC,YAAIC,OAAJ,EAAaiB,WAAb;;AAEA,aAAIA,WAAJ,IAAmBlB,QAAnB,EAA6B;AACzBC,sBAAUD,SAASkB,WAAT,CAAV;;AAEA,gBAAI,CAAC1B,EAAE2B,WAAF,CAAclB,QAAQmB,KAAtB,CAAL,EAAmC;AAC/B,oBAAGrB,MAAME,QAAQmB,KAAd,MAAyBnB,QAAQoB,KAApC,EAA2C;AACvC,2BAAOpB,OAAP;AACH;AACJ;;AAED,gBAAGA,QAAQC,MAAX,EAAmB;AACf,oBAAGoB,SAASvB,MAAMG,MAAf,EAAuB,CAAvB,MAA8BoB,SAASrB,QAAQC,MAAjB,EAAyB,CAAzB,CAAjC,EAA8D;AAC1D,2BAAOD,OAAP;AACH;AACJ;;AAED;AACH;AACJ,KApBD;;AAsBA,WAAOJ,GAAP;AACH,CAlHA","file":"ErrorsHandler.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2012-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"underscore\",\r\n    \"jquery\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractConfigurationAware\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\"\r\n], function(_, $, AbstractConfigurationAware, eventManager, constants) {\r\n    var obj = new AbstractConfigurationAware();\r\n\r\n    obj.handleError = function(error, handlers) {\r\n        var handler;\r\n\r\n        if(error.error && !error.status) {\r\n            error.status = error.error;\r\n        }\r\n\r\n        if (error.hasOwnProperty('responseText')) {\r\n            try {\r\n                error.responseObj = $.parseJSON(error.responseText);\r\n            } catch (parseErr) { /* Must not be JSON */ }\r\n        }\r\n\r\n        if(handlers) {\r\n            //find match in handlers\r\n            handler = obj.matchError(error, handlers);\r\n        }\r\n\r\n        if(!handler) {\r\n            //find match in default handlers\r\n            handler = obj.matchError(error, obj.configuration.defaultHandlers);\r\n        }\r\n\r\n        if(handler) {\r\n            // conditional check needed here until calls to authentication?_action=reauthenticate and\r\n            // OpenAM authentication no longer produce 403 status\r\n            if (error.hasOwnProperty(\"responseObj\") && error.responseObj !== null &&\r\n                !(\r\n                    (\r\n                        error.responseObj.code === 403 &&\r\n                        (\r\n                            error.responseObj.message === \"SSO Token cannot be retrieved.\"\r\n                        )\r\n                    ) ||\r\n                    (\r\n                        error.responseObj.error === 403 &&\r\n                        (\r\n                            error.responseObj.message === \"Reauthentication failed\"\r\n                        )\r\n                    ) ||\r\n                    (\r\n                        error.responseObj.error === 409 &&\r\n                        (\r\n                            error.responseObj.message.match(/value to replace not found$/)\r\n                        )\r\n                    )\r\n                )\r\n               ) {\r\n                if(handler.event) {\r\n                    eventManager.sendEvent(handler.event, {handler: handler, error: error});\r\n                }\r\n\r\n                if(handler.message) {\r\n                    eventManager.sendEvent(constants.EVENT_DISPLAY_MESSAGE_REQUEST, handler.message);\r\n                }\r\n            }\r\n        } else {\r\n            console.error(error.status);\r\n            eventManager.sendEvent(constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"unknown\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * If a generic field for comparison is defined on the handler, that field is then compared to the corresponding\r\n     * field on the error.\r\n     *\r\n     * If there is a status defined on the handler, it is compared to the status of the error.\r\n     *\r\n     * If either of these comparisons is true than that handler is returned.\r\n     *\r\n     * @example\r\n     *  errorsHandlers: {\r\n     *      \"timeout\": {\r\n     *          \"value\": 0,\r\n     *          \"field\": \"readyState\"\r\n     *      }\r\n     *  }\r\n     *\r\n     * @param error\r\n     * @param handlers\r\n     * @returns {*}\r\n     */\r\n    obj.matchError = function(error, handlers) {\r\n        var handler, handlerName;\r\n\r\n        for(handlerName in handlers) {\r\n            handler = handlers[handlerName];\r\n\r\n            if (!_.isUndefined(handler.field)) {\r\n                if(error[handler.field] === handler.value) {\r\n                    return handler;\r\n                }\r\n            }\r\n\r\n            if(handler.status) {\r\n                if(parseInt(error.status, 0) === parseInt(handler.status, 0)) {\r\n                    return handler;\r\n                }\r\n            }\r\n\r\n            //TODO add support for openidm errors\r\n        }\r\n    };\r\n\r\n    return obj;\r\n});"]}