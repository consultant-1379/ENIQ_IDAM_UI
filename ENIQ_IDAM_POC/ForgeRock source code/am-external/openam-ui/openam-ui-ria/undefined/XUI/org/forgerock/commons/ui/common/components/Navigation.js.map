{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/components/Navigation.js"],"names":["define","$","_","Backbone","AbstractConfigurationAware","AbstractView","Configuration","EventManager","ModuleLoader","Router","NavigationFilter","obj","getUserName","loggedUser","has","get","id","init","callback","Navigation","extend","element","template","noBaseTemplate","data","events","fireEvent","e","preventDefault","event","currentTarget","sendEvent","render","args","load","then","bind","admin","contains","uiroles","userBar","chain","configuration","map","link","label","t","i18nKey","filter","visibleToRoles","navGroup","currentRoute","intersection","length","value","user","username","secondaryLabel","href","helpLinks","helpLink","reload","parentRender","addLinksFromConfiguration","context","baseActive","self","each","urls","navObj","roles","userHasRole","isCurrent","url","baseUrl","childIsCurrent","topNav","push","buildNavElement","dropdown","subUrl","subNav","active","subs","navElement","key","name","title","icon","hashurl","divider","header","headerTitle","cssClass","urlName","fromHash","afterHash","window","location","split","indexOf","clear","links","navigation","addUserBarLink","position","find","ub","unshift","addLink","role","secondLevelItem","pathToTheNewLink","concat","reduce","prevVal","nextVal","removeLink","pathToTheLink"],"mappings":"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","file":"Navigation.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"underscore\",\r\n    \"backbone\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractConfigurationAware\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\r\n    \"org/forgerock/commons/ui/common/main/Configuration\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\",\r\n    \"org/forgerock/commons/ui/common/util/ModuleLoader\",\r\n    \"org/forgerock/commons/ui/common/main/Router\",\r\n    \"NavigationFilter\"\r\n], function($, _, Backbone, AbstractConfigurationAware, AbstractView, Configuration, EventManager, ModuleLoader,\r\n            Router, NavigationFilter) {\r\n    var obj = new AbstractConfigurationAware(),\r\n\r\n        getUserName = function () {\r\n            if (Configuration.loggedUser.has('userName')) {\r\n                return Configuration.loggedUser.get('userName'); //idm\r\n            } else if (Configuration.loggedUser.has('cn')) {\r\n                return Configuration.loggedUser.get('cn'); //am\r\n            } else {\r\n                return Configuration.loggedUser.id; //fallback option\r\n            }\r\n        };\r\n\r\n    /*\r\n        Navigation is configured from AppConfiguration in each forgerock application.\r\n        There are several items that can be controlled and configured.\r\n\r\n\r\n        Username: Configuration of control of the username in userbar. This can be configured in two primary ways\r\n\r\n            href - Link location. If provided the username (and any additional labels) will become a link,\r\n                   otherwise if nothing provided it will default to a static field.\r\n            label - Provides a title that will sit above the username.\r\n            secondaryLabel - Provides a secondary title that will sit below username.\r\n\r\n            Example:\r\n\r\n             username: {\r\n                 \"href\" : \"#profile/\",\r\n                 \"label\" : \"config.AppConfiguration.Navigation.username.label\",\r\n                 \"secondaryLabel\" : \"config.AppConfiguration.Navigation.username.secondaryLabel\"\r\n             },\r\n\r\n        Userbar: Configuration of the menu items in the userbar\r\n\r\n            id - Element ID\r\n            href - Link location\r\n            i18nKey - Translation string\r\n            divider - When set to true creates a divider for the dropdown menu items\r\n            event - Rather then a href this will fire off a UI Event.\r\n\r\n            Example:\r\n\r\n             {\r\n                 \"id\": \"user_link\",\r\n                 \"href\": \"../selfservice\",\r\n                 \"i18nKey\": \"common.form.userView\"\r\n             },\r\n             {\r\n                divider: true\r\n             },\r\n             {\r\n                 \"id\": \"logout_link\",\r\n                 \"href\": \"#logout/\",\r\n                 \"i18nKey\": \"common.form.logout\"\r\n             },\r\n             {\r\n                 \"id\": \"changePasswordLink\",\r\n                 \"event\" : Constants.EVENT_SHOW_CHANGE_SECURITY_DIALOG,\r\n                 \"i18nKey\": \"common.user.changePassword\"\r\n             }\r\n\r\n        Navigation: Besides username and userbar specific controls the general navigation items can be controlled here.\r\n\r\n            role - Controls the role a user must have set for this navigation item to display\r\n            urls - A list of provided navigation. When tied to drop down controls drop down items. Currently this list\r\n                   can only go two levels deep.\r\n            name - Name of the navigation element\r\n            icon - Icon to display with the navigation name\r\n            url - Link location\r\n            dropdown - Boolean that controls if a drop down element is used or a standard navigation element\r\n\r\n            Example:\r\n\r\n            \"admin\" : {\r\n                \"role\": \"ui-admin\",\r\n                    \"urls\": {\r\n                    \"configuration\": {\r\n                        \"name\": \"Configure\",\r\n                            \"icon\": \"fa fa-wrench\",\r\n                            \"dropdown\": true,\r\n                            \"urls\" : [\r\n                            {\r\n                                \"url\": \"#connectors/\",\r\n                                \"name\": \"config.AppConfiguration.Navigation.links.connectors\",\r\n                                \"icon\": \"fa fa-cubes\"\r\n                            },\r\n                            {\r\n                                \"url\": \"#managed/\",\r\n                                \"name\": \"config.AppConfiguration.Navigation.links.managedObjects\",\r\n                                \"icon\": \"fa fa-th\"\r\n                            },\r\n                            {\r\n                                \"url\": \"#mapping/\",\r\n                                \"name\": \"config.AppConfiguration.Navigation.links.mapping\",\r\n                                \"icon\": \"fa fa-arrows-h\"\r\n                            },\r\n                            {\r\n                                \"url\": \"#settings/\",\r\n                                \"name\": \"config.AppConfiguration.Navigation.links.systemPref\",\r\n                                \"icon\": \"fa fa-cog\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"managed\": {\r\n                        \"name\": \"config.AppConfiguration.Navigation.links.manage\",\r\n                            \"icon\": \"fa fa-cogs\",\r\n                            \"dropdown\": true,\r\n                            \"urls\" : []\r\n                    }\r\n                }\r\n            }\r\n     */\r\n\r\n    obj.init = function(callback) {\r\n        var Navigation = AbstractView.extend({\r\n\r\n            element: \"#menu\",\r\n            template: \"templates/common/NavigationTemplate.html\",\r\n            noBaseTemplate: true,\r\n            data: {},\r\n\r\n            events: {\r\n                \"click .event-link\": \"fireEvent\"\r\n            },\r\n\r\n            fireEvent: function(e){\r\n                e.preventDefault();\r\n                var event = $(e.currentTarget).data().event;\r\n                if (event){\r\n                    EventManager.sendEvent(event, e);\r\n                }\r\n            },\r\n\r\n            render: function(args, callback) {\r\n                /*\r\n                   The user information is shown at the top of the userBar widget,\r\n                   but it is stored in different ways for different products.\r\n                */\r\n                if (Configuration.loggedUser) {\r\n                    /*\r\n                        The Navigation module is called with every page load, but it doesn't render a drop down\r\n                        unless the user is actually logged in. To prevent any unnecessary module loading, only\r\n                        load bootstrap when actually needed.\r\n                    */\r\n                    ModuleLoader.load(\"bootstrap\").then(_.bind(function () {\r\n                        // in rare cases Configuration.loggedUser can be reset by the time bootstap has loaded\r\n                        if (!Configuration.loggedUser) {\r\n                            return;\r\n                        }\r\n\r\n                        this.data.admin = _.contains(Configuration.loggedUser.uiroles, \"ui-admin\");\r\n\r\n                        this.data.userBar = _.chain(obj.configuration.userBar)\r\n                            .map(function (link) {\r\n                                if (_.has(link, \"i18nKey\")) {\r\n                                    link.label = $.t(link.i18nKey);\r\n                                }\r\n                                return link;\r\n                            })\r\n                            .filter(function(link) {\r\n                                if (!link.visibleToRoles) {\r\n                                    return true;\r\n                                }\r\n\r\n                                if (link.navGroup !== Router.currentRoute.navGroup) {\r\n                                    return false;\r\n                                }\r\n\r\n                                return _.intersection(Configuration.loggedUser.uiroles, link.visibleToRoles).length > 0;\r\n                            })\r\n                            .value();\r\n\r\n                        this.data.user = {\r\n                            username: getUserName(),\r\n                            label: _.get(obj.configuration, \"username.label\"),\r\n                            secondaryLabel: _.get(obj.configuration, \"username.secondaryLabel\"),\r\n                            href: _.get(obj.configuration, \"username.href\")\r\n                        };\r\n\r\n                        if (obj.configuration.helpLinks) {\r\n                            this.data.helpLinks = _.map(obj.configuration.helpLinks, function(helpLink) {\r\n                                helpLink.label = $.t(helpLink.label);\r\n                                return helpLink;\r\n                            });\r\n                        }\r\n\r\n                        this.reload();\r\n                        this.parentRender(callback);\r\n\r\n                    }, this));\r\n\r\n                } else {\r\n                    this.reload();\r\n                    this.parentRender(callback);\r\n                }\r\n\r\n            },\r\n\r\n            addLinksFromConfiguration: function(context) {\r\n                var baseActive,\r\n                    self = this;\r\n\r\n                if (!Configuration.loggedUser || !context) {\r\n                    return;\r\n                }\r\n\r\n                _.each(context.urls, function(navObj) {\r\n                    var roles = _.intersection(Configuration.loggedUser.uiroles, navObj.visibleToRoles),\r\n                        userHasRole = roles.length > 0;\r\n                    if(navObj.visibleToRoles && !userHasRole) {\r\n                        return;\r\n                    }\r\n\r\n                    baseActive = self.isCurrent(navObj.url)\r\n                        || self.isCurrent(navObj.baseUrl)\r\n                        || self.childIsCurrent(navObj.urls);\r\n\r\n                    self.data.topNav.push(self.buildNavElement(navObj, baseActive));\r\n\r\n                    // dropdown menus display as submenus and only render for the baseActive.\r\n                    if (navObj.dropdown !== true){\r\n\r\n                        if (baseActive && navObj.urls) {\r\n                            _.each(navObj.urls, function(subUrl) {\r\n                                self.data.subNav.push(self.buildNavElement(subUrl, self.isCurrent(subUrl.url)));\r\n                            });\r\n\r\n                            // Added to provide reference for responsive design submenus to appear in the correct\r\n                            // location.\r\n                            self.data.topNav[self.data.topNav.length - 1].subNav = self.data.subNav;\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n\r\n            buildNavElement: function (navObj, active) {\r\n                var self = this,\r\n                    subs = [],\r\n                    navElement = {\r\n                        key: navObj.name,\r\n                        title: $.t(navObj.name),\r\n                        icon: navObj.icon\r\n                    };\r\n\r\n                if (active) {\r\n                    navElement.active = active;\r\n                }\r\n\r\n                if (navObj.url) {\r\n                    navElement.hashurl = navObj.url;\r\n                } else if (navObj.event) {\r\n                    navElement.event = navObj.event;\r\n                }\r\n\r\n                if (navObj.divider) {\r\n                    navElement.divider = navObj.divider;\r\n                }\r\n\r\n                if (navObj.header) {\r\n                    navElement.header = navObj.header;\r\n                    navElement.headerTitle = $.t(navObj.headerTitle);\r\n                }\r\n\r\n                if (navObj.cssClass) {\r\n                    navElement.cssClass = navObj.cssClass;\r\n                }\r\n\r\n                if (navObj.dropdown === true) {\r\n                    navElement.dropdown = true;\r\n\r\n                    _.each(navObj.urls, function(obj){\r\n                        subs.push(self.buildNavElement(obj, this.isCurrent(obj.url)));\r\n                    }, this);\r\n\r\n                    navElement.urls = subs;\r\n                }\r\n\r\n                return navElement;\r\n            },\r\n\r\n            childIsCurrent: function(urls) {\r\n                var urlName;\r\n\r\n                for (urlName in urls) {\r\n                    if (this.isCurrent(urls[urlName].url)) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n\r\n            isCurrent: function(urlName) {\r\n                var fromHash, afterHash = window.location.href.split('#')[1];\r\n                if (afterHash) {\r\n                    fromHash = \"#\" + afterHash;\r\n                } else {\r\n                    fromHash = \"#/\";\r\n                }\r\n                return fromHash.indexOf(urlName) !== -1;\r\n            },\r\n\r\n            clear: function() {\r\n                this.data.topNav = [];\r\n                this.data.subNav = [];\r\n            },\r\n\r\n            reload: function() {\r\n                this.clear();\r\n\r\n                this.addLinksFromConfiguration(NavigationFilter.filter(obj.configuration.links));\r\n            }\r\n        });\r\n\r\n        obj.navigation = new Navigation();\r\n        obj.navigation.render(null, callback);\r\n    };\r\n\r\n    obj.reload = function() {\r\n        if(obj.navigation) {\r\n            obj.navigation.render();\r\n        }\r\n    };\r\n\r\n    obj.addUserBarLink = function (link, position) {\r\n        if (!_.find(obj.configuration.userBar, function (ub) {\r\n            return ub.id === link.id;\r\n        })) {\r\n\r\n            if (position === \"top\") {\r\n                obj.configuration.userBar.unshift(link);\r\n            } else {\r\n                obj.configuration.userBar.push(link);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Adds new link to the navigation bar. Can either be a top- or a second-level item.\r\n     * Does nothing if this link already exists.\r\n     * @param {Object} link Link to add.\r\n     * @param {string} link.url - Link url.\r\n     * @param {string} link.name - Link name.\r\n     * @param {string} link.cssClass - Link css class.\r\n     * @param {string} link.icon - Link icon font awesome class.\r\n     * @param {string} link.event - Link event.\r\n     * @param {string} role Role to add for (\"admin\" or \"user\").\r\n     * @param {string} [secondLevelItem] If this parameter is absent, the new link will become a top-level link,\r\n     *                                  in order for the new link to become a second-level item, this parameter should\r\n     *                                  point to an existing top-level item (one of the keys of the \"urls\" object).\r\n     */\r\n    obj.addLink = function (link, role, secondLevelItem) {\r\n        var pathToTheNewLink = [role, \"urls\"],\r\n            links;\r\n\r\n        if (secondLevelItem) {\r\n            pathToTheNewLink = pathToTheNewLink.concat([secondLevelItem, \"urls\"]);\r\n        }\r\n\r\n        links = _.reduce(pathToTheNewLink, function (prevVal, nextVal) {\r\n            if (prevVal) {\r\n                return prevVal[nextVal];\r\n            }\r\n        }, obj.configuration.links);\r\n\r\n        if (links && !_.find(links, {name: link.name})) {\r\n            if (secondLevelItem) {\r\n                links.push(link);\r\n            } else {\r\n                links[link.name] = link;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Removes a link from the navigation bar. Can either be a top- or a second-level item.\r\n     * Does nothing if this link does not exist.\r\n     * Will require the nav bar to be reloaded.\r\n     * @param {Object} link Link to remove.\r\n     * @param {string} link.key - Link key.\r\n     * @param {string} link.name - Link name.\r\n     * @param {string} role Role to remove for (\"admin\" or \"user\").\r\n     * @param {string} [secondLevelItem] If this parameter is absent, the link will be removed from the top-level,\r\n     *                                  in order for the link to be removed from the second-level, this parameter should\r\n     *                                  point to an existing top-level item (one of the keys of the \"urls\" object).\r\n     */\r\n    obj.removeLink = function (link, role, secondLevelItem) {\r\n        var pathToTheLink = [role, \"urls\"],\r\n            links;\r\n\r\n        if (secondLevelItem) {\r\n            pathToTheLink = pathToTheLink.concat([secondLevelItem, \"urls\"]);\r\n        }\r\n\r\n        links = _.reduce(pathToTheLink, function (prevVal, nextVal) {\r\n            if (prevVal) {\r\n                return prevVal[nextVal];\r\n            }\r\n        }, obj.configuration.links);\r\n\r\n        if (links && _.find(links, {name: link.name})) {\r\n            delete links[link.key];\r\n        }\r\n    };\r\n\r\n    return obj;\r\n});"]}