{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/RealmTreeNavigationView.js"],"names":["define","$","_","Constants","EventManager","Router","RealmsService","TreeNavigation","humanizeRealmPath","createBreadcrumbs","createTreeNavigation","default","navData","title","icon","route","children","event","RealmTreeNavigationView","extend","events","sendEvent","e","preventDefault","currentTarget","data","realmPath","realmExists","path","realms","get","render","args","callback","realmName","crumbs","pattern","treeNavigation","encodeURIComponent","home","getLink","configuration","routes","realmDefault","then","prototype","call","xhr","status","routeTo","trigger"],"mappings":"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","file":"RealmTreeNavigationView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/openam/ui/admin/services/global/RealmsService\",\n    \"org/forgerock/openam/ui/common/components/TreeNavigation\",\n    \"org/forgerock/openam/ui/admin/views/realms/humanizeRealmPath\",\n    \"org/forgerock/openam/ui/admin/views/common/navigation/createBreadcrumbs\",\n    \"org/forgerock/openam/ui/admin/views/common/navigation/createTreeNavigation\"\n], ($, _, Constants, EventManager, Router, RealmsService, TreeNavigation, humanizeRealmPath, createBreadcrumbs,\n    createTreeNavigation) => {\n    humanizeRealmPath = humanizeRealmPath.default;\n\n    const navData = [{\n        title: \"console.common.navigation.dashboard\",\n        icon: \"fa-dashboard\",\n        route: \"realmsDashboard\"\n    }, {\n        title: \"console.common.navigation.applications\",\n        icon: \"fa-list-alt\",\n        children: [{\n            title: \"console.common.navigation.saml\",\n            icon: \"fa-angle-right\",\n            event: \"main.navigation.EVENT_REDIRECT_TO_JATO_FEDERATION\"\n        }, {\n            title: \"console.common.navigation.wsfed\",\n            icon: \"fa-angle-right\",\n            event: \"main.navigation.EVENT_REDIRECT_TO_JATO_FEDERATION\"\n        }, {\n            title: \"console.common.navigation.oauth20\",\n            icon: \"fa-angle-right\",\n            route: \"realmsApplicationsOAuth2\"\n        }, {\n            title: \"console.common.navigation.remoteConsentAgents\",\n            icon: \"fa-angle-right\",\n            event: \"main.navigation.EVENT_REDIRECT_TO_JATO_AGENTS_RCS\"\n        }, {\n            title: \"console.common.navigation.agents\",\n            icon: \"fa-angle-right\",\n            event: \"main.navigation.EVENT_REDIRECT_TO_JATO_AGENTS\"\n        }]\n    }, {\n        title: \"console.common.navigation.authentication\",\n        icon: \"fa-user\",\n        children: [{\n            title: \"console.common.navigation.settings\",\n            icon: \"fa-angle-right\",\n            route: \"realmsAuthenticationSettings\"\n        }, {\n            title: \"console.common.navigation.chains\",\n            icon: \"fa-angle-right\",\n            route: \"realmsAuthenticationChains\"\n        }, {\n            title: \"console.common.navigation.modules\",\n            icon: \"fa-angle-right\",\n            route: \"realmsAuthenticationModules\"\n        }, {\n            title: \"console.common.navigation.trees\",\n            icon: \"fa-angle-right\",\n            route: \"realmsAuthenticationTrees\"\n        }]\n    }, {\n        title: \"console.common.navigation.services\",\n        icon: \"fa-plug\",\n        route: \"realmsServices\"\n    }, {\n        title: \"console.common.navigation.sessions\",\n        icon: \"fa-ticket\",\n        route: \"realmsSessions\"\n    }, {\n        title: \"console.common.navigation.dataStores\",\n        icon: \"fa-database\",\n        event: \"main.navigation.EVENT_REDIRECT_TO_JATO_DATASTORES\"\n    }, {\n        title: \"console.common.navigation.privileges\",\n        icon: \"fa-check-square-o\",\n        event: \"main.navigation.EVENT_REDIRECT_TO_JATO_PRIVILEGES\"\n    }, {\n        title: \"console.common.navigation.authorization\",\n        icon: \"fa-key\",\n        children: [{\n            title: \"console.common.navigation.policySets\",\n            icon: \"fa-angle-right\",\n            route: \"realmsPolicySets\"\n        }, {\n            title: \"console.common.navigation.resourceTypes\",\n            icon: \"fa-angle-right\",\n            route: \"realmsResourceTypes\"\n        }]\n    }, {\n        title: \"console.common.navigation.subjects\",\n        icon: \"fa-users\",\n        event: \"main.navigation.EVENT_REDIRECT_TO_JATO_SUBJECTS\"\n    }, {\n        title: \"console.common.navigation.sts\",\n        icon: \"fa-tty\",\n        event: \"main.navigation.EVENT_REDIRECT_TO_JATO_STS\"\n    }, {\n        title: \"console.common.navigation.scripts\",\n        icon: \"fa-code\",\n        route: \"realmsScripts\"\n    }];\n\n    const RealmTreeNavigationView = TreeNavigation.extend({\n        events: {\n            \"click [data-event]\": \"sendEvent\"\n        },\n        sendEvent (e) {\n            e.preventDefault();\n            EventManager.sendEvent($(e.currentTarget).data().event, this.data.realmPath);\n        },\n\n        realmExists (path) {\n            return RealmsService.realms.get(path);\n        },\n        render (args, callback) {\n            this.data.realmPath = args[0];\n            this.data.realmName = humanizeRealmPath(this.data.realmPath);\n            this.data.crumbs = createBreadcrumbs(this.route.pattern);\n            this.data.treeNavigation = createTreeNavigation(navData, [encodeURIComponent(this.data.realmPath)]);\n            this.data.title = this.data.realmName;\n            this.data.home = `#${Router.getLink(\n                Router.configuration.routes.realmDefault, [encodeURIComponent(this.data.realmPath)])}`;\n            this.data.icon = \"fa-cloud\";\n            this.realmExists(this.data.realmPath).then(() => {\n                TreeNavigation.prototype.render.call(this, args, callback);\n            }, (xhr) => {\n                /**\n                 * If a non-existant realm was specified, return to realms list\n                 */\n                if (xhr.status === 404) {\n                    Router.routeTo(Router.configuration.routes.realms, {\n                        args: [],\n                        trigger: true\n                    });\n                }\n            });\n        }\n    });\n\n    return new RealmTreeNavigationView();\n});\n"]}