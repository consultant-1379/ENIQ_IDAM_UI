{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/configuration/global/scripting/ScriptsList.jsx"],"names":["ScriptsList","props","state","items","scripts","getAllDefault","subSchemaType","then","response","setState","map","item","_id","name","propTypes","PropTypes","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAqBMA,W;;;AACF,6BAAaC,KAAb,EAAoB;AAAA;;AAAA,kIACVA,KADU;;AAGhB,kBAAKC,KAAL,GAAa;AACTC,uBAAO;AADE,aAAb;AAHgB;AAMnB;;;;gDACoB;AAAA;;AACjB,yCAAeC,OAAf,CAAuBC,aAAvB,CAAqC,KAAKJ,KAAL,CAAWK,aAAhD,EAA+DC,IAA/D,CAAoE,UAACC,QAAD,EAAc;AAC9E,2BAAKC,QAAL,CAAc,EAAEN,OAAOK,QAAT,EAAd;AACH,iBAFD;AAGH;;;qCACS;AACN,oBAAML,QAAQ,KAAKD,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAqB,UAACC,IAAD;AAAA,2BAC/B;AAAA;AAAA,0BAAe,oCAAmCA,KAAKC,GAAvD,EAA+D,KAAMD,KAAKC,GAA1E;AACMD,6BAAKE;AADX,qBAD+B;AAAA,iBAArB,CAAd;;AAMA,uBACI;AAAA;AAAA;AACMV;AADN,iBADJ;AAKH;;;;;;AAGLH,gBAAYc,SAAZ,GAAwB;AACpBR,uBAAe,gBAAMS,SAAN,CAAgBC,MAAhB,CAAuBC;AADlB,KAAxB;;sBAIejB,W","file":"ScriptsList.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\n\nimport ScriptsService from \"org/forgerock/openam/ui/admin/services/global/ScriptsService\";\n\nclass ScriptsList extends Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            items: []\n        };\n    }\n    componentDidMount () {\n        ScriptsService.scripts.getAllDefault(this.props.subSchemaType).then((response) => {\n            this.setState({ items: response });\n        });\n    }\n    render () {\n        const items = this.state.items.map((item) => (\n            <ListGroupItem href={ `#realms/%2F/scripts/edit/${item._id}` } key={ item._id }>\n                { item.name }\n            </ListGroupItem>)\n        );\n\n        return (\n            <ListGroup>\n                { items }\n            </ListGroup>\n        );\n    }\n}\n\nScriptsList.propTypes = {\n    subSchemaType: React.PropTypes.string.isRequired\n};\n\nexport default ScriptsList;\n"]}