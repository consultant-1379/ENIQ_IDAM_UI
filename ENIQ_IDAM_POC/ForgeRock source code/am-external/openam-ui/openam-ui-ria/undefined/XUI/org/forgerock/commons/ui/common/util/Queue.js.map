{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/util/Queue.js"],"names":["define","_","obj","initialValues","_values","isArray","prototype","add","value","push","remove","shift","peek"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,QADI,CAAP,EAEE,UAAUC,CAAV,EAAa;AACZ;;;;;AAKA;;;;;AAKA,QAAIC,MAAM,SAANA,GAAM,CAAUC,aAAV,EAAyB;AAC/B,aAAKC,OAAL,GAAeH,EAAEI,OAAF,CAAUF,aAAV,IAA2BA,aAA3B,GAA2C,EAA1D;AACA,eAAO,IAAP;AACH,KAHD;;AAKA;;;;;AAKAD,QAAII,SAAJ,CAAcC,GAAd,GAAoB,UAAUC,KAAV,EAAiB;AACjC,aAAKJ,OAAL,CAAaK,IAAb,CAAkBD,KAAlB;AACH,KAFD;;AAIA;;;;;AAKAN,QAAII,SAAJ,CAAcI,MAAd,GAAuB,YAAY;AAC/B,eAAO,KAAKN,OAAL,CAAaO,KAAb,CAAmB,CAAnB,CAAP;AACH,KAFD;;AAIA;;;;;;AAMAT,QAAII,SAAJ,CAAcM,IAAd,GAAqB,YAAY;AAC7B,eAAO,KAAKR,OAAL,CAAa,CAAb,CAAP;AACH,KAFD;;AAIA,WAAOF,GAAP;AACH,CA/CA","file":"Queue.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"lodash\"\r\n], function (_) {\r\n    /**\r\n     * Provides a generic, sharable queue (FIFO) mechanism.\r\n     * @exports org/forgerock/commons/ui/common/util/Queue\r\n     */\r\n\r\n    /**\r\n     * Constructor. Takes an optional array for initializing the queue with values\r\n     *\r\n     * @param {array} initialValues - optional array of values to start queuing.\r\n     */\r\n    var obj = function (initialValues) {\r\n        this._values = _.isArray(initialValues) ? initialValues : [];\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Put a new item in the queue\r\n     *\r\n     * @param {Object} value - any arbitrary value to insert into the queue\r\n     */\r\n    obj.prototype.add = function (value) {\r\n        this._values.push(value);\r\n    };\r\n\r\n    /**\r\n     * Remove and return the head of the queue\r\n     *\r\n     * @returns {Object} whatever is on the head of the queue, or undefined if nothing is available\r\n     */\r\n    obj.prototype.remove = function () {\r\n        return this._values.shift(1);\r\n    };\r\n\r\n    /**\r\n     * Return the head of the queue without removing it\r\n     *\r\n     * @param {string} queueName - name of queue to remove from\r\n     * @returns {Object} whatever is on the head of the queue, or undefined if nothing is available\r\n     */\r\n    obj.prototype.peek = function () {\r\n        return this._values[0];\r\n    };\r\n\r\n    return obj;\r\n});"]}