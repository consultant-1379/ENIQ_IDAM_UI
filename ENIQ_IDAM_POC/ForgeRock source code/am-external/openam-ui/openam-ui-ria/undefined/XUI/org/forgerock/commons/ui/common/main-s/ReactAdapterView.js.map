{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/main-s/ReactAdapterView.js"],"names":["define","_","Backbone","ReactDOM","React","Configuration","EventManager","Constants","UIUtils","BASE_TEMPLATE","throwOnNoInitializationOptions","options","Error","throwOnNoReactView","reactView","View","extend","initialize","defaults","reactProps","needsBaseTemplate","setBaseTemplate","setProperty","sendEvent","EVENT_CHANGE_BASE_VIEW","renderReactComponent","render","createElement","el","view","compileTemplate","then","template","document","getElementById","innerHTML","setElement"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,QADI,EAEJ,UAFI,EAGJ,WAHI,EAIJ,OAJI,EAKJ,oDALI,EAMJ,mDANI,EAOJ,gDAPI,EAQJ,8CARI,CAAP,EASE,UAASC,CAAT,EAAYC,QAAZ,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,aAAvC,EAAsDC,YAAtD,EAAoEC,SAApE,EAA+EC,OAA/E,EAAwF;AACvF,QAAIC,gBAAgB,2CAApB;;AAEA,aAASC,8BAAT,CAAyCC,OAAzC,EAAkD;AAC9C,YAAI,CAACA,OAAL,EAAc;AACV,kBAAM,IAAIC,KAAJ,CAAU,qDAAV,CAAN;AACH;AACJ;;AAED,aAASC,kBAAT,CAA6BF,OAA7B,EAAsC;AAClC,YAAI,CAACA,QAAQG,SAAb,EAAwB;AACpB,kBAAM,IAAIF,KAAJ,CAAU,6EAAV,CAAN;AACH;AACJ;;AAED,WAAOV,SAASa,IAAT,CAAcC,MAAd,CAAqB;AACxBC,oBAAY,oBAAUN,OAAV,EAAmB;AAC3BD,2CAA+BC,OAA/B;AACAE,+BAAmBF,OAAnB;;AAEA,iBAAKA,OAAL,GAAeA,OAAf;;AAEAV,cAAEiB,QAAF,CAAW,KAAKP,OAAhB,EAAyB;AACrBQ,4BAAY,EADS;AAErBC,mCAAmB;AAFE,aAAzB;AAIH,SAXuB;;AAaxBC,yBAAiB,2BAAY;AACzBhB,0BAAciB,WAAd,CAA0B,cAA1B,EAA0Cb,aAA1C;AACAH,yBAAaiB,SAAb,CAAuBhB,UAAUiB,sBAAjC;AACH,SAhBuB;;AAkBxBC,8BAAsB,gCAAY;AAC9BtB,qBAASuB,MAAT,CAAgBtB,MAAMuB,aAAN,CAAoB,KAAKhB,OAAL,CAAaG,SAAjC,EAA4C,KAAKH,OAAL,CAAaQ,UAAzD,CAAhB,EAAsF,KAAKS,EAA3F;AACH,SApBuB;;AAsBxBF,gBAAQ,kBAAW;AACf,gBAAIG,OAAO,IAAX;;AAEA,gBAAI,KAAKlB,OAAL,CAAaS,iBAAjB,EAAoC;AAChC,qBAAKC,eAAL;;AAEAb,wBAAQsB,eAAR,CAAwBrB,aAAxB,EAAuCsB,IAAvC,CAA4C,UAAUC,QAAV,EAAoB;AAC5DC,6BAASC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA+CH,QAA/C;AACAH,yBAAKO,UAAL,CAAgB,UAAhB;AACAP,yBAAKJ,oBAAL;AACH,iBAJD;AAKH,aARD,MAQO;AACHI,qBAAKJ,oBAAL;AACH;AACJ;AApCuB,KAArB,CAAP;AAsCH,CA9DA","file":"ReactAdapterView.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"lodash\",\r\n    \"backbone\",\r\n    \"react-dom\",\r\n    \"react\",\r\n    \"org/forgerock/commons/ui/common/main/Configuration\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\",\r\n    \"org/forgerock/commons/ui/common/util/UIUtils\"\r\n], function(_, Backbone, ReactDOM, React, Configuration, EventManager, Constants, UIUtils) {\r\n    var BASE_TEMPLATE = \"templates/common/DefaultBaseTemplate.html\";\r\n\r\n    function throwOnNoInitializationOptions (options) {\r\n        if (!options) {\r\n            throw new Error(\"[ReactAdapterView] No initialization options found.\");\r\n        }\r\n    }\r\n\r\n    function throwOnNoReactView (options) {\r\n        if (!options.reactView) {\r\n            throw new Error(\"[ReactAdapterView] No \\\"reactView\\\" option found on initialization options.\");\r\n        }\r\n    }\r\n\r\n    return Backbone.View.extend({\r\n        initialize: function (options) {\r\n            throwOnNoInitializationOptions(options);\r\n            throwOnNoReactView(options);\r\n\r\n            this.options = options;\r\n\r\n            _.defaults(this.options, {\r\n                reactProps: {},\r\n                needsBaseTemplate: true\r\n            });\r\n        },\r\n\r\n        setBaseTemplate: function () {\r\n            Configuration.setProperty(\"baseTemplate\", BASE_TEMPLATE);\r\n            EventManager.sendEvent(Constants.EVENT_CHANGE_BASE_VIEW);\r\n        },\r\n\r\n        renderReactComponent: function () {\r\n            ReactDOM.render(React.createElement(this.options.reactView, this.options.reactProps), this.el);\r\n        },\r\n\r\n        render: function() {\r\n            var view = this;\r\n\r\n            if (this.options.needsBaseTemplate) {\r\n                this.setBaseTemplate();\r\n\r\n                UIUtils.compileTemplate(BASE_TEMPLATE).then(function (template) {\r\n                    document.getElementById(\"wrapper\").innerHTML = template;\r\n                    view.setElement(\"#content\");\r\n                    view.renderReactComponent();\r\n                });\r\n            } else {\r\n                view.renderReactComponent();\r\n            }\r\n        }\r\n    });\r\n});"]}