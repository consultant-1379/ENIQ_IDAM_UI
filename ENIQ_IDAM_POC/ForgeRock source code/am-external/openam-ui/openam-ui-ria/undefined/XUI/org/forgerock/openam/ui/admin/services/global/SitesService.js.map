{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/admin/services/global/SitesService.js"],"names":["define","_","AbstractDelegate","Constants","JSONSchema","JSONValues","fetchUrl","Promise","obj","host","context","filterUnEditableProperties","data","pick","getSchema","serviceCall","url","default","realm","headers","type","success","filteredProperties","properties","getValues","id","jqXHR","etag","getResponseHeader","getTemplate","sites","getAll","then","sortBy","result","get","all","response","schema","values","create","JSON","stringify","omit","update","remove","isUndefined","getInitialState"],"mappings":"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","file":"SitesService.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\n/**\n * @module org/forgerock/openam/ui/admin/services/global/SitesService\n */\ndefine([\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractDelegate\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/common/models/JSONSchema\",\n    \"org/forgerock/openam/ui/common/models/JSONValues\",\n    \"org/forgerock/openam/ui/common/services/fetchUrl\",\n    \"org/forgerock/openam/ui/common/util/Promise\"\n], (_, AbstractDelegate, Constants, JSONSchema, JSONValues, fetchUrl, Promise) => {\n    const obj = new AbstractDelegate(`${Constants.host}${Constants.context}/json`);\n\n    const filterUnEditableProperties = (data) => _.pick(data, [\"url\", \"secondaryURLs\"]);\n\n    const getSchema = () => obj.serviceCall({\n        url: fetchUrl.default(\"/global-config/sites?_action=schema\", { realm: false }),\n        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n        type: \"POST\",\n        success: (data) => {\n            const filteredProperties = filterUnEditableProperties(data.properties);\n            data.properties = filteredProperties;\n            return data;\n        }\n    });\n\n    const getValues = (id) => obj.serviceCall({\n        url: fetchUrl.default(`/global-config/sites/${id}`, { realm: false }),\n        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n        success: (data, jqXHR) => {\n            data.etag = jqXHR.getResponseHeader(\"ETag\");\n            return data;\n        }\n    });\n\n    const getTemplate = () =>\n        obj.serviceCall({\n            url: fetchUrl.default(\"/global-config/sites?_action=template\", { realm: false }),\n            headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n            type: \"POST\"\n        });\n\n    obj.sites = {\n        getAll: () =>\n            obj.serviceCall({\n                url: fetchUrl.default(\"/global-config/sites?_queryFilter=true\", { realm: false }),\n                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" }\n            }).then((data) => _.sortBy(data.result, \"_id\")),\n        get: (id) =>\n            Promise.all([getSchema(), getValues(id)]).then((response) => ({\n                schema: new JSONSchema(response[0][0]),\n                values: new JSONValues(response[1][0])\n            })),\n        create: (data) =>\n            obj.serviceCall({\n                url: fetchUrl.default(\"/global-config/sites?_action=create\", { realm: false }),\n                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                type: \"POST\",\n                data: JSON.stringify(_.omit(data, [\"servers\"]))\n            }),\n        update: (id, data, etag) =>\n            obj.serviceCall({\n                url: fetchUrl.default(`/global-config/sites/${id}`, { realm: false }),\n                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\", \"If-Match\": etag },\n                type: \"PUT\",\n                data: JSON.stringify(filterUnEditableProperties(data))\n            }),\n        remove: (id, etag) => {\n            const remove = (id, etag) => obj.serviceCall({\n                url: fetchUrl.default(`/global-config/sites/${id}`, { realm: false }),\n                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\", \"If-Match\": etag },\n                type: \"DELETE\"\n            });\n\n            if (_.isUndefined(etag)) {\n                return getValues(id).then((response) => remove(id, response.etag));\n            } else {\n                return remove(id, etag);\n            }\n        },\n        getInitialState: () =>\n            Promise.all([getSchema(), getTemplate()]).then((response) => ({\n                schema: new JSONSchema(response[0][0]),\n                values: new JSONValues(response[1][0])\n            }))\n    };\n\n    return obj;\n});\n"]}