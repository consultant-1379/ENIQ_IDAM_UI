{"version":3,"sources":["../../../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/trees/edit/autoLayout/positions/getTreeNodePositions.jsm"],"names":["getTreeNodePositions","columns","dimensions","map","column","columnIndex","node","rowIndex","id","x","y","flatten","value"],"mappings":";;;;;;;;AAoBA;;;;;;;AApBA;;;;;;;;;;;;;;;;AA2BA,QAAMA,uBAAuB,SAAvBA,oBAAuB,CAACC,OAAD,EAAUC,UAAV,EAAyB;AAClD,eAAO,mBAAMD,OAAN,EACFE,GADE,CACE,UAACC,MAAD,EAASC,WAAT,EAAyB;AAC1B,mBAAO,iBAAID,MAAJ,EAAY,UAACE,IAAD,EAAOC,QAAP;AAAA,uBAAqB;AACpCC,wBAAI,qBAAQF,IAAR,CADgC;AAEpCG,uBAAG,6BAAiBR,OAAjB,EAA0BI,WAA1B,EAAuCH,UAAvC,CAFiC;AAGpCQ,uBAAG,6BAAiBT,OAAjB,EAA0BI,WAA1B,EAAuCE,QAAvC,EAAiDL,UAAjD;AAHiC,iBAArB;AAAA,aAAZ,CAAP;AAKH,SAPE,EAQFS,OARE,GASFC,KATE,EAAP;AAUH,KAXD;;sBAaeZ,oB","file":"getTreeNodePositions.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { chain, findKey, map } from \"lodash\";\n\nimport { getNodeXPosition, getNodeYPosition } from \"./stage\";\n\n/**\n * Given the array of columns and node dimensions, this function returns positions (x, y) for all connected tree nodes.\n *\n * @param {Array[]} columns array of columns\n * @param {Object} dimensions heights and widths of the nodes, indexed by node id\n * @returns {Object} object with node ids as keys and their positions as values\n */\nconst getTreeNodePositions = (columns, dimensions) => {\n    return chain(columns)\n        .map((column, columnIndex) => {\n            return map(column, (node, rowIndex) => ({\n                id: findKey(node),\n                x: getNodeXPosition(columns, columnIndex, dimensions),\n                y: getNodeYPosition(columns, columnIndex, rowIndex, dimensions)\n            }));\n        })\n        .flatten()\n        .value();\n};\n\nexport default getTreeNodePositions;\n"]}