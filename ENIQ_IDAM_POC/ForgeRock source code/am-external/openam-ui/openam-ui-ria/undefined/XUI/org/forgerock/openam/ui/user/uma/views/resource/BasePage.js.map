{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/user/uma/views/resource/BasePage.js"],"names":["define","BackbonePaginator","Backbone","BackgridFilter","$","Backgrid","AbstractView","Configuration","Constants","fetchUrl","BackgridUtils","CommonShare","BasePage","extend","createCollection","url","queryFilters","self","PageableCollection","context","queryParams","getQueryParams","_sortKeys","sortKeys","_queryFilter","_pagedResultsOffset","pagedResultsOffset","state","getState","parseState","parseRecords","data","result","length","recordsPresent","sync","createLabelCollection","labelId","filters","loggedUser","get","push","default","createSetCollection","notResourceOwner","createColumns","pathToResource","name","label","t","cell","UriExtCell","headerCell","FilterHeaderCell","href","rawValue","formattedValue","model","editable","ClassHeaderCell","Cell","className","events","share","shareView","renderDialog","_id","toBeCreated","render","$el","attr","delegateEvents","sortable","renderGrid","Collection","columns","callback","grid","paginator","collection","on","doubleSortFix","Grid","emptyText","Extension","ThemeablePaginator","windowSize","parentRender","find","append","el","fetch","reset","processData","done"],"mappings":"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","file":"BasePage.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"backbone.paginator\",\n    \"backbone\",\n    \"backgrid-filter\",\n    \"jquery\",\n    \"org/forgerock/commons/ui/common/backgrid/Backgrid\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Configuration\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/common/services/fetchUrl\",\n    \"org/forgerock/openam/ui/common/util/BackgridUtils\",\n    \"org/forgerock/openam/ui/user/uma/views/share/CommonShare\",\n    \"org/forgerock/commons/ui/common/backgrid/extension/ThemeablePaginator\"\n], (BackbonePaginator, Backbone, BackgridFilter, $, Backgrid, AbstractView, Configuration, Constants, fetchUrl,\n    BackgridUtils, CommonShare) => {\n    var BasePage = AbstractView.extend({\n        createCollection (url, queryFilters) {\n            var self = this;\n\n            return Backbone.PageableCollection.extend({\n                url: `${Constants.context}/json${url}`,\n                queryParams: BackgridUtils.getQueryParams({\n                    _sortKeys: BackgridUtils.sortKeys,\n                    _queryFilter: queryFilters,\n                    _pagedResultsOffset: BackgridUtils.pagedResultsOffset\n                }),\n                state: BackgridUtils.getState(),\n                parseState: BackgridUtils.parseState,\n                parseRecords (data) {\n                    if (data.result.length) {\n                        self.recordsPresent();\n                    }\n\n                    return data.result;\n                },\n                sync: BackgridUtils.sync\n            });\n        },\n        createLabelCollection (labelId) {\n            var filters = [`resourceOwnerId eq \"${Configuration.loggedUser.get(\"username\")}\"`];\n\n            if (labelId) {\n                filters.push(`labels eq \"${labelId}\"`);\n            }\n\n            return this.createCollection(\n                fetchUrl.default(`/users/${Configuration.loggedUser.get(\"username\")}/oauth2/resources/sets`),\n                filters\n            );\n        },\n        createSetCollection (notResourceOwner) {\n            var filters = [`resourceOwnerId eq \"${Configuration.loggedUser.get(\"username\")}\"`];\n\n            if (notResourceOwner) {\n                filters[0] = `! ${filters[0]}`;\n            }\n\n            return this.createCollection(\n                fetchUrl.default(`/users/${Configuration.loggedUser.get(\"username\")}/oauth2/resources/sets`),\n                filters\n            );\n        },\n        createColumns (pathToResource) {\n            return [{\n                name: \"name\",\n                label: $.t(\"uma.resources.grid.header.0\"),\n                cell: BackgridUtils.UriExtCell,\n                headerCell: BackgridUtils.FilterHeaderCell,\n                href (rawValue, formattedValue, model) {\n                    return `#uma/resources/${pathToResource}/${model.get(\"_id\")}`;\n                },\n                editable: false\n            }, {\n                name: \"resourceServer\",\n                label: $.t(\"uma.resources.grid.header.1\"),\n                cell: \"string\",\n                editable: false,\n                headerCell: BackgridUtils.ClassHeaderCell\n            }, {\n                name: \"type\",\n                label: $.t(\"uma.resources.grid.header.2\"),\n                cell: \"string\",\n                headerCell: BackgridUtils.ClassHeaderCell,\n                editable: false\n            }, {\n                name: \"share\",\n                label: $.t(\"uma.resources.grid.header.3\"),\n                cell: Backgrid.Cell.extend({\n                    className: \"fr-col-btn-1 fa fa-share\",\n                    events: { \"click\": \"share\" },\n                    share () {\n                        var shareView = new CommonShare();\n                        shareView.renderDialog({\n                            _id: this.model.get(\"_id\"),\n                            toBeCreated: this.model.toBeCreated,\n                            share: () => {\n                                this.model.toBeCreated = false;\n                            }\n                        });\n                    },\n                    render () {\n                        this.$el.attr({ \"title\": $.t(\"uma.share.shareResource\") });\n                        this.delegateEvents();\n                        return this;\n                    }\n                }),\n                editable: false,\n                sortable: false,\n                headerCell: BackgridUtils.ClassHeaderCell\n            }];\n        },\n        recordsPresent () {\n            // Override in child\n        },\n        renderGrid (Collection, columns, callback) {\n            var self = this, grid, paginator;\n\n            this.data.collection = new Collection();\n            this.data.collection.on(\"backgrid:sort\", BackgridUtils.doubleSortFix);\n\n            grid = new Backgrid.Grid({\n                columns,\n                className: \"backgrid table\",\n                collection: this.data.collection,\n                emptyText: $.t(\"console.common.noResults\")\n            });\n\n            paginator = new Backgrid.Extension.ThemeablePaginator({\n                collection: this.data.collection,\n                windowSize: 3\n            });\n\n            this.parentRender(function () {\n                self.$el.find(\".table-container\").append(grid.render().el);\n                self.$el.find(\".panel-body\").append(paginator.render().el);\n\n                self.data.collection.fetch({ reset: true, processData: false }).done(function () {\n                    if (callback) {\n                        callback();\n                    }\n                });\n            });\n        }\n    });\n\n    return BasePage;\n});\n"]}