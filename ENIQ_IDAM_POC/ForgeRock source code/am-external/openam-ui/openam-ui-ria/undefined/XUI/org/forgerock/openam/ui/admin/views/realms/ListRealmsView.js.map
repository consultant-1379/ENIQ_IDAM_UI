{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/ListRealmsView.jsm"],"names":["ListRealmsView","template","events","partials","event","preventDefault","self","realm","getRealmFromEvent","buttons","label","t","action","dialog","close","cssClass","performDeleteRealm","always","isTopLevelRealm","active","splice","realms","update","then","response","addMessage","type","TYPE_DANGER","render","show","title","realmName","name","message","path","currentTarget","closest","data","find","remove","dnsAliases","filter","aliases","item","indexOf","status","args","callback","all","result","allRealmPaths","each","push","parentRender","tableData","toggleView","el","activeView","getActiveView","DEFAULT_VIEW","button","btnClass","href","icon","getElementA","$el","popover","getElementB"],"mappings":"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","file":"ListRealmsView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\nimport _ from \"lodash\";\nimport $ from \"jquery\";\n\nimport { populateRealmsDropdown } from \"org/forgerock/openam/ui/common/util/NavigationHelper\";\nimport AbstractView from \"org/forgerock/commons/ui/common/main/AbstractView\";\nimport BootstrapDialog from \"org/forgerock/commons/ui/common/components/BootstrapDialog\";\nimport Messages from \"org/forgerock/commons/ui/common/components/Messages\";\nimport RealmsService from \"org/forgerock/openam/ui/admin/services/global/RealmsService\";\nimport TemplateBasedView from \"org/forgerock/openam/ui/common/components/TemplateBasedView\";\nimport ToggleCardListView from \"org/forgerock/openam/ui/admin/views/common/ToggleCardListView\";\nimport updateDefaultServerAdvancedFqdnMap\n    from \"org/forgerock/openam/ui/admin/views/realms/updateDefaultServerAdvancedFqdnMap\";\n\nclass ListRealmsView extends AbstractView {\n    constructor () {\n        super();\n        this.template = \"templates/admin/views/realms/ListRealmsTemplate.html\";\n        this.events = {\n            \"click [data-delete-realm]\" : \"deleteRealm\",\n            \"click [data-toggle-realm]\" : \"toggleRealmActive\"\n        };\n        this.partials = [\n            \"partials/util/_Status.html\",\n            \"partials/util/_ButtonLink.html\",\n            \"templates/admin/views/realms/_RealmCard.html\"\n        ];\n    }\n    deleteRealm (event) {\n        event.preventDefault();\n\n        var self = this,\n            realm = this.getRealmFromEvent(event),\n            buttons = [{\n                label: $.t(\"common.form.cancel\"),\n                action: (dialog) => {\n                    dialog.close();\n                }\n            }, {\n                label: $.t(\"common.form.delete\"),\n                cssClass: \"btn-danger\",\n                action: (dialog) => {\n                    self.performDeleteRealm(realm).always(function () {\n                        dialog.close();\n                    });\n                }\n            }];\n\n        if (realm.isTopLevelRealm) {\n            return false;\n        }\n\n        if (realm.active) {\n            buttons.splice(1, 0, {\n                label: $.t(\"common.form.deactivate\"),\n                action: (dialog) => {\n                    realm.active = false;\n                    RealmsService.realms.update(realm).then(null, function (response) {\n                        Messages.addMessage({\n                            type: Messages.TYPE_DANGER,\n                            response\n                        });\n                    }).always(function () {\n                        self.render();\n                        dialog.close();\n                    });\n                }\n            });\n        }\n\n        BootstrapDialog.show({\n            title: $.t(\"console.realms.warningDialog.title\", { realmName: realm.name }),\n            type: BootstrapDialog.TYPE_DANGER,\n            message: realm.active ? $.t(\"console.realms.warningDialog.activateMessage\")\n                : $.t(\"console.realms.warningDialog.deactivateMessage\"),\n            buttons\n        });\n    }\n    getRealmFromEvent (event) {\n        var path = $(event.currentTarget).closest(\"div[data-realm-path]\").data(\"realm-path\"),\n            realm = _.find(this.data.realms, { path });\n        return realm;\n    }\n    getRealmFromList (path) {\n        return _.find(this.data.realms, { path });\n    }\n    performDeleteRealm (realm) {\n        var self = this;\n        return RealmsService.realms.remove(realm.path).then(() => {\n            const dnsAliases = _.filter(realm.aliases, (item) => item.indexOf(\".\") > -1);\n            updateDefaultServerAdvancedFqdnMap(realm.path, [], dnsAliases).then(() => self.render(), () => {\n                self.render();\n                Messages.addMessage(\n                    { type: Messages.TYPE_DANGER, message: $.t(\"console.realms.edit.errors.fqdnMap\") }\n                );\n            });\n        }, (response) => {\n            if (response && response.status === 409) {\n                Messages.addMessage({\n                    message: $.t(\"console.realms.parentRealmCannotDeleted\"),\n                    type: Messages.TYPE_DANGER\n                });\n            } else {\n                Messages.addMessage({ response, type: Messages.TYPE_DANGER });\n            }\n        });\n    }\n    isTopLevelRealm (name) {\n        return name === \"/\";\n    }\n    render (args, callback) {\n        var self = this;\n\n        RealmsService.realms.all().then((data) => {\n            var result = _.find(data.result, { name: \"/\" });\n\n            if (result) {\n                result.name = $.t(\"console.common.topLevelRealm\");\n            }\n            self.data.realms = data.result;\n            self.data.allRealmPaths = [];\n            populateRealmsDropdown(data);\n\n            _.each(self.data.realms, (realm) => {\n                realm.isTopLevelRealm = self.isTopLevelRealm(realm.path);\n                self.data.allRealmPaths.push(realm.path);\n            });\n\n            self.parentRender(() => {\n                const tableData = {\n                    \"headers\": [\n                        $.t(\"console.realms.grid.header.0\"), $.t(\"console.realms.grid.header.1\"),\n                        $.t(\"console.realms.grid.header.2\"), $.t(\"console.realms.grid.header.3\")\n                    ],\n                    \"items\" : self.data.realms\n                };\n\n                this.toggleView = new ToggleCardListView({\n                    el: \"#toggleCardList\",\n                    activeView: this.toggleView ? this.toggleView.getActiveView() : ToggleCardListView.DEFAULT_VIEW,\n                    button: {\n                        btnClass: \"btn-primary\",\n                        href: \"#realms/new\",\n                        icon: \"fa-plus\",\n                        title: $.t(\"console.realms.newRealm\")\n                    }\n                });\n\n                this.toggleView.render((toggleView) => {\n                    new TemplateBasedView({\n                        data: tableData,\n                        el: toggleView.getElementA(),\n                        template: \"templates/admin/views/realms/RealmsCardsTemplate.html\",\n                        callback: () => {\n                            this.$el.find('[data-toggle=\"popover\"]').popover();\n                        }\n                    }).render();\n                    new TemplateBasedView({\n                        data: tableData,\n                        el: toggleView.getElementB(),\n                        template: \"templates/admin/views/realms/RealmsTableTemplate.html\"\n                    }).render();\n                });\n\n                if (callback) {\n                    callback();\n                }\n            });\n        }, (response) =>\n            Messages.addMessage({\n                type: Messages.TYPE_DANGER,\n                response\n            })\n        );\n    }\n    toggleRealmActive (event) {\n        event.preventDefault();\n        var self = this,\n            realm = this.getRealmFromEvent(event);\n\n        if (realm.isTopLevelRealm) {\n            return false;\n        }\n        realm.active = !realm.active;\n        RealmsService.realms.update(realm).then(null, (response) => {\n            Messages.addMessage({\n                type: Messages.TYPE_DANGER,\n                response\n            });\n        }).always(() => self.render());\n    }\n}\n\nexport default new ListRealmsView();\n"]}