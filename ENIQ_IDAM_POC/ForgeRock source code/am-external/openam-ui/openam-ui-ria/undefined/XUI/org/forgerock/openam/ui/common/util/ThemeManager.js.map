{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/common/util/ThemeManager.js"],"names":["define","$","_","ThemeConfiguration","Configuration","EventManager","URIUtils","Constants","Router","store","defaultThemeName","applyThemeToPage","path","icon","stylesheets","remove","rel","type","href","require","toUrl","appendTo","each","stylesheet","isMatchingThemeMapping","realm","authenticationChain","mapping","matchers","realms","authenticationChains","matcherMappings","pick","keys","every","mappings","matcher","value","some","isRegExp","test","findMatchingTheme","isArray","matchedThemeMapping","find","partial","theme","makeUrlsRelativeToEntryPoint","clone","settings","logo","src","loginLogo","extendTheme","parentTheme","merge","objectValue","sourceValue","undefined","validateConfig","isObject","themes","getAuthenticationChainName","urlParams","parseQueryString","getCurrentCompositeQueryString","service","authIndexType","authIndexValue","getTheme","default","getState","remote","info","globalData","themeName","isAdminTheme","get","hasThemeNameChanged","hasAdminThemeFlagChanged","hasThemeChanged","defaultTheme","Deferred","resolve","DEFAULT_STYLESHEETS","sendEvent","EVENT_THEME_CHANGED"],"mappings":"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","file":"ThemeManager.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2011-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"config/ThemeConfiguration\",\n    \"org/forgerock/commons/ui/common/main/Configuration\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/util/URIUtils\",\n    \"org/forgerock/openam/ui/common/util/Constants\",\n    \"Router\",\n    \"store/index\"\n], function ($, _, ThemeConfiguration, Configuration, EventManager, URIUtils, Constants, Router, store) {\n    /**\n     * @exports org/forgerock/openam/ui/common/util/ThemeManager\n     */\n\n    var defaultThemeName = \"default\",\n        applyThemeToPage = function (path, icon, stylesheets) {\n            // We might be switching themes (due to a realm change) and so we need to clean up the previous theme.\n            $(\"link\").remove();\n\n            $(\"<link/>\", {\n                rel: \"icon\",\n                type: \"image/x-icon\",\n                href: require.toUrl(path + icon)\n            }).appendTo(\"head\");\n\n            $(\"<link/>\", {\n                rel: \"shortcut icon\",\n                type: \"image/x-icon\",\n                href: require.toUrl(path + icon)\n            }).appendTo(\"head\");\n\n            _.each(stylesheets, function (stylesheet) {\n                $(\"<link/>\", {\n                    rel: \"stylesheet\",\n                    type: \"text/css\",\n                    href: require.toUrl(stylesheet)\n                }).appendTo(\"head\");\n            });\n        },\n\n        /**\n         * Determine if a mapping specification matches the current environment. Mappings are of the form:\n         * { theme: \"theme-name\", realms: [\"/a\", \"/b\"], authenticationChains: [\"test\", \"cats\"] }.\n         *\n         * @param {string} realm The full realm path to match the themes against.\n         * @param {string} authenticationChain The name of the authentication chain to match themes against.\n         * @param {object} mapping the mapping specification provided by the theme configuration.\n         * @returns {boolean} true if mapping matches the current environment.\n         */\n        isMatchingThemeMapping = function (realm, authenticationChain, mapping) {\n            var matchers = {\n                    realms: realm,\n                    authenticationChains: authenticationChain\n                },\n                matcherMappings = _.pick(mapping, _.keys(matchers));\n\n            return _.every(matcherMappings, function (mappings, matcher) {\n                var value = matchers[matcher];\n                return _.some(mappings, function (mapping) {\n                    if (_.isRegExp(mapping)) {\n                        return mapping.test(value);\n                    } else {\n                        return mapping === value;\n                    }\n                });\n            });\n        },\n\n        /**\n         * Find the appropriate theme for the current environment by using the theme configuration mappings.\n         * <p>\n         * If a theme is found that matches the current environment then its name will be\n         * returned, otherwise the default theme name will be returned.\n         * @param {string} realm The full realm path to match the themes against.\n         * @param {string} authenticationChain The name of the authentication chain to match themes against.\n         * @returns {string} theme The selected theme configuration name.\n         */\n        findMatchingTheme = function (realm, authenticationChain) {\n            if (!_.isArray(ThemeConfiguration.mappings)) {\n                return defaultThemeName;\n            }\n            var matchedThemeMapping = _.find(ThemeConfiguration.mappings,\n                _.partial(isMatchingThemeMapping, realm, authenticationChain));\n            if (matchedThemeMapping) {\n                return matchedThemeMapping.theme;\n            }\n            return defaultThemeName;\n        },\n\n        makeUrlsRelativeToEntryPoint = function (theme) {\n            theme = _.clone(theme, true);\n            if (theme.settings) {\n                if (theme.settings.logo) {\n                    theme.settings.logo.src = require.toUrl(theme.settings.logo.src);\n                }\n                if (theme.settings.loginLogo) {\n                    theme.settings.loginLogo.src = require.toUrl(theme.settings.loginLogo.src);\n                }\n            }\n            return theme;\n        },\n\n        extendTheme = function (theme, parentTheme) {\n            return _.merge({}, parentTheme, theme, function (objectValue, sourceValue) {\n                // We don't want to merge arrays. If a theme has specified an array, it should be used verbatim.\n                if (_.isArray(sourceValue)) {\n                    return sourceValue;\n                }\n                return undefined;\n            });\n        },\n\n        validateConfig = function () {\n            if (!_.isObject(ThemeConfiguration)) {\n                throw \"Theme configuration must return an object\";\n            }\n\n            if (!_.isObject(ThemeConfiguration.themes)) {\n                throw \"Theme configuration must specify a themes object\";\n            }\n\n            if (!_.isObject(ThemeConfiguration.themes[defaultThemeName])) {\n                throw \"Theme configuration must specify a default theme\";\n            }\n        },\n\n        // TODO: This code should be shared with the RESTLoginView and friends.\n        getAuthenticationChainName = function () {\n            var urlParams = URIUtils.parseQueryString(URIUtils.getCurrentCompositeQueryString());\n\n            if (urlParams.service) {\n                return urlParams.service;\n            }\n            if (urlParams.authIndexType && urlParams.authIndexType === \"service\") {\n                return urlParams.authIndexValue || \"\";\n            }\n            return \"\";\n        };\n\n    return {\n        /**\n         * Determine the theme from the current realm and setup the theme on the page. This will\n         * clear out any previous theme.\n         * @returns {Promise} a promise that is resolved when the theme has been applied.\n         */\n        getTheme () {\n            validateConfig();\n\n            const realm = store.default.getState().remote.info.realm || Configuration.globalData.realm;\n            var themeName = findMatchingTheme(realm, getAuthenticationChainName()),\n                isAdminTheme = _.get(Router, \"currentRoute.navGroup\") === \"admin\",\n                hasThemeNameChanged = themeName !== Configuration.globalData.themeName,\n                hasAdminThemeFlagChanged = isAdminTheme !== Configuration.globalData.isAdminTheme,\n                hasThemeChanged = hasThemeNameChanged || hasAdminThemeFlagChanged,\n                defaultTheme,\n                theme,\n                stylesheets;\n\n            if (!hasThemeChanged) {\n                return $.Deferred().resolve(Configuration.globalData.theme);\n            }\n\n            defaultTheme = ThemeConfiguration.themes[defaultThemeName];\n\n            theme = ThemeConfiguration.themes[themeName];\n            theme = extendTheme(theme, defaultTheme);\n            theme = makeUrlsRelativeToEntryPoint(theme);\n\n            // We don't apply themes to the admin interface because it would take significant effort to make the UI\n            // themeable.\n            stylesheets = isAdminTheme ? Constants.DEFAULT_STYLESHEETS : theme.stylesheets;\n\n            applyThemeToPage(theme.path, theme.icon, stylesheets);\n            Configuration.globalData.theme = theme;\n            Configuration.globalData.themeName = themeName;\n            Configuration.globalData.isAdminTheme = isAdminTheme;\n            EventManager.sendEvent(Constants.EVENT_THEME_CHANGED);\n            return $.Deferred().resolve(theme);\n        }\n    };\n});\n"]}