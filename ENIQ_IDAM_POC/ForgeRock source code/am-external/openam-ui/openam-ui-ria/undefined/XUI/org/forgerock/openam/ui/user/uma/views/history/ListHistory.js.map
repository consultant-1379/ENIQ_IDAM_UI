{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/user/uma/views/history/ListHistory.js"],"names":["define","$","_","Backbone","BackbonePaginator","BackgridFilter","Backgrid","ThemeablePaginator","AbstractView","Configuration","Constants","fetchUrl","BackgridUtils","HistoryView","extend","template","baseTemplate","events","render","self","collection","grid","paginator","PageableCollection","url","context","default","loggedUser","get","state","pageSize","sortKey","order","queryParams","_sortKeys","sortKeys","_queryFilter","queryFilter","_pagedResultsOffset","pagedResultsOffset","parseState","parseRecords","sync","Grid","columns","name","label","t","headerCell","FilterHeaderCell","cell","editable","sortType","UriExtCell","href","rawValue","formattedValue","model","encodeURIComponent","formatter","CellFormatter","prototype","fromRaw","toLowerCase","DatetimeAgoCell","emptyText","className","on","doubleSortFix","Extension","windowSize","parentRender","$el","find","append","el","fetch","processData","reset"],"mappings":"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","file":"ListHistory.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"backbone\",\n    \"backbone.paginator\",\n    \"backgrid-filter\",\n    \"org/forgerock/commons/ui/common/backgrid/Backgrid\",\n    \"org/forgerock/commons/ui/common/backgrid/extension/ThemeablePaginator\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Configuration\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/common/services/fetchUrl\",\n    \"org/forgerock/openam/ui/common/util/BackgridUtils\"\n], function ($, _, Backbone, BackbonePaginator, BackgridFilter, Backgrid, ThemeablePaginator, AbstractView,\n             Configuration, Constants, fetchUrl, BackgridUtils) {\n    var HistoryView = AbstractView.extend({\n        template: \"templates/user/uma/views/history/ListHistory.html\",\n        baseTemplate: \"templates/common/DefaultBaseTemplate.html\",\n        events: {},\n\n        render () {\n            var self = this,\n                collection,\n                grid,\n                paginator;\n\n            collection = new (Backbone.PageableCollection.extend({\n                url: `${Constants.context}/json${\n                    fetchUrl.default(`/users/${Configuration.loggedUser.get(\"username\")}/uma/auditHistory`)}`,\n                state: {\n                    pageSize: 10,\n                    sortKey: \"eventTime\",\n                    order: 1\n                },\n                queryParams: {\n                    pageSize: \"_pageSize\",\n                    _sortKeys: BackgridUtils.sortKeys,\n                    _queryFilter: BackgridUtils.queryFilter,\n                    _pagedResultsOffset: BackgridUtils.pagedResultsOffset\n                },\n                parseState: BackgridUtils.parseState,\n                parseRecords: BackgridUtils.parseRecords,\n                sync: BackgridUtils.sync\n            }))();\n\n            grid = new Backgrid.Grid({\n                columns: [{\n                    name: \"requestingPartyName\",\n                    label: $.t(\"uma.history.grid.header.0\"),\n                    headerCell: BackgridUtils.FilterHeaderCell,\n                    cell: \"string\",\n                    editable: false,\n                    sortType: \"toggle\"\n                }, {\n                    name: \"resourceSetName\",\n                    label: $.t(\"uma.history.grid.header.1\"),\n                    headerCell: BackgridUtils.FilterHeaderCell,\n                    cell: BackgridUtils.UriExtCell,\n                    href (rawValue, formattedValue, model) {\n                        return `#uma/resources/myresources/all/${encodeURIComponent(model.get(\"resourceSetId\"))}`;\n                    },\n                    editable: false,\n                    sortType: \"toggle\"\n                }, {\n                    name: \"type\",\n                    label: $.t(\"uma.history.grid.header.2\"),\n                    cell: \"string\",\n                    formatter: _.extend({}, Backgrid.CellFormatter.prototype, {\n                        fromRaw (rawValue) {\n                            return $.t(`uma.history.grid.types.${rawValue.toLowerCase()}`);\n                        }\n                    }),\n                    editable: false,\n                    sortType: \"toggle\"\n                }, {\n                    name: \"eventTime\",\n                    label: $.t(\"uma.history.grid.header.3\"),\n                    cell: BackgridUtils.DatetimeAgoCell,\n                    editable: false,\n                    sortType: \"toggle\"\n                }],\n                emptyText: $.t(\"console.common.noResults\"),\n                className:\"backgrid table\",\n                collection\n            });\n\n            collection.on(\"backgrid:sort\", BackgridUtils.doubleSortFix);\n\n            paginator = new Backgrid.Extension.ThemeablePaginator({\n                collection,\n                windowSize: 3\n            });\n\n            self.parentRender(function () {\n                self.$el.find(\".table-container\").append(grid.render().el);\n                self.$el.find(\".panel-body\").append(paginator.render().el);\n                collection.fetch({ processData: false, reset: true });\n            });\n        }\n    });\n\n    return new HistoryView();\n});\n"]}