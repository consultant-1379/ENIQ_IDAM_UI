{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/chains/PostProcessView.js"],"names":["define","$","_","AbstractView","BootstrapDialog","Handlebars","PostProcessView","extend","template","events","element","partials","add","newProcessClass","$el","find","val","trim","invalidName","data","chainData","loginPostProcessClass","className","html","compile","push","render","remove","e","index","currentTarget","closest","change","prop","value","length","addClassNameDialog","self","promise","Deferred","resolve","show","title","t","message","newClassName","closable","buttons","label","action","dialog","close","id","cssClass","parentRender"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,mDAHG,EAIH,4DAJG,EAKH,YALG,CAAP,EAMG,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,YAAhB,EAA8BC,eAA9B,EAA+CC,UAA/C,EAA2D;AAC1D,QAAIC,kBAAkBH,aAAaI,MAAb,CAAoB;AACtCC,kBAAU,6EAD4B;AAEtCC,gBAAQ;AACJ,iDAAqC,QADjC;AAEJ,8CAAqC,KAFjC;AAGJ,+CAAqC,QAHjC;AAIJ,+CAAqC;AAJjC,SAF8B;AAQtCC,iBAAS,kBAR6B;AAStCC,kBAAU,CACN,6BADM,CAT4B;;AAatCC,WAbsC,iBAa/B;AACH,gBAAIC,kBAAkB,KAAKC,GAAL,CAASC,IAAT,CAAc,0BAAd,EAA0CC,GAA1C,GAAgDC,IAAhD,EAAtB;AAAA,gBACIC,cAAchB,EAAEa,IAAF,CAAO,KAAKI,IAAL,CAAUC,SAAV,CAAoBC,qBAA3B,EAAkD,UAAUC,SAAV,EAAqB;AACjF,uBAAOA,cAAcT,eAArB;AACH,aAFa,CADlB;AAIA,gBAAIK,WAAJ,EAAiB;AACb,qBAAKJ,GAAL,CAASC,IAAT,CAAc,iBAAd,EAAiCQ,IAAjC,CACIlB,WAAWmB,OAAX,CAAmB,sCACf,2EADJ,CADJ;AAIH,aALD,MAKO;AACH,qBAAKL,IAAL,CAAUC,SAAV,CAAoBC,qBAApB,CAA0CI,IAA1C,CAA+CZ,eAA/C;AACA,qBAAKa,MAAL,CAAY,KAAKP,IAAL,CAAUC,SAAtB;AACH;AACJ,SA3BqC;AA6BtCO,cA7BsC,kBA6B9BC,CA7B8B,EA6B3B;AACP,gBAAIC,QAAQ5B,EAAE2B,EAAEE,aAAJ,EAAmBC,OAAnB,CAA2B,IAA3B,EAAiCF,KAAjC,EAAZ;AACA,iBAAKV,IAAL,CAAUC,SAAV,CAAoBC,qBAApB,CAA0CQ,KAA1C,IAAmD,EAAnD;AACA,iBAAKH,MAAL,CAAY,KAAKP,IAAL,CAAUC,SAAtB;AACH,SAjCqC;AAmCtCY,cAnCsC,kBAmC9BJ,CAnC8B,EAmC3B;AACP,iBAAKd,GAAL,CAASC,IAAT,CAAc,0BAAd,EAA0CkB,IAA1C,CAA+C,UAA/C,EAA2DL,EAAEE,aAAF,CAAgBI,KAAhB,CAAsBC,MAAtB,KAAiC,CAA5F;AACH,SArCqC;AAuCtCC,0BAvCsC,gCAuChB;AAClB,gBAAIC,OAAO,IAAX;AAAA,gBACIC,UAAUrC,EAAEsC,QAAF,EADd;AAAA,gBAEI1B,kBAAkB,KAAKC,GAAL,CAASC,IAAT,CAAc,0BAAd,EAA0CC,GAA1C,GAAgDC,IAAhD,EAFtB;AAGA,gBAAIJ,oBAAoB,EAAxB,EAA4B;AACxBwB,qBAAKvB,GAAL,CAASC,IAAT,CAAc,0BAAd,EAA0CC,GAA1C,CAA8C,EAA9C;AACAsB,wBAAQE,OAAR;AACH,aAHD,MAGO;AACHpC,gCAAgBqC,IAAhB,CAAqB;AACjBC,2BAAOzC,EAAE0C,CAAF,CAAI,4EAAJ,CADU;AAEjBC,6BAAS3C,EAAE0C,CAAF,CAAI,8EAAJ,EACL,EAAEE,cAAchC,eAAhB,EADK,CAFQ;AAIjBiC,8BAAU,KAJO;AAKjBC,6BAAS,CAAC;AACNC,+BAAO/C,EAAE0C,CAAF,CAAI,oBAAJ,CADD;AAENM,8BAFM,kBAEEC,MAFF,EAEU;AACZb,iCAAKvB,GAAL,CAASC,IAAT,CAAc,0BAAd,EAA0CC,GAA1C,CAA8C,EAA9C;AACAkC,mCAAOC,KAAP;AACAb,oCAAQE,OAAR;AACH;AANK,qBAAD,EAON;AACCY,4BAAI,OADL;AAECJ,+BAAO/C,EAAE0C,CAAF,CAAI,gBAAJ,CAFR;AAGCU,kCAAU,aAHX;AAICJ,8BAJD,kBAISC,MAJT,EAIiB;AACZb,iCAAKzB,GAAL;AACAsC,mCAAOC,KAAP;AACAb,oCAAQE,OAAR;AACH;AARF,qBAPM;AALQ,iBAArB;AAuBH;AACD,mBAAOF,OAAP;AACH,SAxEqC;AA0EtCZ,cA1EsC,kBA0E9BN,SA1E8B,EA0EnB;AACf,iBAAKD,IAAL,CAAUC,SAAV,GAAsBA,SAAtB;AACA,iBAAKkC,YAAL;AACH;AA7EqC,KAApB,CAAtB;;AAgFA,WAAO,IAAIhD,eAAJ,EAAP;AACH,CAxFD","file":"PostProcessView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/components/BootstrapDialog\",\n    \"handlebars\"\n], function ($, _, AbstractView, BootstrapDialog, Handlebars) {\n    var PostProcessView = AbstractView.extend({\n        template: \"templates/admin/views/realms/authentication/chains/PostProcessTemplate.html\",\n        events: {\n            \"click [data-delete-process-class]\": \"remove\",\n            \"click [data-add-process-class]\"   : \"add\",\n            \"change [data-new-process-class]\"  : \"change\",\n            \"keyup  [data-new-process-class]\"  : \"change\"\n        },\n        element: \"#postProcessView\",\n        partials: [\n            \"partials/alerts/_Alert.html\"\n        ],\n\n        add () {\n            var newProcessClass = this.$el.find(\"[data-new-process-class]\").val().trim(),\n                invalidName = _.find(this.data.chainData.loginPostProcessClass, function (className) {\n                    return className === newProcessClass;\n                });\n            if (invalidName) {\n                this.$el.find(\"#alertContainer\").html(\n                    Handlebars.compile(\"{{> alerts/_Alert type='warning' \" +\n                        \"text='console.authentication.editChains.processingClass.duplicateClass'}}\")\n                );\n            } else {\n                this.data.chainData.loginPostProcessClass.push(newProcessClass);\n                this.render(this.data.chainData);\n            }\n        },\n\n        remove (e) {\n            var index = $(e.currentTarget).closest(\"tr\").index();\n            this.data.chainData.loginPostProcessClass[index] = \"\";\n            this.render(this.data.chainData);\n        },\n\n        change (e) {\n            this.$el.find(\"[data-add-process-class]\").prop(\"disabled\", e.currentTarget.value.length === 0);\n        },\n\n        addClassNameDialog () {\n            var self = this,\n                promise = $.Deferred(),\n                newProcessClass = this.$el.find(\"[data-new-process-class]\").val().trim();\n            if (newProcessClass === \"\") {\n                self.$el.find(\"[data-new-process-class]\").val(\"\");\n                promise.resolve();\n            } else {\n                BootstrapDialog.show({\n                    title: $.t(\"console.authentication.editChains.processingClass.addClassNameDialog.title\"),\n                    message: $.t(\"console.authentication.editChains.processingClass.addClassNameDialog.message\",\n                        { newClassName: newProcessClass }),\n                    closable: false,\n                    buttons: [{\n                        label: $.t(\"common.form.cancel\"),\n                        action (dialog) {\n                            self.$el.find(\"[data-new-process-class]\").val(\"\");\n                            dialog.close();\n                            promise.resolve();\n                        }\n                    }, {\n                        id: \"btnOk\",\n                        label: $.t(\"common.form.ok\"),\n                        cssClass: \"btn-primary\",\n                        action (dialog) {\n                            self.add();\n                            dialog.close();\n                            promise.resolve();\n                        }\n                    }]\n                });\n            }\n            return promise;\n        },\n\n        render (chainData) {\n            this.data.chainData = chainData;\n            this.parentRender();\n        }\n    });\n\n    return new PostProcessView();\n});\n"]}