{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/admin/utils/form/showConfirmationBeforeAction.jsm"],"names":["showConfirmationBeforeAction","msg","actionCallback","actionName","confirm","type","TYPE_DANGER","title","message","btnOKLabel","btnOKClass","callback","result"],"mappings":";;;;;;sBAiCwBA,4B;;;;;;;;;;AAdxB;;;;;;;;;;;;;;AAnBA;;;;;;;;;;;;;;;;AAiCe,aAASA,4BAAT,CAAuCC,GAAvC,EAA4CC,cAA5C,EAAkG;AAAA,YAAtCC,UAAsC,uEAAzB,gBAAE,oBAAF,CAAyB;;AAC7G,kCAAgBC,OAAhB,CAAwB;AACpBC,kBAAM,0BAAgBC,WADF;AAEpBC,mBAAU,gBAAE,qBAAF,CAAV,SAAsCJ,UAFlB;AAGpBK,qBAASP,IAAIO,OAAJ,GAAcP,IAAIO,OAAlB,GAA4B,gBAAE,kCAAF,EAAsC,EAAEH,MAAMJ,IAAII,IAAZ,EAAtC,CAHjB;AAIpBI,wBAAYN,UAJQ;AAKpBO,wBAAY,YALQ;AAMpBC,sBAAU,kBAACC,MAAD,EAAY;AAClB,oBAAIA,UAAUV,cAAd,EAA8B;AAC1BA;AACH;AACJ;AAVmB,SAAxB;AAYH","file":"showConfirmationBeforeAction.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\nimport { t } from \"i18next\";\nimport BootstrapDialog from \"org/forgerock/commons/ui/common/components/BootstrapDialog\";\n\n/**\n * Shows a confirmation dialog before performing a dangerous action and calls action callback if needed.\n * @module org/forgerock/openam/ui/admin/utils/form/showConfirmationBeforeAction\n * @param  {object} msg Message object\n * @param  {string} [msg.type] Type of object on which action is performed\n * @param  {string} [msg.message] Confirmation message to show\n * @param  {function} actionCallback Action callback\n * @param  {string} [actionName] Name of the performed action\n * @example\n * clickHandler: function (event) {\n *   event.preventDefault();\n *   showConfirmationBeforeAction({type: \"console.scripts.edit.script\"}, deleteEntity);\n * }\n */\nexport default function showConfirmationBeforeAction (msg, actionCallback, actionName = t(\"common.form.delete\")) {\n    BootstrapDialog.confirm({\n        type: BootstrapDialog.TYPE_DANGER,\n        title: `${t(\"common.form.confirm\")} ${actionName}`,\n        message: msg.message ? msg.message : t(\"console.common.confirmDeleteText\", { type: msg.type }),\n        btnOKLabel: actionName,\n        btnOKClass: \"btn-danger\",\n        callback: (result) => {\n            if (result && actionCallback) {\n                actionCallback();\n            }\n        }\n    });\n}\n"]}