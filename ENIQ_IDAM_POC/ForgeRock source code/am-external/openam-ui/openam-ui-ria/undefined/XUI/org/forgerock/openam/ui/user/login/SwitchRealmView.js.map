{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/user/login/SwitchRealmView.js"],"names":["define","i18next","AbstractView","EventManager","Configuration","Router","Constants","isRealmChanged","getCurrentFragmentParamString","logout","SessionService","default","gotoLoginWithParams","args","sendEvent","EVENT_CHANGE_VIEW","route","configuration","routes","login","removeUserAndGotoLogin","setProperty","SwitchRealmView","extend","template","baseTemplate","data","events","partials","render","isSessionValid","then","parentRender","onSwitchRealmsHandler","event","preventDefault","EVENT_DISPLAY_MESSAGE_REQUEST"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,SADG,EAEH,mDAFG,EAGH,mDAHG,EAIH,oDAJG,EAKH,6CALG,EAMH,+CANG,EAOH,oDAPG,EAQH,uEARG,EASH,2CATG,EAUH,sDAVG,CAAP,EAWG,UAACC,OAAD,EAAUC,YAAV,EAAwBC,YAAxB,EAAsCC,aAAtC,EAAqDC,MAArD,EAA6DC,SAA7D,EAAwEC,cAAxE,EACCC,6BADD,EACgCC,MADhC,EACwCC,cADxC,EAC2D;AAC1DH,qBAAiBA,eAAeI,OAAhC;AACAF,aAASA,OAAOE,OAAhB;AACAH,oCAAgCA,8BAA8BG,OAA9D;;AAEA,aAASC,mBAAT,CAA8BC,IAA9B,EAAoC;AAChCV,qBAAaW,SAAb,CAAuBR,UAAUS,iBAAjC,EAAoD;AAChDF,sBADgD;AAEhDG,mBAAOX,OAAOY,aAAP,CAAqBC,MAArB,CAA4BC;AAFa,SAApD;AAIH;;AAED,aAASC,sBAAT,CAAiCP,IAAjC,EAAuC;AACnCT,sBAAciB,WAAd,CAA0B,YAA1B,EAAwC,IAAxC;AACAT,4BAAoBC,IAApB;AACH;;AAED,QAAMS,kBAAkBpB,aAAaqB,MAAb,CAAoB;AACxCC,kBAAU,4CAD8B;AAExCC,sBAAc,yCAF0B;AAGxCC,cAAM,EAHkC;AAIxCC,gBAAQ;AACJ,0CAA+B;AAD3B,SAJgC;AAOxCC,kBAAU,CACN,6BADM,CAP8B;AAUxCC,cAVwC,oBAU9B;AAAA;;AACN,iBAAKH,IAAL,CAAUb,IAAV,GAAiB,CAACL,+BAAD,CAAjB;;AAEA,gBAAID,gBAAJ,EAAsB;AAClBG,+BAAeoB,cAAf,GAAgCC,IAAhC,CACI;AAAA,2BAAM,MAAKC,YAAL,EAAN;AAAA,iBADJ,EAEI;AAAA,2BAAMZ,uBAAuB,MAAKM,IAAL,CAAUb,IAAjC,CAAN;AAAA,iBAFJ;AAIH,aALD,MAKO;AACHO,uCAAuB,KAAKM,IAAL,CAAUb,IAAjC,EADG,CACqC;AAC3C;AACJ,SArBuC;AAsBxCoB,6BAtBwC,iCAsBjBC,KAtBiB,EAsBV;AAAA;;AAC1BA,kBAAMC,cAAN;AACA1B,qBAASsB,IAAT,CAAc,YAAM;AAChB5B,6BAAaW,SAAb,CAAuBR,UAAU8B,6BAAjC,EAAgE,WAAhE;AACAxB,oCAAoB,OAAKc,IAAL,CAAUb,IAA9B;AACH,aAHD;AAIH;AA5BuC,KAApB,CAAxB;;AA+BA,WAAO,IAAIS,eAAJ,EAAP;AACH,CA7DD","file":"SwitchRealmView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2011-2017 ForgeRock AS.\n */\n\ndefine([\n    \"i18next\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Configuration\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/openam/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/common/util/isRealmChanged\",\n    \"org/forgerock/openam/ui/common/util/uri/getCurrentFragmentParamString\",\n    \"org/forgerock/openam/ui/user/login/logout\",\n    \"org/forgerock/openam/ui/user/services/SessionService\"\n], (i18next, AbstractView, EventManager, Configuration, Router, Constants, isRealmChanged,\n    getCurrentFragmentParamString, logout, SessionService) => {\n    isRealmChanged = isRealmChanged.default;\n    logout = logout.default;\n    getCurrentFragmentParamString = getCurrentFragmentParamString.default;\n\n    function gotoLoginWithParams (args) {\n        EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\n            args,\n            route: Router.configuration.routes.login\n        });\n    }\n\n    function removeUserAndGotoLogin (args) {\n        Configuration.setProperty(\"loggedUser\", null);\n        gotoLoginWithParams(args);\n    }\n\n    const SwitchRealmView = AbstractView.extend({\n        template: \"templates/openam/SwitchRealmsTemplate.html\",\n        baseTemplate: \"templates/common/LoginBaseTemplate.html\",\n        data: {},\n        events: {\n            \"click [data-switch-realms]\" : \"onSwitchRealmsHandler\"\n        },\n        partials: [\n            \"partials/alerts/_Alert.html\"\n        ],\n        render () {\n            this.data.args = [getCurrentFragmentParamString()];\n\n            if (isRealmChanged()) {\n                SessionService.isSessionValid().then(\n                    () => this.parentRender(),\n                    () => removeUserAndGotoLogin(this.data.args)\n                );\n            } else {\n                removeUserAndGotoLogin(this.data.args); // Realm not changed, but params may have\n            }\n        },\n        onSwitchRealmsHandler (event) {\n            event.preventDefault();\n            logout().then(() => {\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"loggedOut\");\n                gotoLoginWithParams(this.data.args);\n            });\n        }\n    });\n\n    return new SwitchRealmView();\n});\n"]}