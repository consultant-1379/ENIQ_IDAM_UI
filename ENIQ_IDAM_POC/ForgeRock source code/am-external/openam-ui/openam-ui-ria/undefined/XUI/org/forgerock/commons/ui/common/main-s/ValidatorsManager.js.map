{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/main-s/ValidatorsManager.js"],"names":["define","$","_","AbstractConfigurationAware","ModuleLoader","obj","defaultEvents","bindValidators","containerElement","_arguments","toArray","arguments","find","each","bindValidatorsForField","afterBindValidators","fn","apply","arg","isFunction","field","eventsToBind","attr","off","on","debounce","evaluateAllValidatorsForField","validateAllFields","trigger","element","container","validatorsRegistered","when","map","split","validatorName","evaluateValidator","then","allFailures","flatten","filter","value","undefined","uniq","length","validationFailed","validationSucceeded","evaluateDependentFields","dependentFields","inArray","Deferred","resolve","deferred","validatorConfig","configuration","validators","parameters","bind","dependencies","load","validator","concat","failures","formValidated","formElement","clearValidators","removeAttr"],"mappings":"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","file":"ValidatorsManager.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2012-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"lodash\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractConfigurationAware\",\r\n    \"org/forgerock/commons/ui/common/util/ModuleLoader\"\r\n], function($, _, AbstractConfigurationAware, ModuleLoader) {\r\n    /**\r\n     * @exports org/forgerock/commons/ui/common/main/ValidatorsManager\r\n     */\r\n\r\n    var obj = new AbstractConfigurationAware();\r\n\r\n    // custom event \"validate\" is always bound, along with these common events\r\n    obj.defaultEvents = \"keyup change blur paste validate\";\r\n\r\n    /**\r\n        Binds events to elements of the DOM within the containerElement, using\r\n        the attributes of those elements to indicate which events should be bound.\r\n\r\n        Uses the validator functions defined as part of this module configuration\r\n        to perform the validation for each element.\r\n        @param {object} containerElement - portion of the DOM containing input elements to validate\r\n    */\r\n    obj.bindValidators = function (containerElement) {\r\n        var _arguments = _.toArray(arguments);\r\n\r\n        $(containerElement).find(\":input\").each(function () {\r\n            obj.bindValidatorsForField(containerElement, $(this));\r\n        });\r\n\r\n        _.each(obj.afterBindValidators, function (fn) {\r\n            fn.apply(this, _arguments);\r\n        }, this);\r\n    };\r\n\r\n    // array of functions to invoke (in order) after bindValidators is executed\r\n    // each function is called with the same arguments that are provided to bindValidators\r\n    obj.afterBindValidators = [\r\n        // generic method for executing a callback function\r\n        function () {\r\n            _.each(_.toArray(arguments), function (arg) {\r\n                if (_.isFunction(arg)) {\r\n                    arg();\r\n                }\r\n            });\r\n        }\r\n    ];\r\n\r\n    obj.bindValidatorsForField = function (containerElement, field) {\r\n        var eventsToBind = obj.defaultEvents + \" \" + (field.attr(\"data-validator-event\") || \"\");\r\n\r\n        // remove previously-bound event handlers on this element\r\n        field.off(eventsToBind);\r\n        // restrict the handler method so that multiple simultaneous events don't trigger repeat evaluation\r\n        field.on(eventsToBind, _.debounce(function () {\r\n            obj.evaluateAllValidatorsForField(field, containerElement);\r\n        }, 100, { 'leading': true, 'trailing': false }));\r\n    };\r\n\r\n    /**\r\n        Trigger the custom \"validate\" event on every input field within a given container element\r\n    */\r\n    obj.validateAllFields = function(containerElement) {\r\n        containerElement.find(\":input\").trigger(\"validate\");\r\n    };\r\n\r\n    /**\r\n        Function that is executed in the (this) context of a given DOM element\r\n        which is expected to have various attributes included to describe which\r\n        validators should be evaluated on it.\r\n    */\r\n    obj.evaluateAllValidatorsForField = function (element, container) {\r\n        var validatorsRegistered = element.attr(\"data-validator\");\r\n\r\n        if (validatorsRegistered) {\r\n            // wait for all promises to be resolved from the various valiators named on the element\r\n            return $.when.apply($, _.map(validatorsRegistered.split(\" \"), function (validatorName) {\r\n                return obj.evaluateValidator(validatorName, element, container);\r\n            })).then(function () {\r\n                var allFailures = _(arguments)\r\n                    .toArray()\r\n                    .flatten()\r\n                    .filter(function (value) {\r\n                        return value !== undefined;\r\n                    })\r\n                    .uniq()\r\n                    .value();\r\n\r\n                if (allFailures.length) {\r\n                    obj.validationFailed(element, allFailures);\r\n                } else {\r\n                    obj.validationSucceeded(element);\r\n                }\r\n                return obj.evaluateDependentFields(element, container);\r\n            });\r\n        } else {\r\n            // if there are no validators, then this element is valid\r\n            obj.validationSucceeded(element);\r\n            return obj.evaluateDependentFields(element, container);\r\n        }\r\n    };\r\n\r\n    /**\r\n        When an element as a data-validation-dependents attribute, then each\r\n        field id (separated by commas) listed in that attribute will be validated\r\n\r\n        Returns a promise which is resolved when all dependents are validated\r\n    */\r\n    obj.evaluateDependentFields = function (element, container) {\r\n        var dependentFields = element.attr(\"data-validation-dependents\");\r\n\r\n        if (dependentFields) {\r\n            // _.toArray added here due to bug in phantomjs. Not necessary otherwise\r\n            return $.when.apply($, _.toArray(container\r\n                .find(':input')\r\n                .filter(function () {\r\n                    return $.inArray($(this).attr(\"id\"), dependentFields.split(\",\")) !== -1;\r\n                })\r\n                .map(function () {\r\n                    return obj.evaluateAllValidatorsForField($(this), container);\r\n                })));\r\n        } else {\r\n            return $.Deferred().resolve();\r\n        }\r\n    };\r\n\r\n    /**\r\n        Executes a particular validator registered in the module configuration.\r\n        Returns a promise which will be resolved with the array of validation failures\r\n        which may have resulted from the evaluation.\r\n    */\r\n    obj.evaluateValidator = function (validatorName, element, container) {\r\n        var deferred = $.Deferred(),\r\n            validatorConfig = this.configuration.validators[validatorName],\r\n            parameters = [\r\n                container,  // the element containing the element as well as any related elements\r\n                element,    // the specific input within the form being validated\r\n                _.bind(deferred.resolve, deferred) // resolve the deferred object with the validator callback response\r\n            ];\r\n\r\n        if (typeof validatorConfig !== \"undefined\") {\r\n            // load all dependencies which are declared for this validator\r\n            $.when.apply($, _.map(validatorConfig.dependencies, ModuleLoader.load))\r\n                .then(_.bind(function () {\r\n                    validatorConfig.validator.apply(this, parameters.concat(_.toArray(arguments)));\r\n                }, this));\r\n            return deferred;\r\n        } else {\r\n            return;\r\n        }\r\n    };\r\n\r\n    obj.validationSucceeded = function (element) {\r\n        element.attr(\"data-validation-status\", \"ok\");\r\n        element.trigger(\"validationSuccessful\");\r\n        element.trigger(\"customValidate\");\r\n    };\r\n\r\n    obj.validationFailed = function (element, allFailures) {\r\n        element.attr(\"data-validation-status\", \"error\");\r\n        element.trigger(\"validationFailed\", {failures: allFailures});\r\n        element.trigger(\"customValidate\");\r\n    };\r\n\r\n    obj.formValidated = function(formElement) {\r\n        return formElement.find(\"[data-validation-status=error]:visible\").length === 0;\r\n    };\r\n\r\n    /**\r\n        Returns a given set of fields back to their pre-bindValidators / evaluateValidator state\r\n     */\r\n    obj.clearValidators = function (containerElement) {\r\n        $(containerElement).find(\"[data-validation-status]\").each(function () {\r\n            $(this)\r\n                .removeAttr(\"data-validation-status\")\r\n                .trigger(\"validationReset\");\r\n        });\r\n    };\r\n\r\n    return obj;\r\n\r\n});"]}