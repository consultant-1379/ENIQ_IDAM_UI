{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/modules/AddModuleView.js"],"names":["define","$","_","AbstractView","Router","Messages","AuthenticationService","SelectComponent","default","validateModuleProps","moduleName","$el","find","val","moduleType","isValid","indexOf","addMessage","type","TYPE_DANGER","message","t","attr","extend","template","events","render","args","callback","self","data","realmPath","authentication","modules","types","all","then","modulesData","parentRender","selectComponent","options","result","onChange","option","_id","onValidateModuleProps","searchFields","labelField","placeholderText","append","el","focus","save","modulesService","exists","authenticationModules","create","routeTo","configuration","routes","realmsAuthenticationModuleEdit","map","encodeURIComponent","trigger","response","call"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,mDAHG,EAIH,6CAJG,EAKH,qDALG,EAMH,oEANG,EAOH,2DAPG,CAAP,EAQG,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,YAAhB,EAA8BC,MAA9B,EAAsCC,QAAtC,EAAgDC,qBAAhD,EAAuEC,eAAvE,EAAwF;AACvFA,sBAAkBA,gBAAgBC,OAAlC;;AAEA,aAASC,mBAAT,GAAgC;AAC5B,YAAIC,aAAa,KAAKC,GAAL,CAASC,IAAT,CAAc,gBAAd,EAAgCC,GAAhC,EAAjB;AAAA,YACIC,aAAa,KAAKA,UADtB;AAAA,YAEIC,OAFJ;;AAIA,YAAIL,WAAWM,OAAX,CAAmB,GAAnB,MAA4B,CAAC,CAAjC,EAAoC;AAChCN,yBAAa,KAAb;AACAL,qBAASY,UAAT,CAAoB;AAChBC,sBAAMb,SAASc,WADC;AAEhBC,yBAASnB,EAAEoB,CAAF,CAAI,0DAAJ;AAFO,aAApB;AAIH;AACDN,kBAAUL,cAAcI,UAAxB;AACA,aAAKH,GAAL,CAASC,IAAT,CAAc,aAAd,EAA6BU,IAA7B,CAAkC,UAAlC,EAA8C,CAACP,OAA/C;AACH;;AAED,WAAOZ,aAAaoB,MAAb,CAAoB;AACvBC,kBAAU,4EADa;AAEvBC,gBAAQ;AACJ,yCAA6B,uBADzB;AAEJ,yCAA6B,uBAFzB;AAGJ,yCAA6B,uBAHzB;AAIJ,iCAA6B;AAJzB,SAFe;AAQvBC,cARuB,kBAQfC,IARe,EAQTC,QARS,EAQC;AACpB,gBAAIC,OAAO,IAAX;AACA,iBAAKC,IAAL,CAAUC,SAAV,GAAsBJ,KAAK,CAAL,CAAtB;;AAEArB,kCAAsB0B,cAAtB,CAAqCC,OAArC,CAA6CC,KAA7C,CAAmDC,GAAnD,CAAuD,KAAKL,IAAL,CAAUC,SAAjE,EAA4EK,IAA5E,CAAiF,UAAUC,WAAV,EAAuB;AACpGR,qBAAKS,YAAL,CAAkB,YAAY;AAC1B,wBAAMC,kBAAkB,IAAIhC,eAAJ,CAAoB;AACxCiC,iCAASH,YAAYI,MADmB;AAExCC,kCAAU,kBAACC,MAAD,EAAY;AAClBd,iCAAKf,UAAL,GAAkB6B,OAAOC,GAAzB;AACAf,iCAAKgB,qBAAL;AACH,yBALuC;AAMxCC,sCAAc,CAAC,MAAD,CAN0B;AAOxCC,oCAAY,MAP4B;AAQxCC,yCAAiB/C,EAAEoB,CAAF,CAAI,iDAAJ;AARuB,qBAApB,CAAxB;AAUAQ,yBAAKlB,GAAL,CAASC,IAAT,CAAc,oBAAd,EAAoCqC,MAApC,CAA2CV,gBAAgBb,MAAhB,GAAyBwB,EAApE;AACArB,yBAAKlB,GAAL,CAASC,IAAT,CAAc,aAAd,EAA6BuC,KAA7B;AACA,wBAAIvB,QAAJ,EAAc;AACVA;AACH;AACJ,iBAhBD;AAiBH,aAlBD;AAmBH,SA/BsB;AAgCvBwB,YAhCuB,kBAgCf;AACJ,gBAAIvB,OAAO,IAAX;AAAA,gBACInB,aAAamB,KAAKlB,GAAL,CAASC,IAAT,CAAc,gBAAd,EAAgCC,GAAhC,EADjB;AAAA,gBAEIC,aAAa,KAAKA,UAFtB;AAAA,gBAGIuC,iBAAiB/C,sBAAsB0B,cAAtB,CAAqCC,OAH1D;;AAKAoB,2BAAeC,MAAf,CAAsBzB,KAAKC,IAAL,CAAUC,SAAhC,EAA2CrB,UAA3C,EAAuD0B,IAAvD,CAA4D,UAAUK,MAAV,EAAkB;AAC1E,oBAAIc,wBAAwBF,cAA5B;AACA,oBAAIZ,MAAJ,EAAY;AACRpC,6BAASY,UAAT,CAAoB;AAChBC,8BAAMb,SAASc,WADC;AAEhBC,iCAASnB,EAAEoB,CAAF,CAAI,+CAAJ;AAFO,qBAApB;AAIH,iBALD,MAKO;AACHkC,0CAAsBC,MAAtB,CAA6B3B,KAAKC,IAAL,CAAUC,SAAvC,EAAkD,EAAEa,KAAKlC,UAAP,EAAlD,EAAuEI,UAAvE,EACKsB,IADL,CACU,YAAY;AACdhC,+BAAOqD,OAAP,CAAerD,OAAOsD,aAAP,CAAqBC,MAArB,CAA4BC,8BAA3C,EAA2E;AACvEjC,kCAAMzB,EAAE2D,GAAF,CAAM,CAAChC,KAAKC,IAAL,CAAUC,SAAX,EAAsBjB,UAAtB,EAAkCJ,UAAlC,CAAN,EAAqDoD,kBAArD,CADiE;AAEvEC,qCAAS;AAF8D,yBAA3E;AAIH,qBANL,EAMO,UAACC,QAAD,EAAc;AACb3D,iCAASY,UAAT,CAAoB,EAAEC,MAAMb,SAASc,WAAjB,EAA8B6C,kBAA9B,EAApB;AACH,qBARL;AASH;AACJ,aAlBD,EAkBG,UAACA,QAAD,EAAc;AACb3D,yBAASY,UAAT,CAAoB,EAAEC,MAAMb,SAASc,WAAjB,EAA8B6C,kBAA9B,EAApB;AACH,aApBD;AAqBH,SA3DsB;AA4DvBnB,6BA5DuB,mCA4DE;AACrBpC,gCAAoBwD,IAApB,CAAyB,IAAzB;AACH;AA9DsB,KAApB,CAAP;AAgEH,CA3FD","file":"AddModuleView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/openam/ui/admin/services/realm/AuthenticationService\",\n    \"org/forgerock/openam/ui/common/components/SelectComponent\"\n], function ($, _, AbstractView, Router, Messages, AuthenticationService, SelectComponent) {\n    SelectComponent = SelectComponent.default;\n\n    function validateModuleProps () {\n        var moduleName = this.$el.find(\"#newModuleName\").val(),\n            moduleType = this.moduleType,\n            isValid;\n\n        if (moduleName.indexOf(\" \") !== -1) {\n            moduleName = false;\n            Messages.addMessage({\n                type: Messages.TYPE_DANGER,\n                message: $.t(\"console.authentication.modules.moduleNameValidationError\")\n            });\n        }\n        isValid = moduleName && moduleType;\n        this.$el.find(\"[data-save]\").attr(\"disabled\", !isValid);\n    }\n\n    return AbstractView.extend({\n        template: \"templates/admin/views/realms/authentication/modules/AddModuleTemplate.html\",\n        events: {\n            \"change [data-module-name]\": \"onValidateModuleProps\",\n            \"keyup  [data-module-name]\": \"onValidateModuleProps\",\n            \"change [data-module-type]\": \"onValidateModuleProps\",\n            \"click [data-save]\"        : \"save\"\n        },\n        render (args, callback) {\n            var self = this;\n            this.data.realmPath = args[0];\n\n            AuthenticationService.authentication.modules.types.all(this.data.realmPath).then(function (modulesData) {\n                self.parentRender(function () {\n                    const selectComponent = new SelectComponent({\n                        options: modulesData.result,\n                        onChange: (option) => {\n                            self.moduleType = option._id;\n                            self.onValidateModuleProps();\n                        },\n                        searchFields: [\"name\"],\n                        labelField: \"name\",\n                        placeholderText: $.t(\"console.authentication.modules.selectModuleType\")\n                    });\n                    self.$el.find(\"[data-module-type]\").append(selectComponent.render().el);\n                    self.$el.find(\"[autofocus]\").focus();\n                    if (callback) {\n                        callback();\n                    }\n                });\n            });\n        },\n        save () {\n            var self = this,\n                moduleName = self.$el.find(\"#newModuleName\").val(),\n                moduleType = this.moduleType,\n                modulesService = AuthenticationService.authentication.modules;\n\n            modulesService.exists(self.data.realmPath, moduleName).then(function (result) {\n                var authenticationModules = modulesService;\n                if (result) {\n                    Messages.addMessage({\n                        type: Messages.TYPE_DANGER,\n                        message: $.t(\"console.authentication.modules.addModuleError\")\n                    });\n                } else {\n                    authenticationModules.create(self.data.realmPath, { _id: moduleName }, moduleType)\n                        .then(function () {\n                            Router.routeTo(Router.configuration.routes.realmsAuthenticationModuleEdit, {\n                                args: _.map([self.data.realmPath, moduleType, moduleName], encodeURIComponent),\n                                trigger: true\n                            });\n                        }, (response) => {\n                            Messages.addMessage({ type: Messages.TYPE_DANGER, response });\n                        });\n                }\n            }, (response) => {\n                Messages.addMessage({ type: Messages.TYPE_DANGER, response });\n            });\n        },\n        onValidateModuleProps () {\n            validateModuleProps.call(this);\n        }\n    });\n});\n"]}