{"version":3,"sources":["../../../XUI/components/table/Table.jsx"],"names":["Table","idField","onRowClick","onSelectedChange","selectedIds","tableRef","restProps","handleSelect","row","isSelected","id","selected","handleSelectAll","rows","sortIndicator","bgColor","className","columnWidth","customComponent","mode","onSelect","onSelectAll","defaultProps","bordered","condensed","hover","propTypes","bool","string","isRequired","func","arrayOf","any"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,QAAMA,QAAQ,SAARA,KAAQ,OAAoF;AAAA,YAAjFC,OAAiF,QAAjFA,OAAiF;AAAA,YAAxEC,UAAwE,QAAxEA,UAAwE;AAAA,YAA5DC,gBAA4D,QAA5DA,gBAA4D;AAAA,YAA1CC,WAA0C,QAA1CA,WAA0C;AAAA,YAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,YAAhBC,SAAgB;;AAC9F,YAAMC,eAAe,SAAfA,YAAe,CAACC,GAAD,EAAMC,UAAN,EAAqB;AACtC,gBAAMC,KAAKF,IAAIP,OAAJ,CAAX;AACA,gBAAMU,WAAWF,0CAAiBL,WAAjB,IAA8BM,EAA9B,KAAoC,qBAAQN,WAAR,EAAqBM,EAArB,CAArD;;AAEAP,6BAAiBQ,QAAjB;AACH,SALD;AAMA,YAAMC,kBAAkB,SAAlBA,eAAkB,CAACH,UAAD,EAAaI,IAAb;AAAA,mBAAsBV,iBAAiBM,aAAa,mBAAMI,IAAN,EAAYZ,OAAZ,CAAb,GAAoC,EAArD,CAAtB;AAAA,SAAxB;;AAEA,eACI;AACI,qBAAU;AACNC,sCADM;AAENY,+BAAe;AAFT,aADd;AAKI,iBAAMT,QALV;AAMI,uBAAY;AACRU,yBAAS,SADD;AAERC,2BAAW,QAFH;AAGRC,6BAAa,MAHL;AAIRC,uDAJQ;AAKRC,sBAAM,UALE;AAMRC,0BAAUb,YANF;AAORc,6BAAaT,eAPL;AAQRD,0BAAUP;AARF;AANhB,WAgBSE,SAhBT,EADJ;AAoBH,KA7BD;;AA+BAN,UAAMsB,YAAN,GAAqB;AACjBC,kBAAU,KADO;AAEjBC,mBAAW,KAFM;AAGjBC,eAAO;AAHU,KAArB;;AAMAzB,UAAM0B,SAAN,GAAkB;AACdH,kBAAU,iBAAUI,IADN;AAEdH,mBAAW,iBAAUG,IAFP;AAGdF,eAAO,iBAAUE,IAHH;AAId1B,iBAAS,iBAAU2B,MAAV,CAAiBC,UAJZ;AAKd3B,oBAAY,iBAAU4B,IAAV,CAAeD,UALb;AAMd1B,0BAAkB,iBAAU2B,IAAV,CAAeD,UANnB;AAOdzB,qBAAa,iBAAU2B,OAAV,CAAkB,iBAAUC,GAA5B,EAAiCH,UAPhC;AAQdxB,kBAAU,iBAAUyB;AARN,KAAlB;;sBAWe9B,K","file":"Table.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { pluck, without } from \"lodash\";\nimport { BootstrapTable } from \"react-bootstrap-table\";\nimport React, { PropTypes } from \"react\";\n\nimport RowSelection from \"components/table/selection/RowSelection\";\n\nconst Table = ({ idField, onRowClick, onSelectedChange, selectedIds, tableRef, ...restProps }) => {\n    const handleSelect = (row, isSelected) => {\n        const id = row[idField];\n        const selected = isSelected ? [...selectedIds, id] : without(selectedIds, id);\n\n        onSelectedChange(selected);\n    };\n    const handleSelectAll = (isSelected, rows) => onSelectedChange(isSelected ? pluck(rows, idField) : []);\n\n    return (\n        <BootstrapTable\n            options={ {\n                onRowClick,\n                sortIndicator: false\n            } }\n            ref={ tableRef }\n            selectRow={ {\n                bgColor: \"#f7f7f7\",\n                className: \"active\",\n                columnWidth: \"50px\",\n                customComponent: RowSelection,\n                mode: \"checkbox\",\n                onSelect: handleSelect,\n                onSelectAll: handleSelectAll,\n                selected: selectedIds\n            } }\n            { ...restProps }\n        />\n    );\n};\n\nTable.defaultProps = {\n    bordered: false,\n    condensed: false,\n    hover: true\n};\n\nTable.propTypes = {\n    bordered: PropTypes.bool,\n    condensed: PropTypes.bool,\n    hover: PropTypes.bool,\n    idField: PropTypes.string.isRequired,\n    onRowClick: PropTypes.func.isRequired,\n    onSelectedChange: PropTypes.func.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    tableRef: PropTypes.func\n};\n\nexport default Table;\n"]}