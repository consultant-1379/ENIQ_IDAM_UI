{"version":3,"sources":["../../../XUI/components/redux/connectWithStore.jsx"],"names":["getDisplayName","WrappedComponent","displayName","name","connectWithStore","args","ConnectedWrappedComponent","component","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,gBAAD,EAAsB;AACzC,WAAOA,iBAAiBC,WAAjB,IAAgCD,iBAAiBE,IAAjD,IAAyD,WAAhE;AACH,GAFD;;AAIA;;;;;;;;;;;;;;;;;AAiBA,MAAMC,mBAAmB,SAAnBA,gBAAmB,CAACH,gBAAD,EAA+B;AAAA,sCAATI,IAAS;AAATA,UAAS;AAAA;;AACpD,QAAMC,4BAA4B,qCAAWD,IAAX,EAAiBJ,gBAAjB,CAAlC;;AAEA,QAAMM,YAAY,SAAZA,SAAY,CAACC,KAAD;AAAA,aAAW,8BAAC,yBAAD,eAAgCA,KAAhC,IAAwC,sBAAxC,IAAX;AAAA,KAAlB;AACAD,cAAUL,WAAV,yBAA4CF,eAAeC,gBAAf,CAA5C;AACAM,cAAUN,gBAAV,GAA6BA,gBAA7B;;AAEA,WAAOM,SAAP;AACH,GARD;;oBAUeH,gB","file":"connectWithStore.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { connect } from \"react-redux\";\nimport React from \"react\";\n\nimport store from \"store/index\";\n\nconst getDisplayName = (WrappedComponent) => {\n    return WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n};\n\n/**\n * A HoC (higher-order component) that wraps another component to provide `this.props.store`.\n * Pass in your component and it will return the wrapped component.\n * @param {ReactComponent} WrappedComponent Component to wrap\n * @returns {ReactComponent} Wrapped component\n * @example\n * import connectWithStore from \"components/redux/connectWithStore\"\n * import store from \"store/index\";\n *\n * class MyReactComponent extends Component { ... }\n *\n * const mapStateToProps = (state) => { ... }\n * const mapDispatchToProps = (dispatch) => { ... )\n *\n * export default connectWithStore(MyReactComponent, mapStateToProps, mapDispatchToProps)\n * @see https://github.com/reactjs/react-redux/blob/master/docs/api.md#connectmapstatetoprops-mapdispatchtoprops-mergeprops-options\n */\nconst connectWithStore = (WrappedComponent, ...args) => {\n    const ConnectedWrappedComponent = connect(...args)(WrappedComponent);\n\n    const component = (props) => <ConnectedWrappedComponent { ...props } store={ store } />;\n    component.displayName = `connectWithStore(${getDisplayName(WrappedComponent)})`;\n    component.WrappedComponent = WrappedComponent;\n\n    return component;\n};\n\nexport default connectWithStore;\n"]}