{"version":3,"sources":["../../../../../../XUI/css/bootstrap-3.3.5-custom/js/tests/unit/scrollspy.js"],"names":["$","QUnit","module","test","assert","expect","ok","document","body","scrollspy","beforeEach","fn","bootstrapScrollspy","noConflict","afterEach","strictEqual","undefined","$el","$scrollspy","done","async","sectionHTML","$section","appendTo","show","find","target","on","hasClass","scrollTop","filter","offset","position","top","parent","navbarHtml","contentHtml","$content","testElementIsActiveAfterScroll","element","deferred","Deferred","scrollHeight","Math","ceil","one","resolve","promise","when","then","times","testActiveElements","scrollspyHTML","length","has"],"mappings":"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","file":"scrollspy.js","sourcesContent":["$(function () {\n  'use strict';\n\n  QUnit.module('scrollspy plugin')\n\n  QUnit.test('should be defined on jquery object', function (assert) {\n    assert.expect(1)\n    assert.ok($(document.body).scrollspy, 'scrollspy method is defined')\n  })\n\n  QUnit.module('scrollspy', {\n    beforeEach: function () {\n      // Run all tests in noConflict mode -- it's the only way to ensure that the plugin works in noConflict mode\n      $.fn.bootstrapScrollspy = $.fn.scrollspy.noConflict()\n    },\n    afterEach: function () {\n      $.fn.scrollspy = $.fn.bootstrapScrollspy\n      delete $.fn.bootstrapScrollspy\n    }\n  })\n\n  QUnit.test('should provide no conflict', function (assert) {\n    assert.expect(1)\n    assert.strictEqual($.fn.scrollspy, undefined, 'scrollspy was set back to undefined (org value)')\n  })\n\n  QUnit.test('should return jquery collection containing the element', function (assert) {\n    assert.expect(2)\n    var $el = $('<div/>')\n    var $scrollspy = $el.bootstrapScrollspy()\n    assert.ok($scrollspy instanceof $, 'returns jquery collection')\n    assert.strictEqual($scrollspy[0], $el[0], 'collection contains element')\n  })\n\n  QUnit.test('should only switch \"active\" class on current target', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var sectionHTML = '<div id=\"root\" class=\"active\">'\n        + '<div class=\"topbar\">'\n        + '<div class=\"topbar-inner\">'\n        + '<div class=\"container\" id=\"ss-target\">'\n        + '<ul class=\"nav\">'\n        + '<li><a href=\"#masthead\">Overview</a></li>'\n        + '<li><a href=\"#detail\">Detail</a></li>'\n        + '</ul>'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n        + '<div id=\"scrollspy-example\" style=\"height: 100px; overflow: auto;\">'\n        + '<div style=\"height: 200px;\">'\n        + '<h4 id=\"masthead\">Overview</h4>'\n        + '<p style=\"height: 200px\">'\n        + 'Ad leggings keytar, brunch id art party dolor labore.'\n        + '</p>'\n        + '</div>'\n        + '<div style=\"height: 200px;\">'\n        + '<h4 id=\"detail\">Detail</h4>'\n        + '<p style=\"height: 200px\">'\n        + 'Veniam marfa mustache skateboard, adipisicing fugiat velit pitchfork beard.'\n        + '</p>'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n    var $section = $(sectionHTML).appendTo('#qunit-fixture')\n\n    var $scrollspy = $section\n      .show()\n      .find('#scrollspy-example')\n      .bootstrapScrollspy({ target: '#ss-target' })\n\n    $scrollspy.on('scroll.bs.scrollspy', function () {\n      assert.ok($section.hasClass('active'), '\"active\" class still on root node')\n      done()\n    })\n\n    $scrollspy.scrollTop(350)\n  })\n\n  QUnit.test('should correctly select middle navigation option when large offset is used', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    var sectionHTML = '<div id=\"header\" style=\"height: 500px;\"></div>'\n        + '<nav id=\"navigation\" class=\"navbar\">'\n        + '<ul class=\"nav navbar-nav\">'\n        + '<li class=\"active\"><a id=\"one-link\" href=\"#one\">One</a></li>'\n        + '<li><a id=\"two-link\" href=\"#two\">Two</a></li>'\n        + '<li><a id=\"three-link\" href=\"#three\">Three</a></li>'\n        + '</ul>'\n        + '</nav>'\n        + '<div id=\"content\" style=\"height: 200px; overflow-y: auto;\">'\n        + '<div id=\"one\" style=\"height: 500px;\"></div>'\n        + '<div id=\"two\" style=\"height: 300px;\"></div>'\n        + '<div id=\"three\" style=\"height: 10px;\"></div>'\n        + '</div>'\n    var $section = $(sectionHTML).appendTo('#qunit-fixture')\n    var $scrollspy = $section\n      .show()\n      .filter('#content')\n\n    $scrollspy.bootstrapScrollspy({ target: '#navigation', offset: $scrollspy.position().top })\n\n    $scrollspy.on('scroll.bs.scrollspy', function () {\n      assert.ok(!$section.find('#one-link').parent().hasClass('active'), '\"active\" class removed from first section')\n      assert.ok($section.find('#two-link').parent().hasClass('active'), '\"active\" class on middle section')\n      assert.ok(!$section.find('#three-link').parent().hasClass('active'), '\"active\" class not on last section')\n      done()\n    })\n\n    $scrollspy.scrollTop(550)\n  })\n\n  QUnit.test('should add the active class to the correct element', function (assert) {\n    assert.expect(2)\n    var navbarHtml =\n        '<nav class=\"navbar\">'\n      + '<ul class=\"nav\">'\n      + '<li id=\"li-1\"><a href=\"#div-1\">div 1</a></li>'\n      + '<li id=\"li-2\"><a href=\"#div-2\">div 2</a></li>'\n      + '</ul>'\n      + '</nav>'\n    var contentHtml =\n        '<div class=\"content\" style=\"overflow: auto; height: 50px\">'\n      + '<div id=\"div-1\" style=\"height: 100px; padding: 0; margin: 0\">div 1</div>'\n      + '<div id=\"div-2\" style=\"height: 200px; padding: 0; margin: 0\">div 2</div>'\n      + '</div>'\n\n    $(navbarHtml).appendTo('#qunit-fixture')\n    var $content = $(contentHtml)\n      .appendTo('#qunit-fixture')\n      .bootstrapScrollspy({ offset: 0, target: '.navbar' })\n\n    var testElementIsActiveAfterScroll = function (element, target) {\n      var deferred = $.Deferred()\n      var scrollHeight = Math.ceil($content.scrollTop() + $(target).position().top)\n      var done = assert.async()\n      $content.one('scroll', function () {\n        assert.ok($(element).hasClass('active'), 'target:' + target + ', element' + element)\n        done()\n        deferred.resolve()\n      })\n      $content.scrollTop(scrollHeight)\n      return deferred.promise()\n    }\n\n    $.when(testElementIsActiveAfterScroll('#li-1', '#div-1'))\n      .then(function () { return testElementIsActiveAfterScroll('#li-2', '#div-2') })\n  })\n\n  QUnit.test('should add the active class correctly when there are nested elements at 0 scroll offset', function (assert) {\n    assert.expect(6)\n    var times = 0\n    var done = assert.async()\n    var navbarHtml = '<nav id=\"navigation\" class=\"navbar\">'\n      + '<ul class=\"nav\">'\n      + '<li id=\"li-1\"><a href=\"#div-1\">div 1</a>'\n      + '<ul>'\n      + '<li id=\"li-2\"><a href=\"#div-2\">div 2</a></li>'\n      + '</ul>'\n      + '</li>'\n      + '</ul>'\n      + '</nav>'\n\n    var contentHtml = '<div class=\"content\" style=\"position: absolute; top: 0px; overflow: auto; height: 50px\">'\n      + '<div id=\"div-1\" style=\"padding: 0; margin: 0\">'\n      + '<div id=\"div-2\" style=\"height: 200px; padding: 0; margin: 0\">div 2</div>'\n      + '</div>'\n      + '</div>'\n\n    $(navbarHtml).appendTo('#qunit-fixture')\n\n    var $content = $(contentHtml)\n      .appendTo('#qunit-fixture')\n      .bootstrapScrollspy({ offset: 0, target: '#navigation' })\n\n    !function testActiveElements() {\n      if (++times > 3) return done()\n\n      $content.one('scroll', function () {\n        assert.ok($('#li-1').hasClass('active'), 'nav item for outer element has \"active\" class')\n        assert.ok($('#li-2').hasClass('active'), 'nav item for inner element has \"active\" class')\n        testActiveElements()\n      })\n\n      $content.scrollTop($content.scrollTop() + 10)\n    }()\n  })\n\n  QUnit.test('should clear selection if above the first section', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    var sectionHTML = '<div id=\"header\" style=\"height: 500px;\"></div>'\n        + '<nav id=\"navigation\" class=\"navbar\">'\n        + '<ul class=\"nav navbar-nav\">'\n        + '<li class=\"active\"><a id=\"one-link\" href=\"#one\">One</a></li>'\n        + '<li><a id=\"two-link\" href=\"#two\">Two</a></li>'\n        + '<li><a id=\"three-link\" href=\"#three\">Three</a></li>'\n        + '</ul>'\n        + '</nav>'\n    $(sectionHTML).appendTo('#qunit-fixture')\n\n    var scrollspyHTML = '<div id=\"content\" style=\"height: 200px; overflow-y: auto;\">'\n        + '<div id=\"spacer\" style=\"height: 100px;\"/>'\n        + '<div id=\"one\" style=\"height: 100px;\"/>'\n        + '<div id=\"two\" style=\"height: 100px;\"/>'\n        + '<div id=\"three\" style=\"height: 100px;\"/>'\n        + '<div id=\"spacer\" style=\"height: 100px;\"/>'\n        + '</div>'\n    var $scrollspy = $(scrollspyHTML).appendTo('#qunit-fixture')\n\n    $scrollspy\n      .bootstrapScrollspy({\n        target: '#navigation',\n        offset: $scrollspy.position().top\n      })\n      .one('scroll.bs.scrollspy', function () {\n        assert.strictEqual($('.active').length, 1, '\"active\" class on only one element present')\n        assert.strictEqual($('.active').has('#two-link').length, 1, '\"active\" class on second section')\n\n        $scrollspy\n          .one('scroll.bs.scrollspy', function () {\n            assert.strictEqual($('.active').length, 0, 'selection cleared')\n            done()\n          })\n          .scrollTop(0)\n      })\n      .scrollTop(201)\n  })\n\n  QUnit.test('should correctly select navigation element on backward scrolling when each target section height is 100%', function (assert) {\n    assert.expect(5)\n    var navbarHtml =\n        '<nav class=\"navbar\">'\n      + '<ul class=\"nav\">'\n      + '<li id=\"li-100-1\"><a href=\"#div-100-1\">div 1</a></li>'\n      + '<li id=\"li-100-2\"><a href=\"#div-100-2\">div 2</a></li>'\n      + '<li id=\"li-100-3\"><a href=\"#div-100-3\">div 3</a></li>'\n      + '<li id=\"li-100-4\"><a href=\"#div-100-4\">div 4</a></li>'\n      + '<li id=\"li-100-5\"><a href=\"#div-100-5\">div 5</a></li>'\n      + '</ul>'\n      + '</nav>'\n    var contentHtml =\n        '<div class=\"content\" style=\"position: relative; overflow: auto; height: 100px\">'\n      + '<div id=\"div-100-1\" style=\"position: relative; height: 100%; padding: 0; margin: 0\">div 1</div>'\n      + '<div id=\"div-100-2\" style=\"position: relative; height: 100%; padding: 0; margin: 0\">div 2</div>'\n      + '<div id=\"div-100-3\" style=\"position: relative; height: 100%; padding: 0; margin: 0\">div 3</div>'\n      + '<div id=\"div-100-4\" style=\"position: relative; height: 100%; padding: 0; margin: 0\">div 4</div>'\n      + '<div id=\"div-100-5\" style=\"position: relative; height: 100%; padding: 0; margin: 0\">div 5</div>'\n      + '</div>'\n\n    $(navbarHtml).appendTo('#qunit-fixture')\n    var $content = $(contentHtml)\n      .appendTo('#qunit-fixture')\n      .bootstrapScrollspy({ offset: 0, target: '.navbar' })\n\n    var testElementIsActiveAfterScroll = function (element, target) {\n      var deferred = $.Deferred()\n      var scrollHeight = Math.ceil($content.scrollTop() + $(target).position().top)\n      var done = assert.async()\n      $content.one('scroll', function () {\n        assert.ok($(element).hasClass('active'), 'target:' + target + ', element: ' + element)\n        done()\n        deferred.resolve()\n      })\n      $content.scrollTop(scrollHeight)\n      return deferred.promise()\n    }\n\n    $.when(testElementIsActiveAfterScroll('#li-100-5', '#div-100-5'))\n      .then(function () { return testElementIsActiveAfterScroll('#li-100-4', '#div-100-4') })\n      .then(function () { return testElementIsActiveAfterScroll('#li-100-3', '#div-100-3') })\n      .then(function () { return testElementIsActiveAfterScroll('#li-100-2', '#div-100-2') })\n      .then(function () { return testElementIsActiveAfterScroll('#li-100-1', '#div-100-1') })\n  })\n\n})\n"]}