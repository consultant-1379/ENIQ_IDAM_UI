{"version":3,"sources":["../../../../../../XUI/css/bootstrap-3.3.5-custom/js/tests/unit/button.js"],"names":["$","QUnit","module","test","assert","expect","ok","document","body","button","beforeEach","fn","bootstrapButton","noConflict","afterEach","strictEqual","undefined","$el","$button","$btn","html","done","async","setTimeout","hasAttribute","hasClass","doneOne","doneTwo","$inner","append","appendTo","trigger","attr","groupHTML","$group","$btn1","children","eq","$btn2","find","prop"],"mappings":";;AAAAA,EAAE,YAAY;AACZ;;AAEAC,QAAMC,MAAN,CAAa,eAAb;;AAEAD,QAAME,IAAN,CAAW,oCAAX,EAAiD,UAAUC,MAAV,EAAkB;AACjEA,WAAOC,MAAP,CAAc,CAAd;AACAD,WAAOE,EAAP,CAAUN,EAAEO,SAASC,IAAX,EAAiBC,MAA3B,EAAmC,0BAAnC;AACD,GAHD;;AAKAR,QAAMC,MAAN,CAAa,QAAb,EAAuB;AACrBQ,gBAAY,sBAAY;AACtB;AACAV,QAAEW,EAAF,CAAKC,eAAL,GAAuBZ,EAAEW,EAAF,CAAKF,MAAL,CAAYI,UAAZ,EAAvB;AACD,KAJoB;AAKrBC,eAAW,qBAAY;AACrBd,QAAEW,EAAF,CAAKF,MAAL,GAAcT,EAAEW,EAAF,CAAKC,eAAnB;AACA,aAAOZ,EAAEW,EAAF,CAAKC,eAAZ;AACD;AARoB,GAAvB;;AAWAX,QAAME,IAAN,CAAW,4BAAX,EAAyC,UAAUC,MAAV,EAAkB;AACzDA,WAAOC,MAAP,CAAc,CAAd;AACAD,WAAOW,WAAP,CAAmBf,EAAEW,EAAF,CAAKF,MAAxB,EAAgCO,SAAhC,EAA2C,8CAA3C;AACD,GAHD;;AAKAf,QAAME,IAAN,CAAW,wDAAX,EAAqE,UAAUC,MAAV,EAAkB;AACrFA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIY,MAAMjB,EAAE,QAAF,CAAV;AACA,QAAIkB,UAAUD,IAAIL,eAAJ,EAAd;AACAR,WAAOE,EAAP,CAAUY,mBAAmBlB,CAA7B,EAAgC,2BAAhC;AACAI,WAAOW,WAAP,CAAmBG,QAAQ,CAAR,CAAnB,EAA+BD,IAAI,CAAJ,CAA/B,EAAuC,6BAAvC;AACD,GAND;;AAQAhB,QAAME,IAAN,CAAW,oCAAX,EAAiD,UAAUC,MAAV,EAAkB;AACjEA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,OAAOnB,EAAE,0DAAF,CAAX;AACAI,WAAOW,WAAP,CAAmBI,KAAKC,IAAL,EAAnB,EAAgC,KAAhC,EAAuC,qBAAvC;AACAD,SAAKP,eAAL,CAAqB,SAArB;AACA,QAAIS,OAAOjB,OAAOkB,KAAP,EAAX;AACAC,eAAW,YAAY;AACrBnB,aAAOW,WAAP,CAAmBI,KAAKC,IAAL,EAAnB,EAAgC,KAAhC,EAAuC,qBAAvC;AACAhB,aAAOE,EAAP,CAAUa,KAAK,CAAL,EAAQK,YAAR,CAAqB,UAArB,CAAV,EAA4C,iBAA5C;AACApB,aAAOE,EAAP,CAAUa,KAAKM,QAAL,CAAc,UAAd,CAAV,EAAqC,wBAArC;AACAJ;AACD,KALD,EAKG,CALH;AAMD,GAZD;;AAcApB,QAAME,IAAN,CAAW,2BAAX,EAAwC,UAAUC,MAAV,EAAkB;AACxDA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,OAAOnB,EAAE,0DAAF,CAAX;AACAI,WAAOW,WAAP,CAAmBI,KAAKC,IAAL,EAAnB,EAAgC,KAAhC,EAAuC,qBAAvC;AACAD,SAAKP,eAAL,CAAqB,SAArB;AACA,QAAIc,UAAUtB,OAAOkB,KAAP,EAAd;AACAC,eAAW,YAAY;AACrBnB,aAAOW,WAAP,CAAmBI,KAAKC,IAAL,EAAnB,EAAgC,KAAhC,EAAuC,qBAAvC;AACAhB,aAAOE,EAAP,CAAUa,KAAK,CAAL,EAAQK,YAAR,CAAqB,UAArB,CAAV,EAA4C,iBAA5C;AACApB,aAAOE,EAAP,CAAUa,KAAKM,QAAL,CAAc,UAAd,CAAV,EAAqC,wBAArC;AACAC;AACA,UAAIC,UAAUvB,OAAOkB,KAAP,EAAd;AACAH,WAAKP,eAAL,CAAqB,OAArB;AACAW,iBAAW,YAAY;AACrBnB,eAAOW,WAAP,CAAmBI,KAAKC,IAAL,EAAnB,EAAgC,KAAhC,EAAuC,qBAAvC;AACAhB,eAAOE,EAAP,CAAU,CAACa,KAAK,CAAL,EAAQK,YAAR,CAAqB,UAArB,CAAX,EAA6C,qBAA7C;AACApB,eAAOE,EAAP,CAAU,CAACa,KAAKM,QAAL,CAAc,UAAd,CAAX,EAAsC,kCAAtC;AACAE;AACD,OALD,EAKG,CALH;AAMD,KAbD,EAaG,CAbH;AAcD,GApBD;;AAsBA1B,QAAME,IAAN,CAAW,iDAAX,EAA8D,UAAUC,MAAV,EAAkB;AAC9EA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,OAAOnB,EAAE,+CAAF,CAAX;AACAI,WAAOW,WAAP,CAAmBI,KAAKC,IAAL,EAAnB,EAAgC,EAAhC,EAAoC,oBAApC;AACAD,SAAKP,eAAL,CAAqB,SAArB;AACA,QAAIc,UAAUtB,OAAOkB,KAAP,EAAd;AACAC,eAAW,YAAY;AACrBnB,aAAOW,WAAP,CAAmBI,KAAKC,IAAL,EAAnB,EAAgC,KAAhC,EAAuC,qBAAvC;AACAhB,aAAOE,EAAP,CAAUa,KAAK,CAAL,EAAQK,YAAR,CAAqB,UAArB,CAAV,EAA4C,iBAA5C;AACApB,aAAOE,EAAP,CAAUa,KAAKM,QAAL,CAAc,UAAd,CAAV,EAAqC,wBAArC;AACAC;AACA,UAAIC,UAAUvB,OAAOkB,KAAP,EAAd;AACAH,WAAKP,eAAL,CAAqB,OAArB;AACAW,iBAAW,YAAY;AACrBnB,eAAOW,WAAP,CAAmBI,KAAKC,IAAL,EAAnB,EAAgC,EAAhC,EAAoC,oBAApC;AACAhB,eAAOE,EAAP,CAAU,CAACa,KAAK,CAAL,EAAQK,YAAR,CAAqB,UAArB,CAAX,EAA6C,qBAA7C;AACApB,eAAOE,EAAP,CAAU,CAACa,KAAKM,QAAL,CAAc,UAAd,CAAX,EAAsC,kCAAtC;AACAE;AACD,OALD,EAKG,CALH;AAMD,KAbD,EAaG,CAbH;AAcD,GApBD;;AAsBA1B,QAAME,IAAN,CAAW,sBAAX,EAAmC,UAAUC,MAAV,EAAkB;AACnDA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,OAAOnB,EAAE,uDAAF,CAAX;AACAI,WAAOE,EAAP,CAAU,CAACa,KAAKM,QAAL,CAAc,QAAd,CAAX,EAAoC,gCAApC;AACAN,SAAKP,eAAL,CAAqB,QAArB;AACAR,WAAOE,EAAP,CAAUa,KAAKM,QAAL,CAAc,QAAd,CAAV,EAAmC,sBAAnC;AACD,GAND;;AAQAxB,QAAME,IAAN,CAAW,oDAAX,EAAiE,UAAUC,MAAV,EAAkB;AACjFA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,OAAOnB,EAAE,uDAAF,CAAX;AACA,QAAI4B,SAAS5B,EAAE,MAAF,CAAb;AACAmB,SACGU,MADH,CACUD,MADV,EAEGE,QAFH,CAEY,gBAFZ;AAGA1B,WAAOE,EAAP,CAAU,CAACa,KAAKM,QAAL,CAAc,QAAd,CAAX,EAAoC,gCAApC;AACAG,WAAOG,OAAP,CAAe,OAAf;AACA3B,WAAOE,EAAP,CAAUa,KAAKM,QAAL,CAAc,QAAd,CAAV,EAAmC,sBAAnC;AACD,GAVD;;AAYAxB,QAAME,IAAN,CAAW,4BAAX,EAAyC,UAAUC,MAAV,EAAkB;AACzDA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,OAAOnB,EAAE,8EAAF,CAAX;AACAI,WAAOW,WAAP,CAAmBI,KAAKa,IAAL,CAAU,cAAV,CAAnB,EAA8C,OAA9C,EAAuD,iCAAvD;AACAb,SAAKP,eAAL,CAAqB,QAArB;AACAR,WAAOW,WAAP,CAAmBI,KAAKa,IAAL,CAAU,cAAV,CAAnB,EAA8C,MAA9C,EAAsD,gCAAtD;AACD,GAND;;AAQA/B,QAAME,IAAN,CAAW,0DAAX,EAAuE,UAAUC,MAAV,EAAkB;AACvFA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,OAAOnB,EAAE,8EAAF,CAAX;AACA,QAAI4B,SAAS5B,EAAE,MAAF,CAAb;AACAmB,SACGU,MADH,CACUD,MADV,EAEGE,QAFH,CAEY,gBAFZ;AAGA1B,WAAOW,WAAP,CAAmBI,KAAKa,IAAL,CAAU,cAAV,CAAnB,EAA8C,OAA9C,EAAuD,iCAAvD;AACAJ,WAAOG,OAAP,CAAe,OAAf;AACA3B,WAAOW,WAAP,CAAmBI,KAAKa,IAAL,CAAU,cAAV,CAAnB,EAA8C,MAA9C,EAAsD,gCAAtD;AACD,GAVD;;AAYA/B,QAAME,IAAN,CAAW,0CAAX,EAAuD,UAAUC,MAAV,EAAkB;AACvEA,WAAOC,MAAP,CAAc,EAAd;AACA,QAAI4B,YAAY,kDACZ,wCADY,GAEZ,0EAFY,GAGZ,UAHY,GAIZ,iCAJY,GAKZ,2DALY,GAMZ,UANY,GAOZ,iCAPY,GAQZ,2DARY,GASZ,UATY,GAUZ,QAVJ;AAWA,QAAIC,SAASlC,EAAEiC,SAAF,EAAaH,QAAb,CAAsB,gBAAtB,CAAb;;AAEA,QAAIK,QAAQD,OAAOE,QAAP,GAAkBC,EAAlB,CAAqB,CAArB,CAAZ;AACA,QAAIC,QAAQJ,OAAOE,QAAP,GAAkBC,EAAlB,CAAqB,CAArB,CAAZ;;AAEAjC,WAAOE,EAAP,CAAU6B,MAAMV,QAAN,CAAe,QAAf,CAAV,EAAoC,uBAApC;AACArB,WAAOE,EAAP,CAAU6B,MAAMI,IAAN,CAAW,OAAX,EAAoBC,IAApB,CAAyB,SAAzB,CAAV,EAA+C,iBAA/C;AACApC,WAAOE,EAAP,CAAU,CAACgC,MAAMb,QAAN,CAAe,QAAf,CAAX,EAAqC,iCAArC;AACArB,WAAOE,EAAP,CAAU,CAACgC,MAAMC,IAAN,CAAW,OAAX,EAAoBC,IAApB,CAAyB,SAAzB,CAAX,EAAgD,qBAAhD;AACAF,UAAMC,IAAN,CAAW,OAAX,EAAoBR,OAApB,CAA4B,OAA5B;AACA3B,WAAOE,EAAP,CAAU,CAAC6B,MAAMV,QAAN,CAAe,QAAf,CAAX,EAAqC,iCAArC;AACArB,WAAOE,EAAP,CAAU,CAAC6B,MAAMI,IAAN,CAAW,OAAX,EAAoBC,IAApB,CAAyB,SAAzB,CAAX,EAAgD,qBAAhD;AACApC,WAAOE,EAAP,CAAUgC,MAAMb,QAAN,CAAe,QAAf,CAAV,EAAoC,uBAApC;AACArB,WAAOE,EAAP,CAAUgC,MAAMC,IAAN,CAAW,OAAX,EAAoBC,IAApB,CAAyB,SAAzB,CAAV,EAA+C,iBAA/C;;AAEAF,UAAMC,IAAN,CAAW,OAAX,EAAoBR,OAApB,CAA4B,OAA5B,EA5BuE,CA4BlC;AACrC3B,WAAOE,EAAP,CAAU,CAAC6B,MAAMV,QAAN,CAAe,QAAf,CAAX,EAAqC,iCAArC;AACArB,WAAOE,EAAP,CAAU,CAAC6B,MAAMI,IAAN,CAAW,OAAX,EAAoBC,IAApB,CAAyB,SAAzB,CAAX,EAAgD,qBAAhD;AACApC,WAAOE,EAAP,CAAUgC,MAAMb,QAAN,CAAe,QAAf,CAAV,EAAoC,uBAApC;AACArB,WAAOE,EAAP,CAAUgC,MAAMC,IAAN,CAAW,OAAX,EAAoBC,IAApB,CAAyB,SAAzB,CAAV,EAA+C,iBAA/C;AACD,GAjCD;AAmCD,CAvKD","file":"button.js","sourcesContent":["$(function () {\n  'use strict';\n\n  QUnit.module('button plugin')\n\n  QUnit.test('should be defined on jquery object', function (assert) {\n    assert.expect(1)\n    assert.ok($(document.body).button, 'button method is defined')\n  })\n\n  QUnit.module('button', {\n    beforeEach: function () {\n      // Run all tests in noConflict mode -- it's the only way to ensure that the plugin works in noConflict mode\n      $.fn.bootstrapButton = $.fn.button.noConflict()\n    },\n    afterEach: function () {\n      $.fn.button = $.fn.bootstrapButton\n      delete $.fn.bootstrapButton\n    }\n  })\n\n  QUnit.test('should provide no conflict', function (assert) {\n    assert.expect(1)\n    assert.strictEqual($.fn.button, undefined, 'button was set back to undefined (org value)')\n  })\n\n  QUnit.test('should return jquery collection containing the element', function (assert) {\n    assert.expect(2)\n    var $el = $('<div/>')\n    var $button = $el.bootstrapButton()\n    assert.ok($button instanceof $, 'returns jquery collection')\n    assert.strictEqual($button[0], $el[0], 'collection contains element')\n  })\n\n  QUnit.test('should return set state to loading', function (assert) {\n    assert.expect(4)\n    var $btn = $('<button class=\"btn\" data-loading-text=\"fat\">mdo</button>')\n    assert.strictEqual($btn.html(), 'mdo', 'btn text equals mdo')\n    $btn.bootstrapButton('loading')\n    var done = assert.async()\n    setTimeout(function () {\n      assert.strictEqual($btn.html(), 'fat', 'btn text equals fat')\n      assert.ok($btn[0].hasAttribute('disabled'), 'btn is disabled')\n      assert.ok($btn.hasClass('disabled'), 'btn has disabled class')\n      done()\n    }, 0)\n  })\n\n  QUnit.test('should return reset state', function (assert) {\n    assert.expect(7)\n    var $btn = $('<button class=\"btn\" data-loading-text=\"fat\">mdo</button>')\n    assert.strictEqual($btn.html(), 'mdo', 'btn text equals mdo')\n    $btn.bootstrapButton('loading')\n    var doneOne = assert.async()\n    setTimeout(function () {\n      assert.strictEqual($btn.html(), 'fat', 'btn text equals fat')\n      assert.ok($btn[0].hasAttribute('disabled'), 'btn is disabled')\n      assert.ok($btn.hasClass('disabled'), 'btn has disabled class')\n      doneOne()\n      var doneTwo = assert.async()\n      $btn.bootstrapButton('reset')\n      setTimeout(function () {\n        assert.strictEqual($btn.html(), 'mdo', 'btn text equals mdo')\n        assert.ok(!$btn[0].hasAttribute('disabled'), 'btn is not disabled')\n        assert.ok(!$btn.hasClass('disabled'), 'btn does not have disabled class')\n        doneTwo()\n      }, 0)\n    }, 0)\n  })\n\n  QUnit.test('should work with an empty string as reset state', function (assert) {\n    assert.expect(7)\n    var $btn = $('<button class=\"btn\" data-loading-text=\"fat\"/>')\n    assert.strictEqual($btn.html(), '', 'btn text equals \"\"')\n    $btn.bootstrapButton('loading')\n    var doneOne = assert.async()\n    setTimeout(function () {\n      assert.strictEqual($btn.html(), 'fat', 'btn text equals fat')\n      assert.ok($btn[0].hasAttribute('disabled'), 'btn is disabled')\n      assert.ok($btn.hasClass('disabled'), 'btn has disabled class')\n      doneOne()\n      var doneTwo = assert.async()\n      $btn.bootstrapButton('reset')\n      setTimeout(function () {\n        assert.strictEqual($btn.html(), '', 'btn text equals \"\"')\n        assert.ok(!$btn[0].hasAttribute('disabled'), 'btn is not disabled')\n        assert.ok(!$btn.hasClass('disabled'), 'btn does not have disabled class')\n        doneTwo()\n      }, 0)\n    }, 0)\n  })\n\n  QUnit.test('should toggle active', function (assert) {\n    assert.expect(2)\n    var $btn = $('<button class=\"btn\" data-toggle=\"button\">mdo</button>')\n    assert.ok(!$btn.hasClass('active'), 'btn does not have active class')\n    $btn.bootstrapButton('toggle')\n    assert.ok($btn.hasClass('active'), 'btn has class active')\n  })\n\n  QUnit.test('should toggle active when btn children are clicked', function (assert) {\n    assert.expect(2)\n    var $btn = $('<button class=\"btn\" data-toggle=\"button\">mdo</button>')\n    var $inner = $('<i/>')\n    $btn\n      .append($inner)\n      .appendTo('#qunit-fixture')\n    assert.ok(!$btn.hasClass('active'), 'btn does not have active class')\n    $inner.trigger('click')\n    assert.ok($btn.hasClass('active'), 'btn has class active')\n  })\n\n  QUnit.test('should toggle aria-pressed', function (assert) {\n    assert.expect(2)\n    var $btn = $('<button class=\"btn\" data-toggle=\"button\" aria-pressed=\"false\">redux</button>')\n    assert.strictEqual($btn.attr('aria-pressed'), 'false', 'btn aria-pressed state is false')\n    $btn.bootstrapButton('toggle')\n    assert.strictEqual($btn.attr('aria-pressed'), 'true', 'btn aria-pressed state is true')\n  })\n\n  QUnit.test('should toggle aria-pressed when btn children are clicked', function (assert) {\n    assert.expect(2)\n    var $btn = $('<button class=\"btn\" data-toggle=\"button\" aria-pressed=\"false\">redux</button>')\n    var $inner = $('<i/>')\n    $btn\n      .append($inner)\n      .appendTo('#qunit-fixture')\n    assert.strictEqual($btn.attr('aria-pressed'), 'false', 'btn aria-pressed state is false')\n    $inner.trigger('click')\n    assert.strictEqual($btn.attr('aria-pressed'), 'true', 'btn aria-pressed state is true')\n  })\n\n  QUnit.test('should check for closest matching toggle', function (assert) {\n    assert.expect(12)\n    var groupHTML = '<div class=\"btn-group\" data-toggle=\"buttons\">'\n      + '<label class=\"btn btn-primary active\">'\n      + '<input type=\"radio\" name=\"options\" id=\"option1\" checked=\"true\"> Option 1'\n      + '</label>'\n      + '<label class=\"btn btn-primary\">'\n      + '<input type=\"radio\" name=\"options\" id=\"option2\"> Option 2'\n      + '</label>'\n      + '<label class=\"btn btn-primary\">'\n      + '<input type=\"radio\" name=\"options\" id=\"option3\"> Option 3'\n      + '</label>'\n      + '</div>'\n    var $group = $(groupHTML).appendTo('#qunit-fixture')\n\n    var $btn1 = $group.children().eq(0)\n    var $btn2 = $group.children().eq(1)\n\n    assert.ok($btn1.hasClass('active'), 'btn1 has active class')\n    assert.ok($btn1.find('input').prop('checked'), 'btn1 is checked')\n    assert.ok(!$btn2.hasClass('active'), 'btn2 does not have active class')\n    assert.ok(!$btn2.find('input').prop('checked'), 'btn2 is not checked')\n    $btn2.find('input').trigger('click')\n    assert.ok(!$btn1.hasClass('active'), 'btn1 does not have active class')\n    assert.ok(!$btn1.find('input').prop('checked'), 'btn1 is not checked')\n    assert.ok($btn2.hasClass('active'), 'btn2 has active class')\n    assert.ok($btn2.find('input').prop('checked'), 'btn2 is checked')\n\n    $btn2.find('input').trigger('click') // clicking an already checked radio should not un-check it\n    assert.ok(!$btn1.hasClass('active'), 'btn1 does not have active class')\n    assert.ok(!$btn1.find('input').prop('checked'), 'btn1 is not checked')\n    assert.ok($btn2.hasClass('active'), 'btn2 has active class')\n    assert.ok($btn2.find('input').prop('checked'), 'btn2 is checked')\n  })\n\n})\n"]}