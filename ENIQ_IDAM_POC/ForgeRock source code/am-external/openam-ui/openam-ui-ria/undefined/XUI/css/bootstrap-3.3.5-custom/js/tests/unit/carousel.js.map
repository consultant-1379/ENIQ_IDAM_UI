{"version":3,"sources":["../../../../../../XUI/css/bootstrap-3.3.5-custom/js/tests/unit/carousel.js"],"names":["$","QUnit","module","test","assert","expect","ok","document","body","carousel","beforeEach","fn","bootstrapCarousel","noConflict","afterEach","strictEqual","undefined","$el","$carousel","done","async","on","e","preventDefault","carouselHTML","one","setTimeout","find","is","direction","template","relatedTarget","hasClass","templateHTML","attr","appendTo","first","trigger","data","options","interval","remove","$template","Event","which","$input","$textarea","length","isMobile","documentElement","each","i","type","_data","getActiveId"],"mappings":"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","file":"carousel.js","sourcesContent":["$(function () {\n  'use strict';\n\n  QUnit.module('carousel plugin')\n\n  QUnit.test('should be defined on jQuery object', function (assert) {\n    assert.expect(1)\n    assert.ok($(document.body).carousel, 'carousel method is defined')\n  })\n\n  QUnit.module('carousel', {\n    beforeEach: function () {\n      // Run all tests in noConflict mode -- it's the only way to ensure that the plugin works in noConflict mode\n      $.fn.bootstrapCarousel = $.fn.carousel.noConflict()\n    },\n    afterEach: function () {\n      $.fn.carousel = $.fn.bootstrapCarousel\n      delete $.fn.bootstrapCarousel\n    }\n  })\n\n  QUnit.test('should provide no conflict', function (assert) {\n    assert.expect(1)\n    assert.strictEqual($.fn.carousel, undefined, 'carousel was set back to undefined (orig value)')\n  })\n\n  QUnit.test('should return jquery collection containing the element', function (assert) {\n    assert.expect(2)\n    var $el = $('<div/>')\n    var $carousel = $el.bootstrapCarousel()\n    assert.ok($carousel instanceof $, 'returns jquery collection')\n    assert.strictEqual($carousel[0], $el[0], 'collection contains element')\n  })\n\n  QUnit.test('should not fire slid when slide is prevented', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n    $('<div class=\"carousel\"/>')\n      .on('slide.bs.carousel', function (e) {\n        e.preventDefault()\n        assert.ok(true, 'slide event fired')\n        done()\n      })\n      .on('slid.bs.carousel', function () {\n        assert.ok(false, 'slid event fired')\n      })\n      .bootstrapCarousel('next')\n  })\n\n  QUnit.test('should reset when slide is prevented', function (assert) {\n    assert.expect(6)\n    var carouselHTML = '<div id=\"carousel-example-generic\" class=\"carousel slide\">'\n        + '<ol class=\"carousel-indicators\">'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"0\" class=\"active\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"1\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"2\"/>'\n        + '</ol>'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#carousel-example-generic\" data-slide=\"prev\"/>'\n        + '<a class=\"right carousel-control\" href=\"#carousel-example-generic\" data-slide=\"next\"/>'\n        + '</div>'\n    var $carousel = $(carouselHTML)\n\n    var done = assert.async()\n    $carousel\n      .one('slide.bs.carousel', function (e) {\n        e.preventDefault()\n        setTimeout(function () {\n          assert.ok($carousel.find('.item:eq(0)').is('.active'), 'first item still active')\n          assert.ok($carousel.find('.carousel-indicators li:eq(0)').is('.active'), 'first indicator still active')\n          $carousel.bootstrapCarousel('next')\n        }, 0)\n      })\n      .one('slid.bs.carousel', function () {\n        setTimeout(function () {\n          assert.ok(!$carousel.find('.item:eq(0)').is('.active'), 'first item still active')\n          assert.ok(!$carousel.find('.carousel-indicators li:eq(0)').is('.active'), 'first indicator still active')\n          assert.ok($carousel.find('.item:eq(1)').is('.active'), 'second item active')\n          assert.ok($carousel.find('.carousel-indicators li:eq(1)').is('.active'), 'second indicator active')\n          done()\n        }, 0)\n      })\n      .bootstrapCarousel('next')\n  })\n\n  QUnit.test('should fire slide event with direction', function (assert) {\n    assert.expect(4)\n    var carouselHTML = '<div id=\"myCarousel\" class=\"carousel slide\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>First Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Second Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Third Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">&lsaquo;</a>'\n        + '<a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">&rsaquo;</a>'\n        + '</div>'\n    var $carousel = $(carouselHTML)\n\n    var done = assert.async()\n\n    $carousel\n      .one('slide.bs.carousel', function (e) {\n        assert.ok(e.direction, 'direction present on next')\n        assert.strictEqual(e.direction, 'left', 'direction is left on next')\n\n        $carousel\n          .one('slide.bs.carousel', function (e) {\n            assert.ok(e.direction, 'direction present on prev')\n            assert.strictEqual(e.direction, 'right', 'direction is right on prev')\n            done()\n          })\n          .bootstrapCarousel('prev')\n      })\n      .bootstrapCarousel('next')\n  })\n\n  QUnit.test('should fire slid event with direction', function (assert) {\n    assert.expect(4)\n    var carouselHTML = '<div id=\"myCarousel\" class=\"carousel slide\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>First Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Second Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Third Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">&lsaquo;</a>'\n        + '<a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">&rsaquo;</a>'\n        + '</div>'\n    var $carousel = $(carouselHTML)\n\n    var done = assert.async()\n\n    $carousel\n      .one('slid.bs.carousel', function (e) {\n        assert.ok(e.direction, 'direction present on next')\n        assert.strictEqual(e.direction, 'left', 'direction is left on next')\n\n        $carousel\n          .one('slid.bs.carousel', function (e) {\n            assert.ok(e.direction, 'direction present on prev')\n            assert.strictEqual(e.direction, 'right', 'direction is right on prev')\n            done()\n          })\n          .bootstrapCarousel('prev')\n      })\n      .bootstrapCarousel('next')\n  })\n\n  QUnit.test('should fire slide event with relatedTarget', function (assert) {\n    assert.expect(2)\n    var template = '<div id=\"myCarousel\" class=\"carousel slide\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>First Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Second Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Third Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">&lsaquo;</a>'\n        + '<a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">&rsaquo;</a>'\n        + '</div>'\n\n    var done = assert.async()\n\n    $(template)\n      .on('slide.bs.carousel', function (e) {\n        assert.ok(e.relatedTarget, 'relatedTarget present')\n        assert.ok($(e.relatedTarget).hasClass('item'), 'relatedTarget has class \"item\"')\n        done()\n      })\n      .bootstrapCarousel('next')\n  })\n\n  QUnit.test('should fire slid event with relatedTarget', function (assert) {\n    assert.expect(2)\n    var template = '<div id=\"myCarousel\" class=\"carousel slide\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>First Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Second Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Third Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">&lsaquo;</a>'\n        + '<a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">&rsaquo;</a>'\n        + '</div>'\n\n    var done = assert.async()\n\n    $(template)\n      .on('slid.bs.carousel', function (e) {\n        assert.ok(e.relatedTarget, 'relatedTarget present')\n        assert.ok($(e.relatedTarget).hasClass('item'), 'relatedTarget has class \"item\"')\n        done()\n      })\n      .bootstrapCarousel('next')\n  })\n\n  QUnit.test('should set interval from data attribute', function (assert) {\n    assert.expect(4)\n    var templateHTML = '<div id=\"myCarousel\" class=\"carousel slide\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>First Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Second Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '<div class=\"carousel-caption\">'\n        + '<h4>Third Thumbnail label</h4>'\n        + '<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec '\n        + 'id elit non mi porta gravida at eget metus. Nullam id dolor id nibh '\n        + 'ultricies vehicula ut id elit.</p>'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">&lsaquo;</a>'\n        + '<a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">&rsaquo;</a>'\n        + '</div>'\n    var $carousel = $(templateHTML)\n    $carousel.attr('data-interval', 1814)\n\n    $carousel.appendTo('body')\n    $('[data-slide]').first().trigger('click')\n    assert.strictEqual($carousel.data('bs.carousel').options.interval, 1814)\n    $carousel.remove()\n\n    $carousel.appendTo('body').attr('data-modal', 'foobar')\n    $('[data-slide]').first().trigger('click')\n    assert.strictEqual($carousel.data('bs.carousel').options.interval, 1814, 'even if there is an data-modal attribute set')\n    $carousel.remove()\n\n    $carousel.appendTo('body')\n    $('[data-slide]').first().trigger('click')\n    $carousel.attr('data-interval', 1860)\n    $('[data-slide]').first().trigger('click')\n    assert.strictEqual($carousel.data('bs.carousel').options.interval, 1814, 'attributes should be read only on initialization')\n    $carousel.remove()\n\n    $carousel.attr('data-interval', false)\n    $carousel.appendTo('body')\n    $carousel.bootstrapCarousel(1)\n    assert.strictEqual($carousel.data('bs.carousel').options.interval, false, 'data attribute has higher priority than default options')\n    $carousel.remove()\n  })\n\n  QUnit.test('should skip over non-items when using item indices', function (assert) {\n    assert.expect(2)\n    var templateHTML = '<div id=\"myCarousel\" class=\"carousel\" data-interval=\"1814\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<script type=\"text/x-metamorph\" id=\"thingy\"/>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n    var $template = $(templateHTML)\n\n    $template.bootstrapCarousel()\n\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item active')\n\n    $template.bootstrapCarousel(1)\n\n    assert.strictEqual($template.find('.item')[1], $template.find('.active')[0], 'second item active')\n  })\n\n  QUnit.test('should skip over non-items when using next/prev methods', function (assert) {\n    assert.expect(2)\n    var templateHTML = '<div id=\"myCarousel\" class=\"carousel\" data-interval=\"1814\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<script type=\"text/x-metamorph\" id=\"thingy\"/>'\n        + '<div class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div class=\"item\">'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n    var $template = $(templateHTML)\n\n    $template.bootstrapCarousel()\n\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item active')\n\n    $template.bootstrapCarousel('next')\n\n    assert.strictEqual($template.find('.item')[1], $template.find('.active')[0], 'second item active')\n  })\n\n  QUnit.test('should go to previous item if left arrow key is pressed', function (assert) {\n    assert.expect(2)\n    var templateHTML = '<div id=\"myCarousel\" class=\"carousel\" data-interval=\"false\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div id=\"first\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div id=\"second\" class=\"item active\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div id=\"third\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n    var $template = $(templateHTML)\n\n    $template.bootstrapCarousel()\n\n    assert.strictEqual($template.find('.item')[1], $template.find('.active')[0], 'second item active')\n\n    $template.trigger($.Event('keydown', { which: 37 }))\n\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item active')\n  })\n\n  QUnit.test('should go to next item if right arrow key is pressed', function (assert) {\n    assert.expect(2)\n    var templateHTML = '<div id=\"myCarousel\" class=\"carousel\" data-interval=\"false\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div id=\"first\" class=\"item active\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div id=\"second\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div id=\"third\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n    var $template = $(templateHTML)\n\n    $template.bootstrapCarousel()\n\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item active')\n\n    $template.trigger($.Event('keydown', { which: 39 }))\n\n    assert.strictEqual($template.find('.item')[1], $template.find('.active')[0], 'second item active')\n  })\n\n  QUnit.test('should support disabling the keyboard navigation', function (assert) {\n    assert.expect(3)\n    var templateHTML = '<div id=\"myCarousel\" class=\"carousel\" data-interval=\"false\" data-keyboard=\"false\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div id=\"first\" class=\"item active\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div id=\"second\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div id=\"third\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n    var $template = $(templateHTML)\n\n    $template.bootstrapCarousel()\n\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item active')\n\n    $template.trigger($.Event('keydown', { which: 39 }))\n\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item still active after right arrow press')\n\n    $template.trigger($.Event('keydown', { which: 37 }))\n\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item still active after left arrow press')\n  })\n\n  QUnit.test('should ignore keyboard events within <input>s and <textarea>s', function (assert) {\n    assert.expect(7)\n    var templateHTML = '<div id=\"myCarousel\" class=\"carousel\" data-interval=\"false\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div id=\"first\" class=\"item active\">'\n        + '<img alt=\"\">'\n        + '<input type=\"text\" id=\"in-put\">'\n        + '<textarea id=\"text-area\"></textarea>'\n        + '</div>'\n        + '<div id=\"second\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div id=\"third\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n    var $template = $(templateHTML)\n    var $input = $template.find('#in-put')\n    var $textarea = $template.find('#text-area')\n\n    assert.strictEqual($input.length, 1, 'found <input>')\n    assert.strictEqual($textarea.length, 1, 'found <textarea>')\n\n    $template.bootstrapCarousel()\n\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item active')\n\n\n    $input.trigger($.Event('keydown', { which: 39 }))\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item still active after right arrow press in <input>')\n\n    $input.trigger($.Event('keydown', { which: 37 }))\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item still active after left arrow press in <input>')\n\n\n    $textarea.trigger($.Event('keydown', { which: 39 }))\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item still active after right arrow press in <textarea>')\n\n    $textarea.trigger($.Event('keydown', { which: 37 }))\n    assert.strictEqual($template.find('.item')[0], $template.find('.active')[0], 'first item still active after left arrow press in <textarea>')\n  })\n\n  QUnit.test('should only add mouseenter and mouseleave listeners when not on mobile', function (assert) {\n    assert.expect(2)\n    var isMobile     = 'ontouchstart' in document.documentElement\n    var templateHTML = '<div id=\"myCarousel\" class=\"carousel\" data-interval=\"false\" data-pause=\"hover\">'\n        + '<div class=\"carousel-inner\">'\n        + '<div id=\"first\" class=\"item active\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div id=\"second\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '<div id=\"third\" class=\"item\">'\n        + '<img alt=\"\">'\n        + '</div>'\n        + '</div>'\n        + '</div>'\n    var $template = $(templateHTML).bootstrapCarousel()\n\n    $.each(['mouseover', 'mouseout'], function (i, type) {\n      assert.strictEqual(type in $._data($template[0], 'events'), !isMobile, 'does' + (isMobile ? ' not' : '') + ' listen for ' + type + ' events')\n    })\n  })\n\n  QUnit.test('should wrap around from end to start when wrap option is true', function (assert) {\n    assert.expect(3)\n    var carouselHTML = '<div id=\"carousel-example-generic\" class=\"carousel slide\" data-wrap=\"true\">'\n        + '<ol class=\"carousel-indicators\">'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"0\" class=\"active\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"1\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"2\"/>'\n        + '</ol>'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\" id=\"one\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\" id=\"two\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\" id=\"three\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#carousel-example-generic\" data-slide=\"prev\"/>'\n        + '<a class=\"right carousel-control\" href=\"#carousel-example-generic\" data-slide=\"next\"/>'\n        + '</div>'\n    var $carousel = $(carouselHTML)\n    var getActiveId = function () { return $carousel.find('.item.active').attr('id') }\n\n    var done = assert.async()\n\n    $carousel\n      .one('slid.bs.carousel', function () {\n        assert.strictEqual(getActiveId(), 'two', 'carousel slid from 1st to 2nd slide')\n        $carousel\n          .one('slid.bs.carousel', function () {\n            assert.strictEqual(getActiveId(), 'three', 'carousel slid from 2nd to 3rd slide')\n            $carousel\n              .one('slid.bs.carousel', function () {\n                assert.strictEqual(getActiveId(), 'one', 'carousel wrapped around and slid from 3rd to 1st slide')\n                done()\n              })\n              .bootstrapCarousel('next')\n          })\n          .bootstrapCarousel('next')\n      })\n      .bootstrapCarousel('next')\n  })\n\n  QUnit.test('should wrap around from start to end when wrap option is true', function (assert) {\n    assert.expect(1)\n    var carouselHTML = '<div id=\"carousel-example-generic\" class=\"carousel slide\" data-wrap=\"true\">'\n        + '<ol class=\"carousel-indicators\">'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"0\" class=\"active\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"1\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"2\"/>'\n        + '</ol>'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\" id=\"one\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\" id=\"two\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\" id=\"three\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#carousel-example-generic\" data-slide=\"prev\"/>'\n        + '<a class=\"right carousel-control\" href=\"#carousel-example-generic\" data-slide=\"next\"/>'\n        + '</div>'\n    var $carousel = $(carouselHTML)\n\n    var done = assert.async()\n\n    $carousel\n      .on('slid.bs.carousel', function () {\n        assert.strictEqual($carousel.find('.item.active').attr('id'), 'three', 'carousel wrapped around and slid from 1st to 3rd slide')\n        done()\n      })\n      .bootstrapCarousel('prev')\n  })\n\n  QUnit.test('should stay at the end when the next method is called and wrap is false', function (assert) {\n    assert.expect(3)\n    var carouselHTML = '<div id=\"carousel-example-generic\" class=\"carousel slide\" data-wrap=\"false\">'\n        + '<ol class=\"carousel-indicators\">'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"0\" class=\"active\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"1\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"2\"/>'\n        + '</ol>'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\" id=\"one\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\" id=\"two\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\" id=\"three\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#carousel-example-generic\" data-slide=\"prev\"/>'\n        + '<a class=\"right carousel-control\" href=\"#carousel-example-generic\" data-slide=\"next\"/>'\n        + '</div>'\n    var $carousel = $(carouselHTML)\n    var getActiveId = function () { return $carousel.find('.item.active').attr('id') }\n\n    var done = assert.async()\n\n    $carousel\n      .one('slid.bs.carousel', function () {\n        assert.strictEqual(getActiveId(), 'two', 'carousel slid from 1st to 2nd slide')\n        $carousel\n          .one('slid.bs.carousel', function () {\n            assert.strictEqual(getActiveId(), 'three', 'carousel slid from 2nd to 3rd slide')\n            $carousel\n              .one('slid.bs.carousel', function () {\n                assert.ok(false, 'carousel slid when it should not have slid')\n              })\n              .bootstrapCarousel('next')\n            assert.strictEqual(getActiveId(), 'three', 'carousel did not wrap around and stayed on 3rd slide')\n            done()\n          })\n          .bootstrapCarousel('next')\n      })\n      .bootstrapCarousel('next')\n  })\n\n  QUnit.test('should stay at the start when the prev method is called and wrap is false', function (assert) {\n    assert.expect(1)\n    var carouselHTML = '<div id=\"carousel-example-generic\" class=\"carousel slide\" data-wrap=\"false\">'\n        + '<ol class=\"carousel-indicators\">'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"0\" class=\"active\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"1\"/>'\n        + '<li data-target=\"#carousel-example-generic\" data-slide-to=\"2\"/>'\n        + '</ol>'\n        + '<div class=\"carousel-inner\">'\n        + '<div class=\"item active\" id=\"one\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\" id=\"two\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '<div class=\"item\" id=\"three\">'\n        + '<div class=\"carousel-caption\"/>'\n        + '</div>'\n        + '</div>'\n        + '<a class=\"left carousel-control\" href=\"#carousel-example-generic\" data-slide=\"prev\"/>'\n        + '<a class=\"right carousel-control\" href=\"#carousel-example-generic\" data-slide=\"next\"/>'\n        + '</div>'\n    var $carousel = $(carouselHTML)\n\n    $carousel\n      .on('slid.bs.carousel', function () {\n        assert.ok(false, 'carousel slid when it should not have slid')\n      })\n      .bootstrapCarousel('prev')\n    assert.strictEqual($carousel.find('.item.active').attr('id'), 'one', 'carousel did not wrap around and stayed on 1st slide')\n  })\n})\n"]}