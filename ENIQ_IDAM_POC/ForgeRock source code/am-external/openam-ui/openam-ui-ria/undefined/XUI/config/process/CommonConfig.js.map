{"version":3,"sources":["../../../XUI/config/process/CommonConfig.js"],"names":["define","$","_","Constants","EventManager","obj","startEvent","EVENT_APP_INITIALIZED","description","dependencies","processDescription","event","Router","Configuration","UIUtils","CookieHelper","SessionManager","i18nManager","postSessionCheck","preloadInitialTemplates","preloadInitialPartials","init","serverLang","globalData","lang","paramLang","convertCurrentUrlToJSON","params","defaultLang","DEFAULT_LANGUAGE","then","getLoggedUser","user","setProperty","sendEvent","EVENT_AUTHENTICATION_DATA_CHANGED","anonymousMode","cookiesEnabled","location","href","EVENT_CHANGE_BASE_VIEW","Navigation","LoginHeader","Footer","render","serviceInvokerModuleName","serviceInvokerConfig","getModuleConfiguration","authorizationFailurePending","defaultHeaders","HEADER_PARAM_PASSWORD","HEADER_PARAM_USERNAME","HEADER_PARAM_NO_SESSION","EVENT_AUTHENTICATED","ANONYMOUS_PASSWORD","ANONYMOUS_USERNAME","reload","sendSingleModuleConfigurationChangeInfo","EVENT_UNAUTHORIZED","EVENT_DISPLAY_MESSAGE_REQUEST","EVENT_UNAUTHENTICATED","error","hash","getCurrentHash","gotoURL","match","configuration","routes","login","url","EVENT_CHANGE_VIEW","route","EVENT_DIALOG_CLOSE","ModuleLoader","ViewManager","currentDialog","baseView","load","view","rebind","navigate","getLink","baseViewArgs","EVENT_REST_CALL_ERROR","spinner","errorsHandler","handleError","data","errorsHandlers","hideSpinner","EVENT_START_REST_CALL","suppressSpinner","showSpinner","EVENT_END_REST_CALL","SiteConfigurator","SpinnerManager","args","callback","fromRouter","checkRole","backgroundLogin","defaults","configurePage","promise","Deferred","routeTo","trigger","changeView","resolve","forceUpdate","EVENT_SHOW_DIALOG","viewManager","router","conf","navigation","currentViewArgs","base","has","showDialog","dialog","EVENT_SERVICE_UNAVAILABLE","ROUTE_REQUEST","routeName","undefined","currentView","messagesManager","messages","displayMessageFromConfig","EVENT_LOGIN_REQUEST","submitContent","window","decodeURIComponent","auth","urlParams","goto","indexOf","close","prototype","modal","reason","gotoOnFail","failureCallback","reject","EVENT_SHOW_LOGIN_DIALOG","LoginDialog","Queue","queueName","peek","authenticatedCallback","remove","add","EVENT_LOGOUT","sessionManager","logout","EVENT_SELECT_KBA_QUESTION","KBAView","changeQuestion","EVENT_DELETE_KBA_QUESTION","deleteQuestion","viewId"],"mappings":"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","file":"CommonConfig.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"lodash\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\"\r\n], function($, _, Constants, EventManager) {\r\n    var obj = [\r\n        {\r\n            startEvent: Constants.EVENT_APP_INITIALIZED,\r\n            description: \"Starting basic components\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/Router\",\r\n                \"org/forgerock/commons/ui/common/main/Configuration\",\r\n                \"org/forgerock/commons/ui/common/util/UIUtils\",\r\n                \"org/forgerock/commons/ui/common/util/CookieHelper\",\r\n                \"org/forgerock/commons/ui/common/main/SessionManager\",\r\n                \"org/forgerock/commons/ui/common/main/i18nManager\"\r\n            ],\r\n            processDescription: function(event, Router, Configuration, UIUtils, CookieHelper, SessionManager,\r\n                                         i18nManager) {\r\n                var postSessionCheck = function () {\r\n                    UIUtils.preloadInitialTemplates();\r\n                    UIUtils.preloadInitialPartials();\r\n                    Router.init();\r\n                };\r\n\r\n                i18nManager.init({\r\n                    serverLang: Configuration.globalData.lang,\r\n                    paramLang: Router.convertCurrentUrlToJSON().params,\r\n                    defaultLang: Constants.DEFAULT_LANGUAGE\r\n                }).then(function () {\r\n                    SessionManager.getLoggedUser(function(user) {\r\n                        Configuration.setProperty('loggedUser', user);\r\n                        // WARNING - do not use the promise returned from sendEvent as an example for using this system\r\n                        // TODO - replace with simplified event system as per CUI-110\r\n                        EventManager.sendEvent(Constants.EVENT_AUTHENTICATION_DATA_CHANGED, { anonymousMode: false})\r\n                            .then(postSessionCheck);\r\n                    }, function() {\r\n                        if (!CookieHelper.cookiesEnabled()) {\r\n                            location.href = \"#enableCookies/\";\r\n                        }\r\n                        EventManager.sendEvent(Constants.EVENT_AUTHENTICATION_DATA_CHANGED, { anonymousMode: true})\r\n                            .then(postSessionCheck);\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_CHANGE_BASE_VIEW,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/components/Navigation\",\r\n                \"org/forgerock/commons/ui/common/components/LoginHeader\",\r\n                \"Footer\"\r\n\r\n            ],\r\n            processDescription: function(event, Navigation, LoginHeader, Footer) {\r\n                LoginHeader.render();\r\n                Navigation.init();\r\n                Footer.render();\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_AUTHENTICATION_DATA_CHANGED,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/Configuration\",\r\n                \"org/forgerock/commons/ui/common/components/Navigation\"\r\n            ],\r\n            processDescription: function(event, Configuration, Navigation) {\r\n                var serviceInvokerModuleName, serviceInvokerConfig;\r\n                serviceInvokerModuleName = \"org/forgerock/commons/ui/common/main/ServiceInvoker\";\r\n                serviceInvokerConfig = Configuration.getModuleConfiguration(serviceInvokerModuleName);\r\n                if (!event.anonymousMode) {\r\n                    delete Configuration.globalData.authorizationFailurePending;\r\n                    delete serviceInvokerConfig.defaultHeaders[Constants.HEADER_PARAM_PASSWORD];\r\n                    delete serviceInvokerConfig.defaultHeaders[Constants.HEADER_PARAM_USERNAME];\r\n                    delete serviceInvokerConfig.defaultHeaders[Constants.HEADER_PARAM_NO_SESSION];\r\n\r\n                    EventManager.sendEvent(Constants.EVENT_AUTHENTICATED);\r\n                } else {\r\n                    serviceInvokerConfig.defaultHeaders[Constants.HEADER_PARAM_PASSWORD] = Constants.ANONYMOUS_PASSWORD;\r\n                    serviceInvokerConfig.defaultHeaders[Constants.HEADER_PARAM_USERNAME] = Constants.ANONYMOUS_USERNAME;\r\n                    serviceInvokerConfig.defaultHeaders[Constants.HEADER_PARAM_NO_SESSION]= true;\r\n\r\n                    Configuration.setProperty(\"loggedUser\", null);\r\n                    Navigation.reload();\r\n                }\r\n                Configuration.sendSingleModuleConfigurationChangeInfo(serviceInvokerModuleName);\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_UNAUTHORIZED,\r\n            description: \"\",\r\n            dependencies: [ ],\r\n            processDescription: function() {\r\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"unauthorized\");\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_UNAUTHENTICATED,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/Router\",\r\n                \"org/forgerock/commons/ui/common/main/Configuration\"\r\n            ],\r\n            processDescription: function(error, Router, Configuration) {\r\n                var hash = Router.getCurrentHash();\r\n                if (!Configuration.gotoURL && !hash.match(Router.configuration.routes.login.url)) {\r\n                    Configuration.setProperty(\"gotoURL\", \"#\" + hash);\r\n                }\r\n                EventManager.sendEvent(Constants.EVENT_AUTHENTICATION_DATA_CHANGED, {\r\n                    anonymousMode: true\r\n                });\r\n                EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\r\n                    route: Router.configuration.routes.login\r\n                });\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_DIALOG_CLOSE,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/Configuration\",\r\n                \"org/forgerock/commons/ui/common/util/ModuleLoader\",\r\n                \"org/forgerock/commons/ui/common/components/Navigation\",\r\n                \"org/forgerock/commons/ui/common/main/Router\",\r\n                \"org/forgerock/commons/ui/common/main/ViewManager\"\r\n            ],\r\n            processDescription: function(event, Configuration, ModuleLoader, Navigation, Router, ViewManager) {\r\n                ViewManager.currentDialog = null;\r\n                if(Configuration.baseView) {\r\n                    ModuleLoader.load(Router.configuration.routes[Configuration.baseView].view).then(function (view) {\r\n                        view.rebind();\r\n                        Router.navigate(Router.getLink(Router.configuration.routes[Configuration.baseView],\r\n                            Configuration.baseViewArgs));\r\n                        Navigation.reload();\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_REST_CALL_ERROR,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/SpinnerManager\",\r\n                \"org/forgerock/commons/ui/common/main/ErrorsHandler\"\r\n            ],\r\n            processDescription: function(event, spinner, errorsHandler) {\r\n                errorsHandler.handleError(event.data, event.errorsHandlers);\r\n                spinner.hideSpinner();\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_START_REST_CALL,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/SpinnerManager\"\r\n            ],\r\n            processDescription: function(event, spinner) {\r\n                if (!event.suppressSpinner) {\r\n                    spinner.showSpinner();\r\n                }\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_END_REST_CALL,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/SpinnerManager\"\r\n            ],\r\n            processDescription: function(event, spinner) {\r\n                spinner.hideSpinner();\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_CHANGE_VIEW,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/Configuration\",\r\n                \"org/forgerock/commons/ui/common/util/ModuleLoader\",\r\n                \"org/forgerock/commons/ui/common/components/Navigation\",\r\n                \"org/forgerock/commons/ui/common/main/Router\",\r\n                \"org/forgerock/commons/ui/common/SiteConfigurator\",\r\n                \"org/forgerock/commons/ui/common/main/SpinnerManager\",\r\n                \"org/forgerock/commons/ui/common/main/ViewManager\"\r\n            ],\r\n            processDescription: function(event, Configuration, ModuleLoader, Navigation, Router, SiteConfigurator,\r\n                                         SpinnerManager, ViewManager) {\r\n                var route = event.route,\r\n                    params = event.args,\r\n                    callback = event.callback,\r\n                    fromRouter = event.fromRouter;\r\n\r\n                if (!Router.checkRole(route)) {\r\n                    route = {\r\n                        view: \"org/forgerock/commons/ui/common/UnauthorizedView\",\r\n                        url: \"\",\r\n                        fromRouter: true\r\n                    };\r\n                }\r\n\r\n                if (Configuration.backgroundLogin) {\r\n                    return;\r\n                }\r\n\r\n                return ModuleLoader.load(route.view).then(function (view) {\r\n                    view.route = route;\r\n\r\n                    params = params || route.defaults;\r\n                    Configuration.setProperty(\"baseView\", \"\");\r\n                    Configuration.setProperty(\"baseViewArgs\", \"\");\r\n\r\n                    return SiteConfigurator.configurePage(route, params).then(function () {\r\n                        var promise = $.Deferred();\r\n                        SpinnerManager.hideSpinner(10);\r\n                        if (!fromRouter) {\r\n                            Router.routeTo(route, {trigger: true, args: params});\r\n                        }\r\n\r\n                        ViewManager.changeView(route.view, params, function () {\r\n                            if (callback) {\r\n                                callback();\r\n                            }\r\n                            promise.resolve(view);\r\n                        }, route.forceUpdate);\r\n\r\n                        Navigation.reload();\r\n                        return promise;\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_SHOW_DIALOG,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/ViewManager\",\r\n                \"org/forgerock/commons/ui/common/main/Router\",\r\n                \"org/forgerock/commons/ui/common/main/Configuration\",\r\n                \"org/forgerock/commons/ui/common/components/Navigation\"\r\n            ],\r\n            processDescription: function(args, viewManager, router, conf, navigation) {\r\n                var route = args.route,\r\n                    params = args.args,\r\n                    callback = args.callback,\r\n                    baseViewArgs;\r\n\r\n                if (!router.checkRole(route)) {\r\n                    return;\r\n                }\r\n\r\n                if (viewManager.currentViewArgs === null) {\r\n                    baseViewArgs = params;\r\n                } else {\r\n                    baseViewArgs = viewManager.currentViewArgs;\r\n                }\r\n\r\n                conf.setProperty(\"baseView\", args.base);\r\n                conf.setProperty(\"baseViewArgs\", baseViewArgs);\r\n\r\n                navigation.init();\r\n\r\n                if (!_.has(route, \"baseView\") && _.has(route, \"base\")) {\r\n                    viewManager.changeView(router.configuration.routes[route.base].view, baseViewArgs, function() {\r\n                        viewManager.showDialog(route.dialog, params);\r\n                        router.navigate(router.getLink(route, params));\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    });\r\n                } else {\r\n                    /*\r\n                     * There is an expectation that the base view uses some subset of the same\r\n                     * params that the dialog uses, and that they are in the same order.\r\n                     * The base might have a url like myView/foo, where '/foo' is the first param.\r\n                     * The dialog should be constructed so that its own arguments follow, like so:\r\n                     * myViewDialog/foo/bar - the params being '/foo' and '/bar'. Because '/foo'\r\n                     * is still in the first position, it is reasonable to pass to the base view\r\n                     * (along with '/bar', which will presumably be ignored)\r\n                     */\r\n\r\n                    viewManager.changeView(route.baseView.view, baseViewArgs, function() {\r\n                        viewManager.showDialog(route.dialog, params);\r\n                        router.navigate(router.getLink(route, params));\r\n                        if (callback) {\r\n                            callback();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_SERVICE_UNAVAILABLE,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/Router\"\r\n            ],\r\n            processDescription: function() {\r\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"serviceUnavailable\");\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.ROUTE_REQUEST,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/components/Navigation\",\r\n                \"org/forgerock/commons/ui/common/main/Router\",\r\n                \"org/forgerock/commons/ui/common/main/ViewManager\"\r\n            ],\r\n            processDescription: function(event, Navigation, Router, ViewManager) {\r\n                var route = Router.configuration.routes[event.routeName];\r\n\r\n                // trigger defaults to true\r\n                if (event.trigger === undefined) {\r\n                    event.trigger = true;\r\n                } else if (event.trigger === false) {\r\n                    ViewManager.currentView = route.view;\r\n                    ViewManager.currentViewArgs = event.args;\r\n                }\r\n\r\n                Router.routeTo(route, event);\r\n                Navigation.reload();\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_DISPLAY_MESSAGE_REQUEST,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/components/Messages\"\r\n            ],\r\n            processDescription: function(event, messagesManager) {\r\n                messagesManager.messages.displayMessageFromConfig(event);\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_LOGIN_REQUEST,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/Configuration\",\r\n                \"org/forgerock/commons/ui/common/util/ModuleLoader\",\r\n                \"org/forgerock/commons/ui/common/main/Router\",\r\n                \"org/forgerock/commons/ui/common/main/SessionManager\",\r\n                \"org/forgerock/commons/ui/common/main/ViewManager\"\r\n            ],\r\n            processDescription: function(event, Configuration, ModuleLoader, Router, SessionManager, ViewManager) {\r\n                var promise = $.Deferred(),\r\n                    submitContent = event.submitContent || event;\r\n\r\n                SessionManager.login(submitContent, function(user) {\r\n                    Configuration.setProperty('loggedUser', user);\r\n\r\n                    EventManager.sendEvent(Constants.EVENT_AUTHENTICATION_DATA_CHANGED, { anonymousMode: false});\r\n\r\n                    if (!Configuration.backgroundLogin) {\r\n                        if (_.has(Configuration, \"globalData.auth.urlParams.goto\")) {\r\n                            window.location.href = decodeURIComponent(Configuration.globalData.auth.urlParams.goto);\r\n                            return false;\r\n                        }\r\n\r\n                        if (Configuration.gotoURL && _.indexOf([\"#\",\"\",\"#/\",\"/#\"], Configuration.gotoURL) === -1) {\r\n                            Router.navigate(Configuration.gotoURL, {trigger: true});\r\n                            delete Configuration.gotoURL;\r\n                        } else if (Router.checkRole(Router.configuration.routes[\"default\"])) {\r\n                            EventManager.sendEvent(Constants.ROUTE_REQUEST, {routeName: \"default\", args: []});\r\n                        } else {\r\n                            EventManager.sendEvent(Constants.EVENT_UNAUTHORIZED);\r\n                            return;\r\n                        }\r\n                    } else if (ViewManager.currentDialog !== null) {\r\n                        ModuleLoader.load(ViewManager.currentDialog).then(function (dialog) {\r\n                            dialog.close();\r\n                        });\r\n                    } else if (typeof $.prototype.modal === \"function\") {\r\n                        $(\".modal.in\").modal(\"hide\");\r\n                        // There are some cases, when user is presented with login modal panel,\r\n                        // rather than a normal login view. backgroundLogin property is used to\r\n                        // indicate such cases. It should be deleted afterwards for correct\r\n                        // display of the login view later\r\n                        delete Configuration.backgroundLogin;\r\n                    }\r\n\r\n                    promise.resolve(user);\r\n\r\n                }, function (reason) {\r\n\r\n                    if (_.has(Configuration, \"globalData.auth.urlParams.gotoOnFail\")) {\r\n                        window.location.href = Configuration.globalData.auth.urlParams.gotoOnFail;\r\n                        return false;\r\n                    }\r\n\r\n                    reason = reason ? reason : \"authenticationFailed\";\r\n                    EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, reason);\r\n\r\n                    if (event.failureCallback) {\r\n                        event.failureCallback(reason);\r\n                    }\r\n\r\n                    promise.reject(reason);\r\n\r\n                });\r\n\r\n                return promise;\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_SHOW_LOGIN_DIALOG,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/Configuration\",\r\n                \"LoginDialog\",\r\n                \"org/forgerock/commons/ui/common/util/Queue\"\r\n            ],\r\n            processDescription: function(event, Configuration, LoginDialog, Queue) {\r\n                var queueName = \"loginDialogAuthCallbacks\";\r\n                if (!Configuration.globalData[queueName]) {\r\n                    Configuration.globalData[queueName] = new Queue();\r\n                }\r\n                // only render the LoginDialog if it has an empty callback queue\r\n                if (!Configuration.globalData[queueName].peek()) {\r\n                    LoginDialog.render({\r\n                        authenticatedCallback: function () {\r\n                            var callback = Configuration.globalData[queueName].remove();\r\n                            while (callback) {\r\n                                callback();\r\n                                callback = Configuration.globalData[queueName].remove();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                if (event.authenticatedCallback) {\r\n                    Configuration.globalData[queueName].add(event.authenticatedCallback);\r\n                }\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_LOGOUT,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/common/main/Router\",\r\n                \"org/forgerock/commons/ui/common/main/Configuration\",\r\n                \"org/forgerock/commons/ui/common/main/SessionManager\"\r\n            ],\r\n            processDescription: function(event, router, conf, sessionManager) {\r\n                return sessionManager.logout(function() {\r\n                    EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"loggedOut\");\r\n                    EventManager.sendEvent(Constants.EVENT_AUTHENTICATION_DATA_CHANGED, { anonymousMode: true});\r\n                    return EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\r\n                        route: router.configuration.routes.login\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_SELECT_KBA_QUESTION,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/user/anonymousProcess/KBAView\"\r\n            ],\r\n            processDescription: function(event, KBAView) {\r\n                KBAView.changeQuestion();\r\n            }\r\n        },\r\n        {\r\n            startEvent: Constants.EVENT_DELETE_KBA_QUESTION,\r\n            description: \"\",\r\n            dependencies: [\r\n                \"org/forgerock/commons/ui/user/anonymousProcess/KBAView\"\r\n            ],\r\n            processDescription: function(event, KBAView) {\r\n                KBAView.deleteQuestion(event.viewId);\r\n            }\r\n        }];\r\n    return obj;\r\n});"]}