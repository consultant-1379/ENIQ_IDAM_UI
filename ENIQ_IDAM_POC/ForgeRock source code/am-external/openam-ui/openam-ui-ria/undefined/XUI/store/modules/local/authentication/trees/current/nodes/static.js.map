{"version":3,"sources":["../../../../../../../../XUI/store/modules/local/authentication/trees/current/nodes/static.jsm"],"names":["isStaticNodeType","failure","start","success","FAILURE_NODE_ID","FAILURE_NODE_TYPE","START_NODE_TYPE","SUCCESS_NODE_ID","SUCCESS_NODE_TYPE","type","displayName","connections","_outcomes","nodeType","entryNodeId","outcome","id"],"mappings":";;;;;;;YAwBgBA,gB,GAAAA,gB;YAIAC,O,GAAAA,O;YAWAC,K,GAAAA,K;YAgBAC,O,GAAAA,O;;;;;;;;;;;;;;;;;AArCT,QAAMC,4CAAkB,sCAAxB;AACA,QAAMC,gDAAoB,iBAA1B;AACA,QAAMC,4CAAkB,eAAxB;AACA,QAAMC,4CAAkB,sCAAxB;AACA,QAAMC,gDAAoB,iBAA1B;;AAEA,aAASR,gBAAT,CAA2BS,IAA3B,EAAiC;AACpC,eAAOA,SAASJ,iBAAT,IAA8BI,SAASD,iBAAvC,IAA4DC,SAASH,eAA5E;AACH;;AAEM,aAASL,OAAT,GAAoB;AACvB,mCACKG,eADL,EACuB;AACfM,yBAAa,gBAAE,uDAAF,CADE;AAEfC,yBAAa,EAFE;AAGfC,uBAAW,EAHI;AAIfC,sBAAUR;AAJK,SADvB;AAQH;;AAEM,aAASH,KAAT,CAAgBY,WAAhB,EAA6B;AAChC,eAAO;AACH,yBAAa;AACTJ,6BAAa,gBAAE,qDAAF,CADJ;AAETC,6BAAa;AACTI,6BAASD;AADA,iBAFJ;AAKTF,2BAAW,CAAC;AACRI,wBAAI,SADI;AAERN,iCAAa;AAFL,iBAAD,CALF;AASTG,0BAAUP;AATD;AADV,SAAP;AAaH;;AAEM,aAASH,OAAT,GAAoB;AACvB,mCACKI,eADL,EACuB;AACfG,yBAAa,gBAAE,uDAAF,CADE;AAEfC,yBAAa,EAFE;AAGfC,uBAAW,EAHI;AAIfC,sBAAUL;AAJK,SADvB;AAQH","file":"static.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { t } from \"i18next\";\n\nexport const FAILURE_NODE_ID = \"e301438c-0bd0-429c-ab0c-66126501069a\";\nexport const FAILURE_NODE_TYPE = \"failureNodeType\";\nexport const START_NODE_TYPE = \"startNodeType\";\nexport const SUCCESS_NODE_ID = \"70e691a5-1e33-4ac3-a356-e7b6d60d92e0\";\nexport const SUCCESS_NODE_TYPE = \"successNodeType\";\n\nexport function isStaticNodeType (type) {\n    return type === FAILURE_NODE_TYPE || type === SUCCESS_NODE_TYPE || type === START_NODE_TYPE;\n}\n\nexport function failure () {\n    return {\n        [FAILURE_NODE_ID]: {\n            displayName: t(\"console.authentication.trees.edit.nodes.failure.title\"),\n            connections: {},\n            _outcomes: [],\n            nodeType: FAILURE_NODE_TYPE\n        }\n    };\n}\n\nexport function start (entryNodeId) {\n    return {\n        \"startNode\": {\n            displayName: t(\"console.authentication.trees.edit.nodes.start.title\"),\n            connections: {\n                outcome: entryNodeId\n            },\n            _outcomes: [{\n                id: \"outcome\",\n                displayName: \"Outcome\"\n            }],\n            nodeType: START_NODE_TYPE\n        }\n    };\n}\n\nexport function success () {\n    return {\n        [SUCCESS_NODE_ID]: {\n            displayName: t(\"console.authentication.trees.edit.nodes.success.title\"),\n            connections: {},\n            _outcomes: [],\n            nodeType: SUCCESS_NODE_TYPE\n        }\n    };\n}\n"]}