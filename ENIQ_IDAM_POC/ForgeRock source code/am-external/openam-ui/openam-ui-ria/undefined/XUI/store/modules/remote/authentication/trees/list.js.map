{"version":3,"sources":["../../../../../../XUI/store/modules/remote/authentication/trees/list.jsm"],"names":["ADD_OR_UPDATE","REMOVE","SET","addOrUpdate","remove","set","initialState","state","action","payload","_id","instance","map","tree","indexBy","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;AACA,QAAMA,gBAAgB,gDAAtB;AACA,QAAMC,SAAS,yCAAf;AACA,QAAMC,MAAM,sCAAZ;;AAEA;AACO,QAAMC,oCAAc,gCAAaH,aAAb,CAApB;AACA,QAAMI,0BAAS,gCAAaH,MAAb,CAAf;AACA,QAAMI,oBAAM,gCAAaH,GAAb,CAAZ;;AAEP;AACA,QAAMI,eAAe,EAArB;sBACe,uFACVN,aADU,EACM,UAACO,KAAD,EAAQC,MAAR;AAAA,4BACVD,KADU,sBAEZC,OAAOC,OAAP,CAAeC,GAFH,EAES,kBAAKF,OAAOC,OAAZ,EAAqB,OAArB,CAFT;AAAA,KADN,mCAKVR,MALU,EAKD,UAACM,KAAD,EAAQC,MAAR;AAAA,eAAmB,kBAAKD,KAAL,EAAY,UAACI,QAAD;AAAA,mBAAcA,SAASD,GAAT,KAAiBF,OAAOC,OAAtC;AAAA,SAAZ,CAAnB;AAAA,KALC,mCAMVP,GANU,EAMJ,UAACK,KAAD,EAAQC,MAAR;AAAA,eACH,mBAAMA,OAAOC,OAAb,EACKG,GADL,CACS,UAACC,IAAD;AAAA,mBAAU,kBAAKA,IAAL,EAAW,OAAX,CAAV;AAAA,SADT,EAEKC,OAFL,CAEa,KAFb,EAGKC,KAHL,EADG;AAAA,KANI,oBAWZT,YAXY,C","file":"list.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { chain, omit } from \"lodash\";\n\n// Types\nconst ADD_OR_UPDATE = \"remote/authentication/trees/list/ADD_OR_UPDATE\";\nconst REMOVE = \"remote/authentication/trees/list/REMOVE\";\nconst SET = \"remote/authentication/trees/list/SET\";\n\n// Actions\nexport const addOrUpdate = createAction(ADD_OR_UPDATE);\nexport const remove = createAction(REMOVE);\nexport const set = createAction(SET);\n\n// Reducer\nconst initialState = {};\nexport default handleActions({\n    [ADD_OR_UPDATE]: (state, action) => ({\n        ...state,\n        [action.payload._id]: omit(action.payload, \"nodes\")\n    }),\n    [REMOVE]: (state, action) => omit(state, (instance) => instance._id === action.payload),\n    [SET]: (state, action) =>\n        chain(action.payload)\n            .map((tree) => omit(tree, \"nodes\"))\n            .indexBy(\"_id\")\n            .value()\n}, initialState);\n"]}