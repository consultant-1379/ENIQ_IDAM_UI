{"version":3,"sources":["../../../../../../XUI/css/bootstrap-3.3.5-custom/js/tests/unit/dropdown.js"],"names":["$","QUnit","module","test","assert","expect","ok","document","body","dropdown","beforeEach","fn","bootstrapDropdown","noConflict","afterEach","strictEqual","undefined","$el","$dropdown","dropdownHTML","find","trigger","parent","hasClass","attr","done","async","appendTo","on","$dropdowns","$first","first","$last","last","length","parents","$input","$textarea","Event","which","activeElement","is"],"mappings":";;AAAAA,EAAE,YAAY;AACZ;;AAEAC,QAAMC,MAAN,CAAa,kBAAb;;AAEAD,QAAME,IAAN,CAAW,oCAAX,EAAiD,UAAUC,MAAV,EAAkB;AACjEA,WAAOC,MAAP,CAAc,CAAd;AACAD,WAAOE,EAAP,CAAUN,EAAEO,SAASC,IAAX,EAAiBC,QAA3B,EAAqC,4BAArC;AACD,GAHD;;AAKAR,QAAMC,MAAN,CAAa,WAAb,EAA0B;AACxBQ,gBAAY,sBAAY;AACtB;AACAV,QAAEW,EAAF,CAAKC,iBAAL,GAAyBZ,EAAEW,EAAF,CAAKF,QAAL,CAAcI,UAAd,EAAzB;AACD,KAJuB;AAKxBC,eAAW,qBAAY;AACrBd,QAAEW,EAAF,CAAKF,QAAL,GAAgBT,EAAEW,EAAF,CAAKC,iBAArB;AACA,aAAOZ,EAAEW,EAAF,CAAKC,iBAAZ;AACD;AARuB,GAA1B;;AAWAX,QAAME,IAAN,CAAW,4BAAX,EAAyC,UAAUC,MAAV,EAAkB;AACzDA,WAAOC,MAAP,CAAc,CAAd;AACAD,WAAOW,WAAP,CAAmBf,EAAEW,EAAF,CAAKF,QAAxB,EAAkCO,SAAlC,EAA6C,gDAA7C;AACD,GAHD;;AAKAf,QAAME,IAAN,CAAW,wDAAX,EAAqE,UAAUC,MAAV,EAAkB;AACrFA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIY,MAAMjB,EAAE,QAAF,CAAV;AACA,QAAIkB,YAAYD,IAAIL,iBAAJ,EAAhB;AACAR,WAAOE,EAAP,CAAUY,qBAAqBlB,CAA/B,EAAkC,2BAAlC;AACAI,WAAOW,WAAP,CAAmBG,UAAU,CAAV,CAAnB,EAAiCD,IAAI,CAAJ,CAAjC,EAAyC,6BAAzC;AACD,GAND;;AAQAhB,QAAME,IAAN,CAAW,8DAAX,EAA2E,UAAUC,MAAV,EAAkB;AAC3FA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,sBACb,uBADa,GAEb,gGAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,OARa,GASb,OATa,GAUb,OAVN;AAWA,QAAID,YAAYlB,EAAEmB,YAAF,EAAgBC,IAAhB,CAAqB,0BAArB,EAAiDR,iBAAjD,GAAqES,OAArE,CAA6E,OAA7E,CAAhB;;AAEAjB,WAAOE,EAAP,CAAU,CAACY,UAAUI,MAAV,CAAiB,WAAjB,EAA8BC,QAA9B,CAAuC,MAAvC,CAAX,EAA2D,6BAA3D;AACD,GAhBD;;AAkBAtB,QAAME,IAAN,CAAW,uEAAX,EAAoF,UAAUC,MAAV,EAAkB;AACpGA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,sBACb,uBADa,GAEb,+FAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,OARa,GASb,OATa,GAUb,OAVN;AAWA,QAAID,YAAYlB,EAAEmB,YAAF,EACbC,IADa,CACR,0BADQ,EAEbR,iBAFa,GAGbS,OAHa,CAGL,OAHK,CAAhB;;AAKAjB,WAAOW,WAAP,CAAmBG,UAAUM,IAAV,CAAe,eAAf,CAAnB,EAAoD,MAApD,EAA4D,gDAA5D;AACD,GAnBD;;AAqBAvB,QAAME,IAAN,CAAW,yEAAX,EAAsF,UAAUC,MAAV,EAAkB;AACtGA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIoB,OAAOrB,OAAOsB,KAAP,EAAX;AACA,QAAIP,eAAe,sBACb,uBADa,GAEb,+FAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,OARa,GASb,OATa,GAUb,OAVN;AAWA,QAAID,YAAYlB,EAAEmB,YAAF,EACbQ,QADa,CACJ,gBADI,EAEbP,IAFa,CAER,0BAFQ,EAGbR,iBAHa,EAAhB;;AAKAM,cACGI,MADH,CACU,WADV,EAEGM,EAFH,CAEM,oBAFN,EAE4B,YAAY;AACpCxB,aAAOW,WAAP,CAAmBG,UAAUM,IAAV,CAAe,eAAf,CAAnB,EAAoD,OAApD,EAA6D,gDAA7D;AACAC;AACD,KALH;;AAOAP,cAAUG,OAAV,CAAkB,OAAlB;AACArB,MAAEO,SAASC,IAAX,EAAiBa,OAAjB,CAAyB,OAAzB;AACD,GA5BD;;AA8BApB,QAAME,IAAN,CAAW,0DAAX,EAAuE,UAAUC,MAAV,EAAkB;AACvFA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,sBACb,uBADa,GAEb,gGAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,OARa,GASb,OATa,GAUb,OAVN;AAWA,QAAID,YAAYlB,EAAEmB,YAAF,EAAgBC,IAAhB,CAAqB,0BAArB,EAAiDR,iBAAjD,GAAqES,OAArE,CAA6E,OAA7E,CAAhB;;AAEAjB,WAAOE,EAAP,CAAU,CAACY,UAAUI,MAAV,CAAiB,WAAjB,EAA8BC,QAA9B,CAAuC,MAAvC,CAAX,EAA2D,6BAA3D;AACD,GAhBD;;AAkBAtB,QAAME,IAAN,CAAW,0CAAX,EAAuD,UAAUC,MAAV,EAAkB;AACvEA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,sBACb,uBADa,GAEb,yEAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,OARa,GASb,OATa,GAUb,OAVN;AAWA,QAAID,YAAYlB,EAAEmB,YAAF,EAAgBC,IAAhB,CAAqB,0BAArB,EAAiDR,iBAAjD,GAAqES,OAArE,CAA6E,OAA7E,CAAhB;;AAEAjB,WAAOE,EAAP,CAAUY,UAAUI,MAAV,CAAiB,WAAjB,EAA8BC,QAA9B,CAAuC,MAAvC,CAAV,EAA0D,6BAA1D;AACD,GAhBD;;AAkBAtB,QAAME,IAAN,CAAW,iEAAX,EAA8E,UAAUC,MAAV,EAAkB;AAC9FA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,sBACb,uBADa,GAEb,6EAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,OARa,GASb,OATa,GAUb,OAVN;AAWA,QAAID,YAAYlB,EAAEmB,YAAF,EAAgBC,IAAhB,CAAqB,0BAArB,EAAiDR,iBAAjD,GAAqES,OAArE,CAA6E,OAA7E,CAAhB;;AAEAjB,WAAOE,EAAP,CAAUY,UAAUI,MAAV,CAAiB,WAAjB,EAA8BC,QAA9B,CAAuC,MAAvC,CAAV,EAA0D,6BAA1D;AACD,GAhBD;;AAmBAtB,QAAME,IAAN,CAAW,+CAAX,EAA4D,UAAUC,MAAV,EAAkB;AAC5EA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,sBACb,uBADa,GAEb,yEAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,OARa,GASb,OATa,GAUb,OAVN;AAWA,QAAID,YAAYlB,EAAEmB,YAAF,EACbQ,QADa,CACJ,gBADI,EAEbP,IAFa,CAER,0BAFQ,EAGbR,iBAHa,GAIbS,OAJa,CAIL,OAJK,CAAhB;;AAMAjB,WAAOE,EAAP,CAAUY,UAAUI,MAAV,CAAiB,WAAjB,EAA8BC,QAA9B,CAAuC,MAAvC,CAAV,EAA0D,6BAA1D;AACAvB,MAAEO,SAASC,IAAX,EAAiBa,OAAjB,CAAyB,OAAzB;AACAjB,WAAOE,EAAP,CAAU,CAACY,UAAUI,MAAV,CAAiB,WAAjB,EAA8BC,QAA9B,CAAuC,MAAvC,CAAX,EAA2D,sBAA3D;AACD,GAtBD;;AAwBAtB,QAAME,IAAN,CAAW,wEAAX,EAAqF,UAAUC,MAAV,EAAkB;AACrGA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,qBACb,sCADa,GAEb,qCAFa,GAGb,wGAHa,GAIb,4BAJa,GAKb,wCALa,GAMb,OANa,GAOb,OAPa,GAQb,OARa,GASb,yBATa,GAUb,sCAVa,GAWb,2FAXa,GAYb,4BAZa,GAab,mCAba,GAcb,OAda,GAeb,QAfN;AAgBA,QAAIU,aAAa7B,EAAEmB,YAAF,EAAgBQ,QAAhB,CAAyB,gBAAzB,EAA2CP,IAA3C,CAAgD,0BAAhD,CAAjB;AACA,QAAIU,SAASD,WAAWE,KAAX,EAAb;AACA,QAAIC,QAAQH,WAAWI,IAAX,EAAZ;;AAEA7B,WAAOW,WAAP,CAAmBc,WAAWK,MAA9B,EAAsC,CAAtC,EAAyC,eAAzC;;AAEAJ,WAAOT,OAAP,CAAe,OAAf;AACAjB,WAAOW,WAAP,CAAmBe,OAAOK,OAAP,CAAe,OAAf,EAAwBD,MAA3C,EAAmD,CAAnD,EAAsD,6BAAtD;AACA9B,WAAOW,WAAP,CAAmBf,EAAE,sBAAF,EAA0BkC,MAA7C,EAAqD,CAArD,EAAwD,2BAAxD;AACAlC,MAAEO,SAASC,IAAX,EAAiBa,OAAjB,CAAyB,OAAzB;AACAjB,WAAOW,WAAP,CAAmBf,EAAE,sBAAF,EAA0BkC,MAA7C,EAAqD,CAArD,EAAwD,sBAAxD;;AAEAF,UAAMX,OAAN,CAAc,OAAd;AACAjB,WAAOW,WAAP,CAAmBiB,MAAMV,MAAN,CAAa,OAAb,EAAsBY,MAAzC,EAAiD,CAAjD,EAAoD,6BAApD;AACA9B,WAAOW,WAAP,CAAmBf,EAAE,sBAAF,EAA0BkC,MAA7C,EAAqD,CAArD,EAAwD,2BAAxD;AACAlC,MAAEO,SAASC,IAAX,EAAiBa,OAAjB,CAAyB,OAAzB;AACAjB,WAAOW,WAAP,CAAmBf,EAAE,sBAAF,EAA0BkC,MAA7C,EAAqD,CAArD,EAAwD,sBAAxD;AACD,GAnCD;;AAqCAjC,QAAME,IAAN,CAAW,iCAAX,EAA8C,UAAUC,MAAV,EAAkB;AAC9DA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,sBACb,uBADa,GAEb,yEAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,OARa,GASb,OATa,GAUb,OAVN;AAWA,QAAID,YAAYlB,EAAEmB,YAAF,EACbQ,QADa,CACJ,gBADI,EAEbP,IAFa,CAER,0BAFQ,EAGbR,iBAHa,EAAhB;;AAKA,QAAIa,OAAOrB,OAAOsB,KAAP,EAAX;;AAEAR,cACGI,MADH,CACU,WADV,EAEGM,EAFH,CAEM,kBAFN,EAE0B,YAAY;AAClCxB,aAAOE,EAAP,CAAU,IAAV,EAAgB,gBAAhB;AACD,KAJH,EAKGsB,EALH,CAKM,kBALN,EAK0B,YAAY;AAClCxB,aAAOE,EAAP,CAAU,IAAV,EAAgB,gBAAhB;AACAmB;AACD,KARH;;AAUAP,cAAUG,OAAV,CAAkB,OAAlB;AACArB,MAAEO,SAASC,IAAX,EAAiBa,OAAjB,CAAyB,OAAzB;AACD,GAhCD;;AAmCApB,QAAME,IAAN,CAAW,oCAAX,EAAiD,UAAUC,MAAV,EAAkB;AACjEA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,sBACb,uBADa,GAEb,yEAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,OARa,GASb,OATa,GAUb,OAVN;AAWA,QAAID,YAAYlB,EAAEmB,YAAF,EACbQ,QADa,CACJ,gBADI,EAEbP,IAFa,CAER,0BAFQ,EAGbR,iBAHa,EAAhB;;AAKA,QAAIa,OAAOrB,OAAOsB,KAAP,EAAX;;AAEAR,cACGI,MADH,CACU,WADV,EAEGM,EAFH,CAEM,mBAFN,EAE2B,YAAY;AACnCxB,aAAOE,EAAP,CAAU,IAAV,EAAgB,iBAAhB;AACD,KAJH,EAKGsB,EALH,CAKM,oBALN,EAK4B,YAAY;AACpCxB,aAAOE,EAAP,CAAU,IAAV,EAAgB,kBAAhB;AACAmB;AACD,KARH;;AAUAP,cAAUG,OAAV,CAAkB,OAAlB;AACArB,MAAEO,SAASC,IAAX,EAAiBa,OAAjB,CAAyB,OAAzB;AACD,GAhCD;;AAkCApB,QAAME,IAAN,CAAW,+DAAX,EAA4E,UAAUC,MAAV,EAAkB;AAC5FA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIoB,OAAOrB,OAAOsB,KAAP,EAAX;;AAEA,QAAIP,eAAe,sBACb,uBADa,GAEb,yEAFa,GAGb,4BAHa,GAIb,yCAJa,GAKb,8CALa,GAMb,uBANa,GAOb,uCAPa,GAQb,yCARa,GASb,oCATa,GAUb,OAVa,GAWb,OAXa,GAYb,OAZN;AAaA,QAAID,YAAYlB,EAAEmB,YAAF,EACbQ,QADa,CACJ,gBADI,EAEbP,IAFa,CAER,0BAFQ,EAGbR,iBAHa,EAAhB;;AAKA,QAAIwB,SAASpC,EAAE,QAAF,CAAb;AACA,QAAIqC,YAAYrC,EAAE,WAAF,CAAhB;;AAEAkB,cACGI,MADH,CACU,WADV,EAEGM,EAFH,CAEM,mBAFN,EAE2B,YAAY;AACnCxB,aAAOE,EAAP,CAAU,IAAV,EAAgB,iBAAhB;;AAEA8B,aAAOf,OAAP,CAAe,OAAf,EAAwBA,OAAxB,CAAgCrB,EAAEsC,KAAF,CAAQ,SAAR,EAAmB,EAAEC,OAAO,EAAT,EAAnB,CAAhC;AACAnC,aAAOE,EAAP,CAAUN,EAAEO,SAASiC,aAAX,EAA0BC,EAA1B,CAA6BL,MAA7B,CAAV,EAAgD,qBAAhD;;AAEAC,gBAAUhB,OAAV,CAAkB,OAAlB,EAA2BA,OAA3B,CAAmCrB,EAAEsC,KAAF,CAAQ,SAAR,EAAmB,EAAEC,OAAO,EAAT,EAAnB,CAAnC;AACAnC,aAAOE,EAAP,CAAUN,EAAEO,SAASiC,aAAX,EAA0BC,EAA1B,CAA6BJ,SAA7B,CAAV,EAAmD,wBAAnD;;AAEAZ;AACD,KAZH;;AAcAP,cAAUG,OAAV,CAAkB,OAAlB;AACD,GAxCD;;AA0CApB,QAAME,IAAN,CAAW,6DAAX,EAA0E,UAAUC,MAAV,EAAkB;AAC1FA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,sBACb,uBADa,GAEb,yEAFa,GAGb,4BAHa,GAIb,yDAJa,GAKb,uCALa,GAMb,OANa,GAOb,OAPa,GAQb,OARN;AASA,QAAID,YAAYlB,EAAEmB,YAAF,EACbQ,QADa,CACJ,gBADI,EAEbP,IAFa,CAER,0BAFQ,EAGbR,iBAHa,GAIbS,OAJa,CAIL,OAJK,CAAhB;;AAMAH,cAAUG,OAAV,CAAkBrB,EAAEsC,KAAF,CAAQ,SAAR,EAAmB,EAAEC,OAAO,EAAT,EAAnB,CAAlB;AACArB,cAAUG,OAAV,CAAkBrB,EAAEsC,KAAF,CAAQ,SAAR,EAAmB,EAAEC,OAAO,EAAT,EAAnB,CAAlB;;AAEAnC,WAAOE,EAAP,CAAU,CAACN,EAAEO,SAASiC,aAAX,EAA0BlB,MAA1B,GAAmCmB,EAAnC,CAAsC,WAAtC,CAAX,EAA+D,0BAA/D;AACD,GArBD;;AAuBAxC,QAAME,IAAN,CAAW,kEAAX,EAA+E,UAAUC,MAAV,EAAkB;AAC/FA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,4BACb,gEADa,GAEb,4BAFa,GAGb,+CAHa,GAIb,OAJa,GAKb,QALN;AAMA,QAAID,YAAYlB,EAAEmB,YAAF,EACbQ,QADa,CACJ,gBADI,EAEbP,IAFa,CAER,0BAFQ,EAGbR,iBAHa,GAIbS,OAJa,CAIL,OAJK,CAAhB;;AAMArB,MAAE,YAAF,EAAgBqB,OAAhB,CAAwB,OAAxB;;AAEAjB,WAAOE,EAAP,CAAUY,UAAUI,MAAV,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwC,MAAxC,CAAV,EAA2D,uBAA3D;AACD,GAjBD;;AAmBAtB,QAAME,IAAN,CAAW,gEAAX,EAA6E,UAAUC,MAAV,EAAkB;AAC7FA,WAAOC,MAAP,CAAc,CAAd;AACA,QAAIc,eAAe,4BACb,gEADa,GAEb,4BAFa,GAGb,8CAHa,GAIb,OAJa,GAKb,QALN;AAMA,QAAID,YAAYlB,EAAEmB,YAAF,EACbQ,QADa,CACJ,gBADI,EAEbP,IAFa,CAER,0BAFQ,EAGbR,iBAHa,GAIbS,OAJa,CAIL,OAJK,CAAhB;;AAMArB,MAAE,WAAF,EAAeqB,OAAf,CAAuB,OAAvB;;AAEAjB,WAAOE,EAAP,CAAUY,UAAUI,MAAV,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwC,MAAxC,CAAV,EAA2D,uBAA3D;AACD,GAjBD;AAkBD,CAtYD","file":"dropdown.js","sourcesContent":["$(function () {\n  'use strict';\n\n  QUnit.module('dropdowns plugin')\n\n  QUnit.test('should be defined on jquery object', function (assert) {\n    assert.expect(1)\n    assert.ok($(document.body).dropdown, 'dropdown method is defined')\n  })\n\n  QUnit.module('dropdowns', {\n    beforeEach: function () {\n      // Run all tests in noConflict mode -- it's the only way to ensure that the plugin works in noConflict mode\n      $.fn.bootstrapDropdown = $.fn.dropdown.noConflict()\n    },\n    afterEach: function () {\n      $.fn.dropdown = $.fn.bootstrapDropdown\n      delete $.fn.bootstrapDropdown\n    }\n  })\n\n  QUnit.test('should provide no conflict', function (assert) {\n    assert.expect(1)\n    assert.strictEqual($.fn.dropdown, undefined, 'dropdown was set back to undefined (org value)')\n  })\n\n  QUnit.test('should return jquery collection containing the element', function (assert) {\n    assert.expect(2)\n    var $el = $('<div/>')\n    var $dropdown = $el.bootstrapDropdown()\n    assert.ok($dropdown instanceof $, 'returns jquery collection')\n    assert.strictEqual($dropdown[0], $el[0], 'collection contains element')\n  })\n\n  QUnit.test('should not open dropdown if target is disabled via attribute', function (assert) {\n    assert.expect(1)\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<button disabled href=\"#\" class=\"btn dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</button>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML).find('[data-toggle=\"dropdown\"]').bootstrapDropdown().trigger('click')\n\n    assert.ok(!$dropdown.parent('.dropdown').hasClass('open'), '\"open\" class added on click')\n  })\n\n  QUnit.test('should set aria-expanded=\"true\" on target when dropdown menu is shown', function (assert) {\n    assert.expect(1)\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown</a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML)\n      .find('[data-toggle=\"dropdown\"]')\n      .bootstrapDropdown()\n      .trigger('click')\n\n    assert.strictEqual($dropdown.attr('aria-expanded'), 'true', 'aria-expanded is set to string \"true\" on click')\n  })\n\n  QUnit.test('should set aria-expanded=\"false\" on target when dropdown menu is hidden', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<a href=\"#\" class=\"dropdown-toggle\" aria-expanded=\"false\" data-toggle=\"dropdown\">Dropdown</a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML)\n      .appendTo('#qunit-fixture')\n      .find('[data-toggle=\"dropdown\"]')\n      .bootstrapDropdown()\n\n    $dropdown\n      .parent('.dropdown')\n      .on('hidden.bs.dropdown', function () {\n        assert.strictEqual($dropdown.attr('aria-expanded'), 'false', 'aria-expanded is set to string \"false\" on hide')\n        done()\n      })\n\n    $dropdown.trigger('click')\n    $(document.body).trigger('click')\n  })\n\n  QUnit.test('should not open dropdown if target is disabled via class', function (assert) {\n    assert.expect(1)\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<button href=\"#\" class=\"btn dropdown-toggle disabled\" data-toggle=\"dropdown\">Dropdown</button>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML).find('[data-toggle=\"dropdown\"]').bootstrapDropdown().trigger('click')\n\n    assert.ok(!$dropdown.parent('.dropdown').hasClass('open'), '\"open\" class added on click')\n  })\n\n  QUnit.test('should add class open to menu if clicked', function (assert) {\n    assert.expect(1)\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML).find('[data-toggle=\"dropdown\"]').bootstrapDropdown().trigger('click')\n\n    assert.ok($dropdown.parent('.dropdown').hasClass('open'), '\"open\" class added on click')\n  })\n\n  QUnit.test('should test if element has a # before assuming it\\'s a selector', function (assert) {\n    assert.expect(1)\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<a href=\"/foo/\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML).find('[data-toggle=\"dropdown\"]').bootstrapDropdown().trigger('click')\n\n    assert.ok($dropdown.parent('.dropdown').hasClass('open'), '\"open\" class added on click')\n  })\n\n\n  QUnit.test('should remove \"open\" class if body is clicked', function (assert) {\n    assert.expect(2)\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML)\n      .appendTo('#qunit-fixture')\n      .find('[data-toggle=\"dropdown\"]')\n      .bootstrapDropdown()\n      .trigger('click')\n\n    assert.ok($dropdown.parent('.dropdown').hasClass('open'), '\"open\" class added on click')\n    $(document.body).trigger('click')\n    assert.ok(!$dropdown.parent('.dropdown').hasClass('open'), '\"open\" class removed')\n  })\n\n  QUnit.test('should remove \"open\" class if body is clicked, with multiple dropdowns', function (assert) {\n    assert.expect(7)\n    var dropdownHTML = '<ul class=\"nav\">'\n        + '<li><a href=\"#menu1\">Menu 1</a></li>'\n        + '<li class=\"dropdown\" id=\"testmenu\">'\n        + '<a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#testmenu\">Test menu <span class=\"caret\"/></a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#sub1\">Submenu 1</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n        + '<div class=\"btn-group\">'\n        + '<button class=\"btn\">Actions</button>'\n        + '<button class=\"btn dropdown-toggle\" data-toggle=\"dropdown\"><span class=\"caret\"/></button>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Action 1</a></li>'\n        + '</ul>'\n        + '</div>'\n    var $dropdowns = $(dropdownHTML).appendTo('#qunit-fixture').find('[data-toggle=\"dropdown\"]')\n    var $first = $dropdowns.first()\n    var $last = $dropdowns.last()\n\n    assert.strictEqual($dropdowns.length, 2, 'two dropdowns')\n\n    $first.trigger('click')\n    assert.strictEqual($first.parents('.open').length, 1, '\"open\" class added on click')\n    assert.strictEqual($('#qunit-fixture .open').length, 1, 'only one dropdown is open')\n    $(document.body).trigger('click')\n    assert.strictEqual($('#qunit-fixture .open').length, 0, '\"open\" class removed')\n\n    $last.trigger('click')\n    assert.strictEqual($last.parent('.open').length, 1, '\"open\" class added on click')\n    assert.strictEqual($('#qunit-fixture .open').length, 1, 'only one dropdown is open')\n    $(document.body).trigger('click')\n    assert.strictEqual($('#qunit-fixture .open').length, 0, '\"open\" class removed')\n  })\n\n  QUnit.test('should fire show and hide event', function (assert) {\n    assert.expect(2)\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML)\n      .appendTo('#qunit-fixture')\n      .find('[data-toggle=\"dropdown\"]')\n      .bootstrapDropdown()\n\n    var done = assert.async()\n\n    $dropdown\n      .parent('.dropdown')\n      .on('show.bs.dropdown', function () {\n        assert.ok(true, 'show was fired')\n      })\n      .on('hide.bs.dropdown', function () {\n        assert.ok(true, 'hide was fired')\n        done()\n      })\n\n    $dropdown.trigger('click')\n    $(document.body).trigger('click')\n  })\n\n\n  QUnit.test('should fire shown and hidden event', function (assert) {\n    assert.expect(2)\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML)\n      .appendTo('#qunit-fixture')\n      .find('[data-toggle=\"dropdown\"]')\n      .bootstrapDropdown()\n\n    var done = assert.async()\n\n    $dropdown\n      .parent('.dropdown')\n      .on('shown.bs.dropdown', function () {\n        assert.ok(true, 'shown was fired')\n      })\n      .on('hidden.bs.dropdown', function () {\n        assert.ok(true, 'hidden was fired')\n        done()\n      })\n\n    $dropdown.trigger('click')\n    $(document.body).trigger('click')\n  })\n\n  QUnit.test('should ignore keyboard events within <input>s and <textarea>s', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><a href=\"#\">Secondary link</a></li>'\n        + '<li><a href=\"#\">Something else here</a></li>'\n        + '<li class=\"divider\"/>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '<li><input type=\"text\" id=\"input\"></li>'\n        + '<li><textarea id=\"textarea\"/></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML)\n      .appendTo('#qunit-fixture')\n      .find('[data-toggle=\"dropdown\"]')\n      .bootstrapDropdown()\n\n    var $input = $('#input')\n    var $textarea = $('#textarea')\n\n    $dropdown\n      .parent('.dropdown')\n      .on('shown.bs.dropdown', function () {\n        assert.ok(true, 'shown was fired')\n\n        $input.trigger('focus').trigger($.Event('keydown', { which: 38 }))\n        assert.ok($(document.activeElement).is($input), 'input still focused')\n\n        $textarea.trigger('focus').trigger($.Event('keydown', { which: 38 }))\n        assert.ok($(document.activeElement).is($textarea), 'textarea still focused')\n\n        done()\n      })\n\n    $dropdown.trigger('click')\n  })\n\n  QUnit.test('should skip disabled element when using keyboard navigation', function (assert) {\n    assert.expect(1)\n    var dropdownHTML = '<ul class=\"tabs\">'\n        + '<li class=\"dropdown\">'\n        + '<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li class=\"disabled\"><a href=\"#\">Disabled link</a></li>'\n        + '<li><a href=\"#\">Another link</a></li>'\n        + '</ul>'\n        + '</li>'\n        + '</ul>'\n    var $dropdown = $(dropdownHTML)\n      .appendTo('#qunit-fixture')\n      .find('[data-toggle=\"dropdown\"]')\n      .bootstrapDropdown()\n      .trigger('click')\n\n    $dropdown.trigger($.Event('keydown', { which: 40 }))\n    $dropdown.trigger($.Event('keydown', { which: 40 }))\n\n    assert.ok(!$(document.activeElement).parent().is('.disabled'), '.disabled is not focused')\n  })\n\n  QUnit.test('should not close the dropdown if the user clicks on a text field', function (assert) {\n    assert.expect(1)\n    var dropdownHTML = '<div class=\"btn-group\">'\n        + '<button type=\"button\" data-toggle=\"dropdown\">Dropdown</button>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><input id=\"textField\" type=\"text\" /></li>'\n        + '</ul>'\n        + '</div>'\n    var $dropdown = $(dropdownHTML)\n      .appendTo('#qunit-fixture')\n      .find('[data-toggle=\"dropdown\"]')\n      .bootstrapDropdown()\n      .trigger('click')\n\n    $('#textField').trigger('click')\n\n    assert.ok($dropdown.parent('.btn-group').hasClass('open'), 'dropdown menu is open')\n  })\n\n  QUnit.test('should not close the dropdown if the user clicks on a textarea', function (assert) {\n    assert.expect(1)\n    var dropdownHTML = '<div class=\"btn-group\">'\n        + '<button type=\"button\" data-toggle=\"dropdown\">Dropdown</button>'\n        + '<ul class=\"dropdown-menu\">'\n        + '<li><textarea id=\"textArea\"></textarea></li>'\n        + '</ul>'\n        + '</div>'\n    var $dropdown = $(dropdownHTML)\n      .appendTo('#qunit-fixture')\n      .find('[data-toggle=\"dropdown\"]')\n      .bootstrapDropdown()\n      .trigger('click')\n\n    $('#textArea').trigger('click')\n\n    assert.ok($dropdown.parent('.btn-group').hasClass('open'), 'dropdown menu is open')\n  })\n})\n"]}