{"version":3,"sources":["../../../../../../XUI/css/bootstrap-3.3.5-custom/js/tests/unit/modal.js"],"names":["$","QUnit","module","test","assert","expect","ok","document","body","modal","beforeEach","fn","bootstrapModal","noConflict","afterEach","strictEqual","undefined","$el","$modal","Constructor","DEFAULTS","done","async","on","notEqual","length","e","preventDefault","is","find","trigger","$div","Event","which","setTimeout","remove","triggered","one","$toggleBtn","appendTo","activeElement","$otherBtn","proxy","originalBodyPad","$body","css","currentBodyPad","parseInt","notStrictEqual","attr","removeAttr","$style","style","paddingRight","color"],"mappings":"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","file":"modal.js","sourcesContent":["$(function () {\n  'use strict';\n\n  QUnit.module('modal plugin')\n\n  QUnit.test('should be defined on jquery object', function (assert) {\n    assert.expect(1)\n    assert.ok($(document.body).modal, 'modal method is defined')\n  })\n\n  QUnit.module('modal', {\n    beforeEach: function () {\n      // Run all tests in noConflict mode -- it's the only way to ensure that the plugin works in noConflict mode\n      $.fn.bootstrapModal = $.fn.modal.noConflict()\n    },\n    afterEach: function () {\n      $.fn.modal = $.fn.bootstrapModal\n      delete $.fn.bootstrapModal\n    }\n  })\n\n  QUnit.test('should provide no conflict', function (assert) {\n    assert.expect(1)\n    assert.strictEqual($.fn.modal, undefined, 'modal was set back to undefined (orig value)')\n  })\n\n  QUnit.test('should return jquery collection containing the element', function (assert) {\n    assert.expect(2)\n    var $el = $('<div id=\"modal-test\"/>')\n    var $modal = $el.bootstrapModal()\n    assert.ok($modal instanceof $, 'returns jquery collection')\n    assert.strictEqual($modal[0], $el[0], 'collection contains element')\n  })\n\n  QUnit.test('should expose defaults var for settings', function (assert) {\n    assert.expect(1)\n    assert.ok($.fn.bootstrapModal.Constructor.DEFAULTS, 'default object exposed')\n  })\n\n  QUnit.test('should insert into dom when show method is called', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    $('<div id=\"modal-test\"/>')\n      .on('shown.bs.modal', function () {\n        assert.notEqual($('#modal-test').length, 0, 'modal inserted into dom')\n        done()\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should fire show event', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    $('<div id=\"modal-test\"/>')\n      .on('show.bs.modal', function () {\n        assert.ok(true, 'show event fired')\n        done()\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should not fire shown when show was prevented', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    $('<div id=\"modal-test\"/>')\n      .on('show.bs.modal', function (e) {\n        e.preventDefault()\n        assert.ok(true, 'show event fired')\n        done()\n      })\n      .on('shown.bs.modal', function () {\n        assert.ok(false, 'shown event fired')\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should hide modal when hide is called', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    $('<div id=\"modal-test\"/>')\n      .on('shown.bs.modal', function () {\n        assert.ok($('#modal-test').is(':visible'), 'modal visible')\n        assert.notEqual($('#modal-test').length, 0, 'modal inserted into dom')\n        $(this).bootstrapModal('hide')\n      })\n      .on('hidden.bs.modal', function () {\n        assert.ok(!$('#modal-test').is(':visible'), 'modal hidden')\n        done()\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should toggle when toggle is called', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    $('<div id=\"modal-test\"/>')\n      .on('shown.bs.modal', function () {\n        assert.ok($('#modal-test').is(':visible'), 'modal visible')\n        assert.notEqual($('#modal-test').length, 0, 'modal inserted into dom')\n        $(this).bootstrapModal('toggle')\n      })\n      .on('hidden.bs.modal', function () {\n        assert.ok(!$('#modal-test').is(':visible'), 'modal hidden')\n        done()\n      })\n      .bootstrapModal('toggle')\n  })\n\n  QUnit.test('should remove from dom when click [data-dismiss=\"modal\"]', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    $('<div id=\"modal-test\"><span class=\"close\" data-dismiss=\"modal\"/></div>')\n      .on('shown.bs.modal', function () {\n        assert.ok($('#modal-test').is(':visible'), 'modal visible')\n        assert.notEqual($('#modal-test').length, 0, 'modal inserted into dom')\n        $(this).find('.close').trigger('click')\n      })\n      .on('hidden.bs.modal', function () {\n        assert.ok(!$('#modal-test').is(':visible'), 'modal hidden')\n        done()\n      })\n      .bootstrapModal('toggle')\n  })\n\n  QUnit.test('should allow modal close with \"backdrop:false\"', function (assert) {\n    assert.expect(2)\n    var done = assert.async()\n\n    $('<div id=\"modal-test\" data-backdrop=\"false\"/>')\n      .on('shown.bs.modal', function () {\n        assert.ok($('#modal-test').is(':visible'), 'modal visible')\n        $(this).bootstrapModal('hide')\n      })\n      .on('hidden.bs.modal', function () {\n        assert.ok(!$('#modal-test').is(':visible'), 'modal hidden')\n        done()\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should close modal when clicking outside of modal-content', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    $('<div id=\"modal-test\"><div class=\"contents\"/></div>')\n      .on('shown.bs.modal', function () {\n        assert.notEqual($('#modal-test').length, 0, 'modal inserted into dom')\n        $('.contents').trigger('click')\n        assert.ok($('#modal-test').is(':visible'), 'modal visible')\n        $('#modal-test').trigger('click')\n      })\n      .on('hidden.bs.modal', function () {\n        assert.ok(!$('#modal-test').is(':visible'), 'modal hidden')\n        done()\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should close modal when escape key is pressed via keydown', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    var $div = $('<div id=\"modal-test\"/>')\n    $div\n      .on('shown.bs.modal', function () {\n        assert.ok($('#modal-test').length, 'modal insterted into dom')\n        assert.ok($('#modal-test').is(':visible'), 'modal visible')\n        $div.trigger($.Event('keydown', { which: 27 }))\n\n        setTimeout(function () {\n          assert.ok(!$('#modal-test').is(':visible'), 'modal hidden')\n          $div.remove()\n          done()\n        }, 0)\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should not close modal when escape key is pressed via keyup', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    var $div = $('<div id=\"modal-test\"/>')\n    $div\n      .on('shown.bs.modal', function () {\n        assert.ok($('#modal-test').length, 'modal inserted into dom')\n        assert.ok($('#modal-test').is(':visible'), 'modal visible')\n        $div.trigger($.Event('keyup', { which: 27 }))\n\n        setTimeout(function () {\n          assert.ok($div.is(':visible'), 'modal still visible')\n          $div.remove()\n          done()\n        }, 0)\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should trigger hide event once when clicking outside of modal-content', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var triggered\n\n    $('<div id=\"modal-test\"><div class=\"contents\"/></div>')\n      .on('shown.bs.modal', function () {\n        triggered = 0\n        $('#modal-test').trigger('click')\n      })\n      .on('hide.bs.modal', function () {\n        triggered += 1\n        assert.strictEqual(triggered, 1, 'modal hide triggered once')\n        done()\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should close reopened modal with [data-dismiss=\"modal\"] click', function (assert) {\n    assert.expect(2)\n    var done = assert.async()\n\n    $('<div id=\"modal-test\"><div class=\"contents\"><div id=\"close\" data-dismiss=\"modal\"/></div></div>')\n      .one('shown.bs.modal', function () {\n        $('#close').trigger('click')\n      })\n      .one('hidden.bs.modal', function () {\n        // after one open-close cycle\n        assert.ok(!$('#modal-test').is(':visible'), 'modal hidden')\n        $(this)\n          .one('shown.bs.modal', function () {\n            $('#close').trigger('click')\n          })\n          .one('hidden.bs.modal', function () {\n            assert.ok(!$('#modal-test').is(':visible'), 'modal hidden')\n            done()\n          })\n          .bootstrapModal('show')\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should restore focus to toggling element when modal is hidden after having been opened via data-api', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var $toggleBtn = $('<button data-toggle=\"modal\" data-target=\"#modal-test\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"modal-test\"><div class=\"contents\"><div id=\"close\" data-dismiss=\"modal\"/></div></div>')\n      .on('hidden.bs.modal', function () {\n        setTimeout(function () {\n          assert.ok($(document.activeElement).is($toggleBtn), 'toggling element is once again focused')\n          done()\n        }, 0)\n      })\n      .on('shown.bs.modal', function () {\n        $('#close').trigger('click')\n      })\n      .appendTo('#qunit-fixture')\n\n    $toggleBtn.trigger('click')\n  })\n\n  QUnit.test('should not restore focus to toggling element if the associated show event gets prevented', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n    var $toggleBtn = $('<button data-toggle=\"modal\" data-target=\"#modal-test\"/>').appendTo('#qunit-fixture')\n    var $otherBtn = $('<button id=\"other-btn\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"modal-test\"><div class=\"contents\"><div id=\"close\" data-dismiss=\"modal\"/></div>')\n      .one('show.bs.modal', function (e) {\n        e.preventDefault()\n        $otherBtn.trigger('focus')\n        setTimeout($.proxy(function () {\n          $(this).bootstrapModal('show')\n        }, this), 0)\n      })\n      .on('hidden.bs.modal', function () {\n        setTimeout(function () {\n          assert.ok($(document.activeElement).is($otherBtn), 'focus returned to toggling element')\n          done()\n        }, 0)\n      })\n      .on('shown.bs.modal', function () {\n        $('#close').trigger('click')\n      })\n      .appendTo('#qunit-fixture')\n\n    $toggleBtn.trigger('click')\n  })\n\n  QUnit.test('should restore inline body padding after closing', function (assert) {\n    assert.expect(2)\n    var done = assert.async()\n    var originalBodyPad = 0\n    var $body = $(document.body)\n\n    $body.css('padding-right', originalBodyPad)\n\n    $('<div id=\"modal-test\"/>')\n      .on('hidden.bs.modal', function () {\n        var currentBodyPad = parseInt($body.css('padding-right'), 10)\n        assert.notStrictEqual($body.attr('style'), '', 'body has non-empty style attribute')\n        assert.strictEqual(currentBodyPad, originalBodyPad, 'original body padding was not changed')\n        $body.removeAttr('style')\n        done()\n      })\n      .on('shown.bs.modal', function () {\n        $(this).bootstrapModal('hide')\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should ignore values set via CSS when trying to restore body padding after closing', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n    var $body = $(document.body)\n    var $style = $('<style>body { padding-right: 42px; }</style>').appendTo('head')\n\n    $('<div id=\"modal-test\"/>')\n      .on('hidden.bs.modal', function () {\n        assert.ok(!$body.attr('style'), 'body does not have inline padding set')\n        $style.remove()\n        done()\n      })\n      .on('shown.bs.modal', function () {\n        $(this).bootstrapModal('hide')\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should ignore other inline styles when trying to restore body padding after closing', function (assert) {\n    assert.expect(2)\n    var done = assert.async()\n    var $body = $(document.body)\n    var $style = $('<style>body { padding-right: 42px; }</style>').appendTo('head')\n\n    $body.css('color', 'red')\n\n    $('<div id=\"modal-test\"/>')\n      .on('hidden.bs.modal', function () {\n        assert.strictEqual($body[0].style.paddingRight, '', 'body does not have inline padding set')\n        assert.strictEqual($body[0].style.color, 'red', 'body still has other inline styles set')\n        $body.removeAttr('style')\n        $style.remove()\n        done()\n      })\n      .on('shown.bs.modal', function () {\n        $(this).bootstrapModal('hide')\n      })\n      .bootstrapModal('show')\n  })\n\n  QUnit.test('should properly restore non-pixel inline body padding after closing', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n    var $body = $(document.body)\n\n    $body.css('padding-right', '5%')\n\n    $('<div id=\"modal-test\"/>')\n      .on('hidden.bs.modal', function () {\n        assert.strictEqual($body[0].style.paddingRight, '5%', 'body does not have inline padding set')\n        $body.removeAttr('style')\n        done()\n      })\n      .on('shown.bs.modal', function () {\n        $(this).bootstrapModal('hide')\n      })\n      .bootstrapModal('show')\n  })\n})\n"]}