{"version":3,"sources":["../../../../../../XUI/css/bootstrap-3.3.5-custom/js/tests/unit/collapse.js"],"names":["$","QUnit","module","test","assert","expect","ok","document","body","collapse","beforeEach","fn","bootstrapCollapse","noConflict","afterEach","strictEqual","undefined","$el","$collapse","hasClass","attr","done","async","on","e","preventDefault","style","height","$target","appendTo","trigger","$alt","$test","setTimeout","accordionHTML","$groups","find","$target1","eq","$target2","$target3","showFired","$body2","toggleClass","data","transitioning"],"mappings":"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","file":"collapse.js","sourcesContent":["$(function () {\n  'use strict';\n\n  QUnit.module('collapse plugin')\n\n  QUnit.test('should be defined on jquery object', function (assert) {\n    assert.expect(1)\n    assert.ok($(document.body).collapse, 'collapse method is defined')\n  })\n\n  QUnit.module('collapse', {\n    beforeEach: function () {\n      // Run all tests in noConflict mode -- it's the only way to ensure that the plugin works in noConflict mode\n      $.fn.bootstrapCollapse = $.fn.collapse.noConflict()\n    },\n    afterEach: function () {\n      $.fn.collapse = $.fn.bootstrapCollapse\n      delete $.fn.bootstrapCollapse\n    }\n  })\n\n  QUnit.test('should provide no conflict', function (assert) {\n    assert.expect(1)\n    assert.strictEqual($.fn.collapse, undefined, 'collapse was set back to undefined (org value)')\n  })\n\n  QUnit.test('should return jquery collection containing the element', function (assert) {\n    assert.expect(2)\n    var $el = $('<div/>')\n    var $collapse = $el.bootstrapCollapse()\n    assert.ok($collapse instanceof $, 'returns jquery collection')\n    assert.strictEqual($collapse[0], $el[0], 'collection contains element')\n  })\n\n  QUnit.test('should show a collapsed element', function (assert) {\n    assert.expect(2)\n    var $el = $('<div class=\"collapse\"/>').bootstrapCollapse('show')\n\n    assert.ok($el.hasClass('in'), 'has class \"in\"')\n    assert.ok(!/height/i.test($el.attr('style')), 'has height reset')\n  })\n\n  QUnit.test('should hide a collapsed element', function (assert) {\n    assert.expect(1)\n    var $el = $('<div class=\"collapse\"/>').bootstrapCollapse('hide')\n\n    assert.ok(!$el.hasClass('in'), 'does not have class \"in\"')\n  })\n\n  QUnit.test('should not fire shown when show is prevented', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    $('<div class=\"collapse\"/>')\n      .on('show.bs.collapse', function (e) {\n        e.preventDefault()\n        assert.ok(true, 'show event fired')\n        done()\n      })\n      .on('shown.bs.collapse', function () {\n        assert.ok(false, 'shown event fired')\n      })\n      .bootstrapCollapse('show')\n  })\n\n  QUnit.test('should reset style to auto after finishing opening collapse', function (assert) {\n    assert.expect(2)\n    var done = assert.async()\n\n    $('<div class=\"collapse\" style=\"height: 0px\"/>')\n      .on('show.bs.collapse', function () {\n        assert.strictEqual(this.style.height, '0px', 'height is 0px')\n      })\n      .on('shown.bs.collapse', function () {\n        assert.strictEqual(this.style.height, '', 'height is auto')\n        done()\n      })\n      .bootstrapCollapse('show')\n  })\n\n  QUnit.test('should remove \"collapsed\" class from target when collapse is shown', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" class=\"collapsed\" href=\"#test1\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\"/>')\n      .appendTo('#qunit-fixture')\n      .on('shown.bs.collapse', function () {\n        assert.ok(!$target.hasClass('collapsed'), 'target does not have collapsed class')\n        done()\n      })\n\n    $target.trigger('click')\n  })\n\n  QUnit.test('should add \"collapsed\" class to target when collapse is hidden', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#test1\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\" class=\"in\"/>')\n      .appendTo('#qunit-fixture')\n      .on('hidden.bs.collapse', function () {\n        assert.ok($target.hasClass('collapsed'), 'target has collapsed class')\n        done()\n      })\n\n    $target.trigger('click')\n  })\n\n  QUnit.test('should remove \"collapsed\" class from all triggers targeting the collapse when the collapse is shown', function (assert) {\n    assert.expect(2)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" class=\"collapsed\" href=\"#test1\"/>').appendTo('#qunit-fixture')\n    var $alt = $('<a role=\"button\" data-toggle=\"collapse\" class=\"collapsed\" href=\"#test1\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\"/>')\n      .appendTo('#qunit-fixture')\n      .on('shown.bs.collapse', function () {\n        assert.ok(!$target.hasClass('collapsed'), 'target trigger does not have collapsed class')\n        assert.ok(!$alt.hasClass('collapsed'), 'alt trigger does not have collapsed class')\n        done()\n      })\n\n    $target.trigger('click')\n  })\n\n  QUnit.test('should add \"collapsed\" class to all triggers targeting the collapse when the collapse is hidden', function (assert) {\n    assert.expect(2)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#test1\"/>').appendTo('#qunit-fixture')\n    var $alt = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#test1\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\" class=\"in\"/>')\n      .appendTo('#qunit-fixture')\n      .on('hidden.bs.collapse', function () {\n        assert.ok($target.hasClass('collapsed'), 'target has collapsed class')\n        assert.ok($alt.hasClass('collapsed'), 'alt trigger has collapsed class')\n        done()\n      })\n\n    $target.trigger('click')\n  })\n\n  QUnit.test('should not close a collapse when initialized with \"show\" option if already shown', function (assert) {\n    assert.expect(0)\n    var done = assert.async()\n\n    var $test = $('<div id=\"test1\" class=\"in\"/>')\n      .appendTo('#qunit-fixture')\n      .on('hide.bs.collapse', function () {\n        assert.ok(false)\n      })\n\n    $test.bootstrapCollapse('show')\n\n    setTimeout(done, 0)\n  })\n\n  QUnit.test('should open a collapse when initialized with \"show\" option if not already shown', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var $test = $('<div id=\"test1\" />')\n      .appendTo('#qunit-fixture')\n      .on('show.bs.collapse', function () {\n        assert.ok(true)\n      })\n\n    $test.bootstrapCollapse('show')\n\n    setTimeout(done, 0)\n  })\n\n  QUnit.test('should not show a collapse when initialized with \"hide\" option if already hidden', function (assert) {\n    assert.expect(0)\n    var done = assert.async()\n\n    $('<div class=\"collapse\"></div>')\n      .appendTo('#qunit-fixture')\n      .on('show.bs.collapse', function () {\n        assert.ok(false, 'showing a previously-uninitialized hidden collapse when the \"hide\" method is called')\n      })\n      .bootstrapCollapse('hide')\n\n    setTimeout(done, 0)\n  })\n\n  QUnit.test('should hide a collapse when initialized with \"hide\" option if not already hidden', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    $('<div class=\"collapse in\"></div>')\n      .appendTo('#qunit-fixture')\n      .on('hide.bs.collapse', function () {\n        assert.ok(true, 'hiding a previously-uninitialized shown collapse when the \"hide\" method is called')\n      })\n      .bootstrapCollapse('hide')\n\n    setTimeout(done, 0)\n  })\n\n  QUnit.test('should remove \"collapsed\" class from active accordion target', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    var accordionHTML = '<div class=\"panel-group\" id=\"accordion\">'\n        + '<div class=\"panel\"/>'\n        + '<div class=\"panel\"/>'\n        + '<div class=\"panel\"/>'\n        + '</div>'\n    var $groups = $(accordionHTML).appendTo('#qunit-fixture').find('.panel')\n\n    var $target1 = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#body1\" data-parent=\"#accordion\"/>').appendTo($groups.eq(0))\n\n    $('<div id=\"body1\" class=\"in\"/>').appendTo($groups.eq(0))\n\n    var $target2 = $('<a class=\"collapsed\" data-toggle=\"collapse\" role=\"button\" href=\"#body2\" data-parent=\"#accordion\"/>').appendTo($groups.eq(1))\n\n    $('<div id=\"body2\"/>').appendTo($groups.eq(1))\n\n    var $target3 = $('<a class=\"collapsed\" data-toggle=\"collapse\" role=\"button\" href=\"#body3\" data-parent=\"#accordion\"/>').appendTo($groups.eq(2))\n\n    $('<div id=\"body3\"/>')\n      .appendTo($groups.eq(2))\n      .on('shown.bs.collapse', function () {\n        assert.ok($target1.hasClass('collapsed'), 'inactive target 1 does have class \"collapsed\"')\n        assert.ok($target2.hasClass('collapsed'), 'inactive target 2 does have class \"collapsed\"')\n        assert.ok(!$target3.hasClass('collapsed'), 'active target 3 does not have class \"collapsed\"')\n\n        done()\n      })\n\n    $target3.trigger('click')\n  })\n\n  QUnit.test('should allow dots in data-parent', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    var accordionHTML = '<div class=\"panel-group accordion\">'\n        + '<div class=\"panel\"/>'\n        + '<div class=\"panel\"/>'\n        + '<div class=\"panel\"/>'\n        + '</div>'\n    var $groups = $(accordionHTML).appendTo('#qunit-fixture').find('.panel')\n\n    var $target1 = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#body1\" data-parent=\".accordion\"/>').appendTo($groups.eq(0))\n\n    $('<div id=\"body1\" class=\"in\"/>').appendTo($groups.eq(0))\n\n    var $target2 = $('<a class=\"collapsed\" data-toggle=\"collapse\" role=\"button\" href=\"#body2\" data-parent=\".accordion\"/>').appendTo($groups.eq(1))\n\n    $('<div id=\"body2\"/>').appendTo($groups.eq(1))\n\n    var $target3 = $('<a class=\"collapsed\" data-toggle=\"collapse\" role=\"button\" href=\"#body3\" data-parent=\".accordion\"/>').appendTo($groups.eq(2))\n\n    $('<div id=\"body3\"/>')\n      .appendTo($groups.eq(2))\n      .on('shown.bs.collapse', function () {\n        assert.ok($target1.hasClass('collapsed'), 'inactive target 1 does have class \"collapsed\"')\n        assert.ok($target2.hasClass('collapsed'), 'inactive target 2 does have class \"collapsed\"')\n        assert.ok(!$target3.hasClass('collapsed'), 'active target 3 does not have class \"collapsed\"')\n\n        done()\n      })\n\n    $target3.trigger('click')\n  })\n\n  QUnit.test('should set aria-expanded=\"true\" on target when collapse is shown', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" class=\"collapsed\" href=\"#test1\" aria-expanded=\"false\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\"/>')\n      .appendTo('#qunit-fixture')\n      .on('shown.bs.collapse', function () {\n        assert.strictEqual($target.attr('aria-expanded'), 'true', 'aria-expanded on target is \"true\"')\n        done()\n      })\n\n    $target.trigger('click')\n  })\n\n  QUnit.test('should set aria-expanded=\"false\" on target when collapse is hidden', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#test1\" aria-expanded=\"true\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\" class=\"in\"/>')\n      .appendTo('#qunit-fixture')\n      .on('hidden.bs.collapse', function () {\n        assert.strictEqual($target.attr('aria-expanded'), 'false', 'aria-expanded on target is \"false\"')\n        done()\n      })\n\n    $target.trigger('click')\n  })\n\n  QUnit.test('should set aria-expanded=\"true\" on all triggers targeting the collapse when the collapse is shown', function (assert) {\n    assert.expect(2)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" class=\"collapsed\" href=\"#test1\" aria-expanded=\"false\"/>').appendTo('#qunit-fixture')\n    var $alt = $('<a role=\"button\" data-toggle=\"collapse\" class=\"collapsed\" href=\"#test1\" aria-expanded=\"false\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\"/>')\n      .appendTo('#qunit-fixture')\n      .on('shown.bs.collapse', function () {\n        assert.strictEqual($target.attr('aria-expanded'), 'true', 'aria-expanded on target is \"true\"')\n        assert.strictEqual($alt.attr('aria-expanded'), 'true', 'aria-expanded on alt is \"true\"')\n        done()\n      })\n\n    $target.trigger('click')\n  })\n\n  QUnit.test('should set aria-expanded=\"false\" on all triggers targeting the collapse when the collapse is hidden', function (assert) {\n    assert.expect(2)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#test1\" aria-expanded=\"true\"/>').appendTo('#qunit-fixture')\n    var $alt = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#test1\" aria-expanded=\"true\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\" class=\"in\"/>')\n      .appendTo('#qunit-fixture')\n      .on('hidden.bs.collapse', function () {\n        assert.strictEqual($target.attr('aria-expanded'), 'false', 'aria-expanded on target is \"false\"')\n        assert.strictEqual($alt.attr('aria-expanded'), 'false', 'aria-expanded on alt is \"false\"')\n        done()\n      })\n\n    $target.trigger('click')\n  })\n\n  QUnit.test('should change aria-expanded from active accordion target to \"false\" and set the newly active one to \"true\"', function (assert) {\n    assert.expect(3)\n    var done = assert.async()\n\n    var accordionHTML = '<div class=\"panel-group\" id=\"accordion\">'\n        + '<div class=\"panel\"/>'\n        + '<div class=\"panel\"/>'\n        + '<div class=\"panel\"/>'\n        + '</div>'\n    var $groups = $(accordionHTML).appendTo('#qunit-fixture').find('.panel')\n\n    var $target1 = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#body1\" data-parent=\"#accordion\"/>').appendTo($groups.eq(0))\n\n    $('<div id=\"body1\" aria-expanded=\"true\" class=\"in\"/>').appendTo($groups.eq(0))\n\n    var $target2 = $('<a class=\"collapsed\" data-toggle=\"collapse\" role=\"button\" href=\"#body2\" data-parent=\"#accordion\"/>').appendTo($groups.eq(1))\n\n    $('<div id=\"body2\" aria-expanded=\"false\"/>').appendTo($groups.eq(1))\n\n    var $target3 = $('<a class=\"collapsed\" data-toggle=\"collapse\" role=\"button\" href=\"#body3\" data-parent=\"#accordion\"/>').appendTo($groups.eq(2))\n\n    $('<div id=\"body3\" aria-expanded=\"false\"/>')\n      .appendTo($groups.eq(2))\n      .on('shown.bs.collapse', function () {\n        assert.strictEqual($target1.attr('aria-expanded'), 'false', 'inactive target 1 has aria-expanded=\"false\"')\n        assert.strictEqual($target2.attr('aria-expanded'), 'false', 'inactive target 2 has aria-expanded=\"false\"')\n        assert.strictEqual($target3.attr('aria-expanded'), 'true', 'active target 3 has aria-expanded=\"false\"')\n\n        done()\n      })\n\n    $target3.trigger('click')\n  })\n\n  QUnit.test('should not fire show event if show is prevented because other element is still transitioning', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var accordionHTML = '<div id=\"accordion\">'\n        + '<div class=\"panel\"/>'\n        + '<div class=\"panel\"/>'\n        + '</div>'\n    var showFired = false\n    var $groups   = $(accordionHTML).appendTo('#qunit-fixture').find('.panel')\n\n    var $target1 = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#body1\" data-parent=\"#accordion\"/>').appendTo($groups.eq(0))\n\n    $('<div id=\"body1\" class=\"collapse\"/>')\n      .appendTo($groups.eq(0))\n      .on('show.bs.collapse', function () {\n        showFired = true\n      })\n\n    var $target2 = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#body2\" data-parent=\"#accordion\"/>').appendTo($groups.eq(1))\n    var $body2   = $('<div id=\"body2\" class=\"collapse\"/>').appendTo($groups.eq(1))\n\n    $target2.trigger('click')\n\n    $body2\n      .toggleClass('in collapsing')\n      .data('bs.collapse').transitioning = 1\n\n    $target1.trigger('click')\n\n    setTimeout(function () {\n      assert.ok(!showFired, 'show event did not fire')\n      done()\n    }, 1)\n  })\n\n  QUnit.test('should add \"collapsed\" class to target when collapse is hidden via manual invocation', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" href=\"#test1\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\" class=\"in\"/>')\n      .appendTo('#qunit-fixture')\n      .on('hidden.bs.collapse', function () {\n        assert.ok($target.hasClass('collapsed'))\n        done()\n      })\n      .bootstrapCollapse('hide')\n  })\n\n  QUnit.test('should remove \"collapsed\" class from target when collapse is shown via manual invocation', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n\n    var $target = $('<a role=\"button\" data-toggle=\"collapse\" class=\"collapsed\" href=\"#test1\"/>').appendTo('#qunit-fixture')\n\n    $('<div id=\"test1\"/>')\n      .appendTo('#qunit-fixture')\n      .on('shown.bs.collapse', function () {\n        assert.ok(!$target.hasClass('collapsed'))\n        done()\n      })\n      .bootstrapCollapse('show')\n  })\n\n})\n"]}