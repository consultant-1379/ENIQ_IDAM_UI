{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/components/BootstrapDialogView.js"],"names":["define","$","_","AbstractView","ModuleLoader","UIUtils","BootstrapDialogView","extend","contentTemplate","data","noButtons","closable","actions","label","t","cssClass","type","show","callback","self","setButtons","when","load","loadContent","then","bind","BootstrapDialog","content","TYPE_DEFAULT","size","SIZE_NORMAL","message","append","promise","Deferred","undefined","fillTemplateWithData","template","resolve","setTitle","title","addButton","button","getButtons","buttons","push","find","a","length","each","i","action","dialog","close"],"mappings":"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","file":"BootstrapDialogView.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2015-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"underscore\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\r\n    \"org/forgerock/commons/ui/common/util/ModuleLoader\",\r\n    \"org/forgerock/commons/ui/common/util/UIUtils\"\r\n], function($, _, AbstractView, ModuleLoader, UIUtils) {\r\n    /**\r\n     * @exports org/forgerock/commons/ui/common/components/BootstrapDialogView\r\n     * @deprecated\r\n     */\r\n    var BootstrapDialogView = AbstractView.extend({\r\n        contentTemplate: \"templates/common/DefaultBaseTemplate.html\",\r\n        data: { },\r\n        noButtons: false,\r\n        closable : true,\r\n        actions: [{\r\n            label: function (){return $.t('common.form.close');},\r\n            cssClass: \"btn-default\",\r\n            type: \"close\"\r\n        }],\r\n\r\n        show: function(callback) {\r\n            var self = this;\r\n            self.setButtons();\r\n            $.when(ModuleLoader.load(\"org/forgerock/commons/ui/common/components/BootstrapDialog\"), self.loadContent())\r\n                .then(_.bind(function (BootstrapDialog, content) {\r\n                    self.type = self.type || BootstrapDialog.TYPE_DEFAULT;\r\n                    self.size = self.size || BootstrapDialog.SIZE_NORMAL;\r\n\r\n                    self.message = $(\"<div></div>\").append(content);\r\n                    BootstrapDialog.show(self);\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                }, this));\r\n        },\r\n\r\n        loadContent: function() {\r\n            var promise = $.Deferred();\r\n            if (this.message === undefined) {\r\n                UIUtils.fillTemplateWithData(this.contentTemplate, this.data, function(template) {\r\n                    promise.resolve(template);\r\n                });\r\n            } else {\r\n                promise.resolve(this.message);\r\n            }\r\n            return promise;\r\n        },\r\n\r\n        setTitle: function(title) {\r\n            this.title = title;\r\n        },\r\n\r\n        addButton: function(button){\r\n            if (!this.getButtons(button.label)){\r\n                this.buttons.push(button);\r\n            }\r\n        },\r\n\r\n        getButtons: function(label) {\r\n            return _.find(this.buttons, function(a) {\r\n                return a.label === label;\r\n            });\r\n        },\r\n\r\n        setButtons: function() {\r\n            var buttons = [];\r\n            if (this.noButtons) {\r\n                this.buttons = [];\r\n            } else if (this.actions !== undefined && this.actions.length !== 0){\r\n                $.each (this.actions, function(i, action){\r\n                    if (action.type === \"close\") {\r\n                        action.label = $.t('common.form.close');\r\n                        action.cssClass = (action.cssClass ? action.cssClass : \"btn-default\");\r\n                        action.action = function(dialog) {\r\n                            dialog.close();\r\n                        };\r\n                    }\r\n                    buttons.push(action);\r\n                });\r\n                this.buttons = buttons;\r\n            }\r\n        }\r\n    });\r\n\r\n    return BootstrapDialogView;\r\n});"]}