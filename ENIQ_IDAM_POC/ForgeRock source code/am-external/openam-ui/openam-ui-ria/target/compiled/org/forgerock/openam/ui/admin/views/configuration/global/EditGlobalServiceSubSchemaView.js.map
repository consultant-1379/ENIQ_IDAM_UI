{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/configuration/global/EditGlobalServiceSubSchemaView.js"],"names":["define","$","AbstractView","Router","ServicesService","Backlink","EditSchemaComponent","EditGlobalServiceSubSchemaView","extend","template","render","serviceType","subSchemaType","subSchemaInstanceId","showDeleteButton","editComponent","data","type","t","subSchema","headerActions","actionPartial","title","icon","listRoute","configuration","routes","editGlobalService","listRouteArgs","encodeURIComponent","subSchemaTemplate","getInstance","instance","get","updateInstance","values","update","deleteInstance","remove","getSubSchemaTypes","getAll","getSubSchemaCreatableTypes","getCreatables","getSubSchemaInstances","parentRender","$el","find","append"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,mDAFG,EAGH,6CAHG,EAIH,+DAJG,EAKH,qDALG,EAMH,uEANG,CAAP,EAOG,UAACC,CAAD,EAAIC,YAAJ,EAAkBC,MAAlB,EAA0BC,eAA1B,EAA2CC,QAA3C,EAAqDC,mBAArD,EAA6E;AAC5E,QAAMC,iCAAiCL,aAAaM,MAAb,CAAoB;AACvDC,kBAAU,8EAD6C;AAEvDC,cAFuD,wBAEI;AAAA;;AAAA;AAAA,gBAAlDC,WAAkD;AAAA,gBAArCC,aAAqC;AAAA,gBAAtBC,mBAAsB;;AACvD;AACA,gBAAMC,mBAAmB,SAAnBA,gBAAmB;AAAA,uBAAMH,gBAAgB,WAAtB;AAAA,aAAzB;;AAEA,gBAAMI,gBAAgB,IAAIT,mBAAJ,CAAwB;AAC1CU,sBAAM;AACFL,4CADE;AAEFC,gDAFE;AAGFC,4DAHE;AAIFI,0BAAMhB,EAAEiB,CAAF,CAAI,kCAAJ,EAAwC,EAAEC,WAAWP,aAAb,EAAxC,CAJJ;AAKFQ,mCAAeN,qBAAqB,CAChC,EAAEO,eAAe,cAAjB,EAAiCL,MAAM,QAAvC,EAAiDM,OAAO,oBAAxD,EAA8EC,MAAK,UAAnF,EADgC,CAArB,GAEX;AAPF,iBADoC;AAU1CC,2BAAWrB,OAAOsB,aAAP,CAAqBC,MAArB,CAA4BC,iBAVG;AAW1CC,+BAAe,CAACC,mBAAmBlB,WAAnB,CAAD,CAX2B;;AAa1CF,0BAAU,uEAbgC;AAc1CqB,mCAAmB,0EAduB;;AAgB1CC,6BAAa;AAAA,2BAAM3B,gBAAgBa,IAAhB,CAAqBE,SAArB,CAA+Ba,QAA/B,CAAwCC,GAAxC,CACftB,WADe,EACFC,aADE,EACaC,mBADb,CAAN;AAAA,iBAhB6B;AAkB1CqB,gCAAgB,wBAACC,MAAD;AAAA,2BAAY/B,gBAAgBa,IAAhB,CAAqBE,SAArB,CAA+Ba,QAA/B,CAAwCI,MAAxC,CACxBzB,WADwB,EACXC,aADW,EACIC,mBADJ,EACyBsB,MADzB,CAAZ;AAAA,iBAlB0B;AAoB1CE,gCAAgB;AAAA,2BAAMjC,gBAAgBa,IAAhB,CAAqBE,SAArB,CAA+Ba,QAA/B,CAAwCM,MAAxC,CAClB3B,WADkB,EACLC,aADK,EACUC,mBADV,CAAN;AAAA,iBApB0B;;AAuB1C0B,mCAAmB;AAAA,2BAAMnC,gBAAgBa,IAAhB,CAAqBE,SAArB,CAA+BF,IAA/B,CAAoCE,SAApC,CAA8CF,IAA9C,CAAmDuB,MAAnD,CACrB7B,WADqB,EACRC,aADQ,CAAN;AAAA,iBAvBuB;AAyB1C6B,4CAA4B;AAAA,2BAAMrC,gBAAgBa,IAAhB,CAAqBE,SAArB,CAA+BF,IAA/B,CAAoCE,SAApC,CAA8CF,IAA9C,CAAmDyB,aAAnD,CAC9B/B,WAD8B,EACjBC,aADiB,EACFC,mBADE,CAAN;AAAA,iBAzBc;AA2B1C8B,uCAAuB;AAAA,2BAAMvC,gBAAgBa,IAAhB,CAAqBE,SAArB,CAA+BF,IAA/B,CAAoCE,SAApC,CAA8Ca,QAA9C,CAAuDQ,MAAvD,CACzB7B,WADyB,EACZC,aADY,EACGC,mBADH,CAAN;AAAA;AA3BmB,aAAxB,CAAtB;;AA+BA,iBAAK+B,YAAL,CAAkB,YAAM;AACpB,oBAAIvC,QAAJ,GAAeK,MAAf,CAAsB,CAAtB;AACA,sBAAKmC,GAAL,CAASC,IAAT,CAAc,6BAAd,EAA6CC,MAA7C,CAAoDhC,cAAcL,MAAd,GAAuBmC,GAA3E;AACH,aAHD;AAIH;AAzCsD,KAApB,CAAvC;;AA4CA,WAAO,IAAItC,8BAAJ,EAAP;AACH,CArDD","file":"EditGlobalServiceSubSchemaView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/openam/ui/admin/services/global/ServicesService\",\n    \"org/forgerock/openam/ui/admin/views/common/Backlink\",\n    \"org/forgerock/openam/ui/admin/views/common/schema/EditSchemaComponent\"\n], ($, AbstractView, Router, ServicesService, Backlink, EditSchemaComponent) => {\n    const EditGlobalServiceSubSchemaView = AbstractView.extend({\n        template: \"templates/admin/views/configuration/EditGlobalConfigurationBaseTemplate.html\",\n        render ([serviceType, subSchemaType, subSchemaInstanceId]) {\n            // global script types can not be deleted\n            const showDeleteButton = () => serviceType !== \"scripting\";\n\n            const editComponent = new EditSchemaComponent({\n                data: {\n                    serviceType,\n                    subSchemaType,\n                    subSchemaInstanceId,\n                    type: $.t(\"console.services.subSchema.title\", { subSchema: subSchemaType }),\n                    headerActions: showDeleteButton() ? [\n                        { actionPartial: \"form/_Button\", data: \"delete\", title: \"common.form.delete\", icon:\"fa-times\" }\n                    ] : []\n                },\n                listRoute: Router.configuration.routes.editGlobalService,\n                listRouteArgs: [encodeURIComponent(serviceType)],\n\n                template: \"templates/admin/views/common/schema/EditServiceSubSchemaTemplate.html\",\n                subSchemaTemplate: \"templates/admin/views/configuration/global/SubSubSchemaListTemplate.html\",\n\n                getInstance: () => ServicesService.type.subSchema.instance.get(\n                    serviceType, subSchemaType, subSchemaInstanceId),\n                updateInstance: (values) => ServicesService.type.subSchema.instance.update(\n                    serviceType, subSchemaType, subSchemaInstanceId, values),\n                deleteInstance: () => ServicesService.type.subSchema.instance.remove(\n                    serviceType, subSchemaType, subSchemaInstanceId),\n\n                getSubSchemaTypes: () => ServicesService.type.subSchema.type.subSchema.type.getAll(\n                    serviceType, subSchemaType),\n                getSubSchemaCreatableTypes: () => ServicesService.type.subSchema.type.subSchema.type.getCreatables(\n                    serviceType, subSchemaType, subSchemaInstanceId),\n                getSubSchemaInstances: () => ServicesService.type.subSchema.type.subSchema.instance.getAll(\n                    serviceType, subSchemaType, subSchemaInstanceId)\n            });\n\n            this.parentRender(() => {\n                new Backlink().render(2);\n                this.$el.find(\"[data-global-configuration]\").append(editComponent.render().$el);\n            });\n        }\n    });\n\n    return new EditGlobalServiceSubSchemaView();\n});\n"]}