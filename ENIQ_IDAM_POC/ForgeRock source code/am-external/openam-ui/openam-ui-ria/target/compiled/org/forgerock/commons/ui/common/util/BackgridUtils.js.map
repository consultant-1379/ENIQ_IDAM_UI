{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/util/BackgridUtils.js"],"names":["define","$","_","Backgrid","DateUtil","UIUtils","AutoScroll","moment","dragula","obj","sortable","data","callback","start","dragDropInstance","containers","moves","el","container","handle","has","className","indexOf","handlesClassname","isUndefined","autoScroll","on","bind","clone","original","each","children","child","index","eq","css","find","startDrag","stop","tempCopy","rows","endDrag","splice","formatDate","date","returnDate","DateCell","dateProperty","_this","Cell","extend","render","model","get","$el","html","DatetimeAgoCell","formatter","fromRaw","rawData","fromNow","prototype","apply","attr","column","format","ButtonCell","buttons","renderCallback","events","button","href","delegateEvents","DisplayNameCell","displayProperty","text","addSmallScreenCell","cols","hideColumnLabels","smallScreenCell","filteredCols","reject","c","name","col","cellView","label","cellWrapper","isObject","cell","isEmpty","omit","length","append","prepend","newCol","editable","push","TemplateCell","fillTemplateWithData","template","attributes","additionalClassName","addClass","_onClick","e","onClick","id","ObjectCell","empty","object","result","prop","isString","JSON","stringify","ArrayCell","buildHtml","arrayVal","i","FilterHeaderCell","HeaderCell","preventSortOnClear","target","backgridAction","preventDefault","filter","Extension","ThemeableServerSideFilter","placeholder","t","collection","minimumSearchChars","addClassName","state","filters","__super__","ClickableRow","Row","sortKeys","order","sortKey","doubleSortFix","cid","filtered","set","pagedResultsOffset","currentPage","pageSize"],"mappings":"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","file":"BackgridUtils.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"lodash\",\r\n    \"org/forgerock/commons/ui/common/backgrid/Backgrid\",\r\n    \"org/forgerock/commons/ui/common/util/DateUtil\",\r\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\r\n    \"org/forgerock/commons/ui/common/util/AutoScroll\",\r\n    \"moment\",\r\n    \"dragula\",\r\n    \"org/forgerock/commons/ui/common/backgrid/extension/ThemeableServerSideFilter\"\r\n\r\n], function ($, _,\r\n             Backgrid,\r\n             DateUtil,\r\n             UIUtils,\r\n             AutoScroll,\r\n             moment,\r\n             dragula) {\r\n    /**\r\n     * @exports org/forgerock/commons/ui/common/util/BackgridUtils\r\n     */\r\n    var obj = {};\r\n\r\n    /**\r\n     * Makes the provided table drag and droppable\r\n     *\r\n     * @param {Object} data\r\n     * @param {array} data.containers - an array of container elements\r\n     * @params {array} data.rows - array of the rows in the table\r\n     * @params {string} data.handlesClassname - the classname of the handles a use must click on to drag, omit property\r\n     *                                          if the whole element should be selectable\r\n     * @params {boolean} data.autoScroll [true] - if the grid should auto scroll when a row is dragged out of bounds\r\n     * @param {Object} callback - called on row drop\r\n     *\r\n     * @returns {array} rows - The rows array in the new order\r\n     *\r\n     * @example\r\n     * BackgridUtils.sortable({\r\n     *   \"containers\": [$(\"#leftContainer\")[0], $(\"#rightContainer\")[0]],\r\n     *   \"rows\": _.clone(this.model.mappingProperties, true),\r\n     *   \"handlesClassName\": \"fa fa-arrows\"\r\n     * }, _.bind(this.setMappingProperties, this));\r\n     *\r\n     */\r\n    obj.sortable = function (data, callback) {\r\n        var start,\r\n            dragDropInstance = dragula(data.containers, {\r\n                moves: function (el, container, handle) {\r\n                    if (_.has(data, \"handlesClassname\")) {\r\n                        return handle.className.indexOf(data.handlesClassname) > -1;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n            });\r\n\r\n        if (_.isUndefined(data.autoScroll)) {\r\n            data.autoScroll = true;\r\n        }\r\n\r\n        dragDropInstance.on(\"cloned\", _.bind(function(clone, original) {\r\n            _.each(original.children, function(child, index) {\r\n                $(clone).children().eq(index).css(\"width\", $(child).css(\"width\"));\r\n                $(clone).children().eq(index).css(\"padding\", $(child).css(\"padding\"));\r\n            });\r\n        }, this));\r\n\r\n        dragDropInstance.on(\"drag\", _.bind(function(el, container) {\r\n            start = _.indexOf($(container).find(\"tr\"), el);\r\n\r\n            if (data.autoScroll) {\r\n                AutoScroll.startDrag();\r\n            }\r\n        }, this));\r\n\r\n        dragDropInstance.on(\"drop\", _.bind(function(el, container) {\r\n            var stop = _.indexOf($(container).find(\"tr\"), el),\r\n                tempCopy = data.rows[start];\r\n\r\n            if (data.autoScroll) {\r\n                AutoScroll.endDrag();\r\n            }\r\n\r\n            data.rows.splice(start, 1);\r\n            data.rows.splice(stop, 0, tempCopy);\r\n\r\n            if (callback) {\r\n                callback(data.rows);\r\n            }\r\n        }, this));\r\n    };\r\n\r\n    obj.formatDate = function (date) {\r\n        var returnDate = \"\";\r\n        if (date) {\r\n            returnDate = DateUtil.formatDate(date, \"MMM dd, yyyy\") +\r\n            \" <small class='text-muted'>\" +\r\n            DateUtil.formatDate(date, \"h:mm:ss TT\") +\r\n            \"</small>\";\r\n        }\r\n\r\n        return returnDate;\r\n    };\r\n\r\n    /**\r\n     * The date cell will search the model attributes for the provided property and format that into a standard date.\r\n     * @param {string} dateProperty TODO Add parameter description\r\n     * @returns {*} TODO Add returns description\r\n     */\r\n    obj.DateCell = function (dateProperty) {\r\n        var _this = this;\r\n        return Backgrid.Cell.extend({\r\n            render: function () {\r\n                if (this.model.get(dateProperty)) {\r\n                    this.$el.html(_this.formatDate(this.model.get(dateProperty)));\r\n                } else {\r\n                    this.$el.html(\"\");\r\n                }\r\n                return this;\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Datetime Ago Cell Renderer\r\n     * <p>\r\n     * Displays human friendly date time text (e.g. 4 \"hours ago\") with a tooltip of the exact time\r\n     */\r\n    obj.DatetimeAgoCell = Backgrid.Cell.extend({\r\n        className: \"date-time-ago-cell\",\r\n        formatter: {\r\n            fromRaw: function (rawData) {\r\n                return moment(rawData).fromNow();\r\n            }\r\n        },\r\n        render: function () {\r\n            Backgrid.Cell.prototype.render.apply(this);\r\n            this.$el.attr(\"title\", moment(this.model.get(this.column.get(\"name\"))).format(\"Do MMMM YYYY, h:mm:ssa\"));\r\n            return this;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * The button cell allows you to define an array of icons to insert into a single cell.\r\n     * The icons will be given the class name and will execute the callback on click.\r\n     *\r\n     * @param {Object[]} buttons TODO Add parameter description\r\n     * @param {Function} renderCallback TODO Add parameter description\r\n     * @returns {Backgrid.Cell} TODO Add returns description\r\n     * @example\r\n     * cell: CustomCells.ButtonCell([{\r\n     *   className: \"fa fa-pencil grid-icon\",\r\n     *   callback: function(){alert(this.model.get(\"createTime\"));}\r\n     * }, {\r\n     *   className: \"fa fa-plus grid-icon\",\r\n     *   callback: function(){alert(this.model.get(\"assignee\"));}\r\n     * }])\r\n     */\r\n    obj.ButtonCell = function (buttons, renderCallback) {\r\n        var events = {},\r\n            html = \"\";\r\n\r\n        _.each(buttons, function (button, index) {\r\n            if (button.href) {\r\n                html += (\"<a href=\\\"\" + button.href + \"\\\"><i class=\\\"button-\" + index + \" \" + button.className\r\n                + \"\\\"></i></a>\");\r\n            } else {\r\n                events[\"click .button-\" + index] = button.callback;\r\n                html += (\"<i class=\\\"button-\" + index + \" \" + button.className + \"\\\"></i>\");\r\n            }\r\n        });\r\n\r\n        return Backgrid.Cell.extend({\r\n            events: events,\r\n\r\n            render: function () {\r\n                this.$el.html(html);\r\n                this.delegateEvents();\r\n\r\n                if (renderCallback) {\r\n                    _.bind(renderCallback, this)();\r\n                }\r\n                return this;\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * In the case that a grid needs to sort on a property other than the one displayed, use this custom cell.\r\n     * @param {string} displayProperty TODO Add parameter description\r\n     * @returns {Backgrid.Cell} TODO Add return description\r\n     * @example\r\n     * // Will sort on \"taskName\" and display \"name\"\r\n     * {\r\n     *   label: \"Task\",\r\n     *   name: \"taskName\",\r\n     *   cell: CustomCells.DisplayNameCell(name),\r\n     *   sortable: true,\r\n     *   editable: false\r\n     * }\r\n     */\r\n    obj.DisplayNameCell = function (displayProperty) {\r\n        return Backgrid.Cell.extend({\r\n            render: function () {\r\n                this.$el.text(this.model.get(displayProperty));\r\n                return this;\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * addSmallScreenCell creates a hidden column with a custom \"smallScreenCell\" that\r\n     * will be displayed as a replacement for the full grid on small screens. It takes\r\n     * an array of Backgrid column definitions, loops over them, adds a vertical\r\n     * representation of how the cell is rendered for the current column to the\r\n     * smallScreenCell's html, then adds the newly created column definition to the\r\n     * originally defined grid columns.\r\n     *\r\n     * the \"hideColumnLabel\" param can be passed in to display the cell with no label\r\n     * for the associated value\r\n     * @param {Object[]} cols TODO Add parameter description\r\n     * @param {boolean} hideColumnLabels TODO Add parameter description\r\n     * @returns {Object[]} TODO Add returns description\r\n     */\r\n    obj.addSmallScreenCell = function (cols, hideColumnLabels) {\r\n        var smallScreenCell = Backgrid.Cell.extend({\r\n                className: \"smallScreenCell\",\r\n                events: {},\r\n                render: function () {\r\n                    var filteredCols = _.reject(cols, function (c) {\r\n                        return c.name === \"smallScreenCell\";\r\n                    });\r\n\r\n                    _.each(filteredCols, _.bind(function (col) {\r\n                        var cellView,\r\n                            label = \"<span class='text-muted'>\" + col.label + \":</span> \",\r\n                            cellWrapper;\r\n\r\n                        if (_.isObject(col.cell)) {\r\n                            cellView = new col.cell({ model: this.model, column: col });\r\n                            cellView.$el = $(\"<span>\");\r\n                            cellView.render();\r\n\r\n                            if (!_.isEmpty(_.omit(cellView.events, \"click\"))) {\r\n                                cellWrapper = $(\"<p class='pull-right show'></p>\");\r\n\r\n                                if (cellView.$el.html().length && !hideColumnLabels && col.label) {\r\n                                    cellWrapper.append(label);\r\n                                }\r\n\r\n                                cellWrapper.append(cellView.$el);\r\n\r\n                                this.$el.prepend(cellWrapper);\r\n                            } else {\r\n                                cellWrapper = $(\"<p>\");\r\n\r\n                                if (cellView.$el.html().length && !hideColumnLabels && col.label) {\r\n                                    cellWrapper.append(label);\r\n                                }\r\n\r\n                                cellWrapper.append(cellView.$el);\r\n\r\n                                this.$el.append(cellWrapper);\r\n                            }\r\n                        } else {\r\n                            cellWrapper = $(\"<p>\");\r\n                            if (this.model.get(col.name) && this.model.get(col.name).length && !hideColumnLabels\r\n                                && col.label) {\r\n                                cellWrapper.append(label);\r\n                            }\r\n\r\n                            cellWrapper.append(this.model.get(col.name));\r\n\r\n                            this.$el.append(cellWrapper);\r\n                        }\r\n                    }, this));\r\n\r\n                    return this;\r\n                }\r\n            }),\r\n            newCol = {\r\n                name: \"smallScreenCell\",\r\n                editable: false,\r\n                sortable: false,\r\n                cell: smallScreenCell\r\n            };\r\n\r\n        cols.push(newCol);\r\n\r\n        return cols;\r\n    };\r\n\r\n    /**\r\n     * Handlebars Template Cell Renderer\r\n     * <p>\r\n     * You must extend this renderer and specify a \"template\" attribute\r\n     * @example\r\n     * BackgridUtils.TemplateCell.extend({\r\n     *   template: \"templates/MyTemplate.html\"\r\n     * });\r\n     */\r\n    obj.TemplateCell = Backgrid.Cell.extend({\r\n        className: \"template-cell\",\r\n\r\n        events: {\r\n            \"click\": \"_onClick\"\r\n        },\r\n\r\n        render: function () {\r\n            this.$el.html(UIUtils.fillTemplateWithData(this.template, this.model.attributes));\r\n\r\n            if (this.additionalClassName) {\r\n                this.$el.addClass(this.additionalClassName);\r\n            }\r\n\r\n            if (this.callback) {\r\n                this.callback();\r\n            }\r\n\r\n            this.delegateEvents();\r\n\r\n            return this;\r\n        },\r\n\r\n        _onClick: function (e) {\r\n            if (this.onClick) {\r\n                this.onClick(e, this.model.id);\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Object Cell\r\n     * <p>\r\n     * Displays cell content as a definition list. Used for cells which values are objects\r\n     */\r\n    obj.ObjectCell = Backgrid.Cell.extend({\r\n        className: \"object-formatter-cell\",\r\n\r\n        render: function () {\r\n            this.$el.empty();\r\n\r\n            var object = this.model.get(this.column.attributes.name),\r\n                result = \"<dl class='dl-horizontal'>\",\r\n                prop;\r\n\r\n            for (prop in object) {\r\n                if (_.isString(object[prop])) {\r\n                    result += \"<dt>\" + prop + \"</dt><dd>\" + object[prop] + \"</dd>\";\r\n                } else {\r\n                    result += \"<dt>\" + prop + \"</dt><dd>\" + JSON.stringify(object[prop]) + \"</dd>\";\r\n                }\r\n            }\r\n            result += \"</dl>\";\r\n\r\n            this.$el.append(result);\r\n\r\n            this.delegateEvents();\r\n            return this;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Array Cell\r\n     * <p>\r\n     * Displays cell content as an unordered list. Used for cells which values are arrays\r\n     */\r\n    obj.ArrayCell = Backgrid.Cell.extend({\r\n        className: \"array-formatter-cell\",\r\n\r\n        buildHtml: function (arrayVal) {\r\n            var result = \"<ul>\",\r\n                i = 0;\r\n\r\n            for (; i < arrayVal.length; i++) {\r\n                if (_.isString(arrayVal[i])) {\r\n                    result += \"<li>\" + arrayVal[i] + \"</li>\";\r\n                } else {\r\n                    result += \"<li>\" + JSON.stringify(arrayVal[i]) + \"</li>\";\r\n                }\r\n            }\r\n            result += \"</ul>\";\r\n\r\n            return result;\r\n        },\r\n\r\n        render: function () {\r\n            this.$el.empty();\r\n\r\n            var arrayVal = this.model.get(this.column.attributes.name);\r\n            this.$el.append(this.buildHtml(arrayVal));\r\n\r\n            this.delegateEvents();\r\n            return this;\r\n        }\r\n    });\r\n\r\n    obj.FilterHeaderCell = Backgrid.HeaderCell.extend({\r\n        className: \"filter-header-cell\",\r\n        events: {\r\n            \"click a\": \"preventSortOnClear\"\r\n        },\r\n        preventSortOnClear: function (e) {\r\n            if ($(e.target).data().backgridAction === \"clear\") {\r\n                e.preventDefault();\r\n            } else {\r\n                this.onClick(e);\r\n            }\r\n        },\r\n        render: function () {\r\n            var filter = new Backgrid.Extension.ThemeableServerSideFilter({\r\n                name: this.column.get(\"name\"),\r\n                placeholder: $.t(\"common.form.filter\"),\r\n                collection: this.collection\r\n            });\r\n\r\n            /**\r\n             * this setting tells the ThemeableServerSideFilter both to search on keyup and to only\r\n             * search if the minimum number of search characters are entered in the filter field\r\n             */\r\n            filter.minimumSearchChars = this.column.attributes.minimumSearchChars;\r\n\r\n            if (this.addClassName) {\r\n                this.$el.addClass(this.addClassName);\r\n            }\r\n\r\n            this.collection.state.filters = this.collection.state.filters ? this.collection.state.filters : [];\r\n            this.collection.state.filters.push(filter);\r\n            obj.FilterHeaderCell.__super__.render.apply(this);\r\n            this.$el.prepend(filter.render().el);\r\n            return this;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Clickable Row\r\n     * <p>\r\n     * You must extend this row and specify a \"callback\" attribute e.g.\r\n     * <p>\r\n     * MyRow = BackgridUtils.ClickableRow.extend({\r\n     *     callback: myCallback\r\n     * });\r\n     */\r\n    obj.ClickableRow = Backgrid.Row.extend({\r\n        events: {\r\n            \"click\": \"onClick\"\r\n        },\r\n\r\n        onClick: function (e) {\r\n            if (this.callback) {\r\n                this.callback(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    obj.sortKeys = function () {\r\n        return this.state.order === 1 ? \"-\" + this.state.sortKey : this.state.sortKey;\r\n    };\r\n\r\n    // FIXME: Workaround to fix \"Double sort indicators\" issue\r\n    // @see https://github.com/wyuenho/backgrid/issues/453\r\n    obj.doubleSortFix = function (model) {\r\n        // No ids so identify model with CID\r\n        var cid = model.cid,\r\n            filtered = model.collection.filter(function (model) {\r\n                return model.cid !== cid;\r\n            });\r\n\r\n        _.each(filtered, function (model) {\r\n            model.set(\"direction\", null);\r\n        });\r\n    };\r\n\r\n    obj.pagedResultsOffset = function () {\r\n        return (this.state.currentPage - 1) * this.state.pageSize;\r\n    };\r\n\r\n    return obj;\r\n});"]}