{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authorization/resourceTypes/ResourceTypesView.js"],"names":["define","$","_","Backbone","BackbonePaginator","BackgridFilter","Backgrid","ThemeablePaginator","Messages","EventManager","Router","Constants","UIUtils","URLHelper","AbstractListView","ResourceTypeModel","BackgridUtils","extend","template","toolbarTemplate","partials","events","render","args","callback","ResourceTypes","PageableCollection","url","substitute","model","state","getState","queryParams","getQueryParams","_queryFilter","encodeURIComponent","parseState","parseRecords","sync","method","options","beforeSend","xhr","setRequestHeader","realmPath","data","items","headerActions","actionPartial","helpLink","fetch","reset","done","response","resultCount","hasResourceTypes","renderTable","parentRender","renderToolbar","fail","routeTo","configuration","routes","realms","trigger","self","ClickableRow","e","$target","target","parents","hasClass","realmsResourceTypeEdit","map","id","columns","name","label","t","cell","TemplateCell","iconClass","rendered","$el","find","addClass","headerCell","FilterHeaderCell","sortType","editable","className","editItem","editRecord","deleteItem","onDeleteClick","type","sortable","grid","Grid","row","collection","emptyText","paginator","Extension","windowSize","bindDefaultHandlers","append","el","addNewResourceType","realmsResourceTypeNew"],"mappings":"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","file":"ResourceTypesView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"backbone\",\n    \"backbone.paginator\",\n    \"backgrid-filter\",\n    \"org/forgerock/commons/ui/common/backgrid/Backgrid\",\n    \"org/forgerock/commons/ui/common/backgrid/extension/ThemeablePaginator\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/common/util/URLHelper\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/common/AbstractListView\",\n    \"org/forgerock/openam/ui/admin/models/authorization/ResourceTypeModel\",\n    \"org/forgerock/openam/ui/common/util/BackgridUtils\"\n], ($, _, Backbone, BackbonePaginator, BackgridFilter, Backgrid, ThemeablePaginator, Messages, EventManager, Router,\n    Constants, UIUtils, URLHelper, AbstractListView, ResourceTypeModel, BackgridUtils) =>\n    AbstractListView.extend({\n        template: \"templates/admin/views/realms/authorization/resourceTypes/ResourceTypesTemplate.html\",\n        // Used in AbstractListView\n        toolbarTemplate: \"templates/admin/views/realms/authorization/resourceTypes/ResourceTypesToolbarTemplate.html\",\n        partials: [\n            \"partials/util/_HelpLink.html\"\n        ],\n        events: {\n            \"click [data-add-entity]\": \"addNewResourceType\"\n        },\n        render (args, callback) {\n            const ResourceTypes = Backbone.PageableCollection.extend({\n                url: URLHelper.substitute(\"__api__/resourcetypes\"),\n                model: ResourceTypeModel,\n                state: BackgridUtils.getState(),\n                queryParams: BackgridUtils.getQueryParams({\n                    _queryFilter: [\n                        `name+eq+${encodeURIComponent('\"^(?!Delegation Service$).*\"')}`\n                    ]\n                }),\n                parseState: BackgridUtils.parseState,\n                parseRecords: BackgridUtils.parseRecords,\n                sync (method, model, options) {\n                    options.beforeSend = function (xhr) {\n                        xhr.setRequestHeader(\"Accept-API-Version\", \"protocol=1.0,resource=1.0\");\n                    };\n                    return BackgridUtils.sync(method, model, options);\n                }\n            });\n\n            this.realmPath = args[0];\n            this.data.items = new ResourceTypes();\n            this.data.headerActions = [{ actionPartial: \"util/_HelpLink\", helpLink: \"backstage.authz.resourceTypes\" }];\n            this.data.items.fetch({ reset: true }).done((response) => {\n                if (response.resultCount > 0) {\n                    this.data.hasResourceTypes = true;\n                    this.renderTable(callback);\n                } else {\n                    this.data.hasResourceTypes = false;\n                    this.parentRender(this.renderToolbar);\n                }\n            }).fail(() => {\n                Router.routeTo(Router.configuration.routes.realms, { args: [], trigger: true });\n            });\n        },\n\n        renderTable (callback) {\n            const self = this;\n            const ClickableRow = BackgridUtils.ClickableRow.extend({\n                callback (e) {\n                    var $target = $(e.target);\n\n                    if ($target.parents().hasClass(\"fr-col-btn-2\")) {\n                        return;\n                    }\n\n                    Router.routeTo(Router.configuration.routes.realmsResourceTypeEdit, {\n                        args: _.map([self.realmPath, this.model.id], encodeURIComponent),\n                        trigger: true\n                    });\n                }\n            });\n\n            const columns = [\n                {\n                    name: \"name\",\n                    label: $.t(\"console.authorization.resourceTypes.list.grid.0\"),\n                    cell: BackgridUtils.TemplateCell.extend({\n                        iconClass: \"fa-cube\",\n                        template: \"templates/admin/backgrid/cell/IconAndNameCell.html\",\n                        rendered () {\n                            this.$el.find(\"i.fa\").addClass(this.iconClass);\n                        }\n                    }),\n                    headerCell: BackgridUtils.FilterHeaderCell,\n                    sortType: \"toggle\",\n                    editable: false\n                },\n                {\n                    name: \"\",\n                    cell: BackgridUtils.TemplateCell.extend({\n                        className: \"fr-col-btn-2\",\n                        template: \"templates/admin/backgrid/cell/RowActionsCell.html\",\n                        events: {\n                            \"click [data-edit-item]\": \"editItem\",\n                            \"click [data-delete-item]\": \"deleteItem\"\n                        },\n                        editItem (e) {\n                            self.editRecord(e, this.model.id, Router.configuration.routes.realmsResourceTypeEdit);\n                        },\n                        deleteItem (e) {\n                            self.onDeleteClick(e, { type: $.t(\"console.authorization.common.resourceType\") },\n                                this.model.id);\n                        }\n                    }),\n                    sortable: false,\n                    editable: false\n                }\n            ];\n\n            const grid = new Backgrid.Grid({\n                columns,\n                row: ClickableRow,\n                collection: this.data.items,\n                className: \"backgrid table table-hover\",\n                emptyText: $.t(\"console.common.noResults\")\n            });\n\n            const paginator = new Backgrid.Extension.ThemeablePaginator({\n                collection: this.data.items,\n                windowSize: 3\n            });\n\n            this.bindDefaultHandlers();\n            this.parentRender(() => {\n                this.renderToolbar();\n                this.$el.find(\".table-container\").append(grid.render().el);\n                this.$el.find(\".panel-body\").append(paginator.render().el);\n\n                if (callback) { callback(); }\n            });\n        },\n\n        addNewResourceType () {\n            Router.routeTo(Router.configuration.routes.realmsResourceTypeNew, {\n                args: [encodeURIComponent(this.realmPath)],\n                trigger: true\n            });\n        }\n    })\n);\n"]}