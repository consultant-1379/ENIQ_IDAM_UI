{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/scripts/ScriptsView.js"],"names":["define","$","_","Backbone","BackbonePaginator","BackgridFilter","Backgrid","ThemeablePaginator","ThemeableSelectAllCell","Messages","AbstractView","EventManager","Router","Constants","UIUtils","URLHelper","BackgridUtils","Script","ScriptsService","FormHelper","extend","template","toolbarTemplate","events","render","args","callback","self","columns","grid","paginator","ClickableRow","Scripts","renderTranslatedCell","realmPath","data","selectedUUIDs","contextSchemaPromise","scripts","getSchema","languageSchemaPromise","getContextSchema","PageableCollection","url","substitute","model","state","getState","queryParams","getQueryParams","parseState","parseRecords","sync","id","get","column","translation","map","$el","text","name","cell","headerCell","label","t","FilterHeaderCell","sortType","editable","StringCell","sortable","attributes","tabindex","e","$target","target","is","routeTo","configuration","routes","realmsScriptEdit","encodeURIComponent","trigger","on","selected","onRowSelect","doubleSortFix","Grid","row","collection","className","emptyText","Extension","windowSize","parentRender","renderToolbar","find","append","el","when","done","contSchema","langSchema","languageSchema","properties","languages","items","undefined","contextSchema","defaultContext","langMap","createMapBySchema","contextMap","fetch","reset","onDeleteClick","msg","message","preventDefault","showConfirmationBeforeDeleting","bind","deleteRecords","i","item","onDestroy","onSuccess","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST","length","destroy","success","wait","contains","push","without","fillTemplateWithData","tpl","html","addNewScript","realmsScriptNew","schema","options","enum_titles"],"mappings":"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","file":"ScriptsView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"backbone\",\n    \"backbone.paginator\",\n    \"backgrid-filter\",\n    \"org/forgerock/commons/ui/common/backgrid/Backgrid\",\n    \"org/forgerock/commons/ui/common/backgrid/extension/ThemeablePaginator\",\n    \"org/forgerock/commons/ui/common/backgrid/extension/ThemeableSelectAllCell\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/common/util/URLHelper\",\n    \"org/forgerock/openam/ui/common/util/BackgridUtils\",\n    \"org/forgerock/openam/ui/admin/models/scripts/ScriptModel\",\n    \"org/forgerock/openam/ui/admin/services/global/ScriptsService\",\n    \"org/forgerock/openam/ui/admin/utils/FormHelper\"\n], function ($, _, Backbone, BackbonePaginator, BackgridFilter, Backgrid, ThemeablePaginator, ThemeableSelectAllCell,\n             Messages, AbstractView, EventManager, Router, Constants, UIUtils, URLHelper, BackgridUtils, Script,\n             ScriptsService, FormHelper) {\n    return AbstractView.extend({\n        template: \"templates/admin/views/realms/scripts/ScriptsTemplate.html\",\n        toolbarTemplate: \"templates/admin/views/realms/scripts/ScriptsToolbarTemplate.html\",\n        events: {\n            \"click [data-add-entity]\": \"addNewScript\",\n            \"click [data-delete-scripts]\": \"onDeleteClick\"\n        },\n\n        render (args, callback) {\n            var self = this,\n                columns,\n                grid,\n                paginator,\n                ClickableRow,\n                Scripts,\n                renderTranslatedCell;\n\n            this.realmPath = args[0];\n            this.data.selectedUUIDs = [];\n            this.contextSchemaPromise = ScriptsService.scripts.getSchema();\n            this.languageSchemaPromise = ScriptsService.scripts.getContextSchema();\n\n            Scripts = Backbone.PageableCollection.extend({\n                url: URLHelper.substitute(\"__api__/scripts\"),\n                model: Script,\n                state: BackgridUtils.getState(),\n                queryParams: BackgridUtils.getQueryParams(),\n                parseState: BackgridUtils.parseState,\n                parseRecords: BackgridUtils.parseRecords,\n                sync: BackgridUtils.sync\n            });\n\n            renderTranslatedCell = function () {\n                var id = this.model.get(this.column.get(\"name\")),\n                    translation = (this.map && self[this.map]) ? self[this.map][id] : id;\n\n                this.$el.text(translation);\n                return this;\n            };\n\n            columns = [{\n                name: \"\",\n                cell: ThemeableSelectAllCell,\n                headerCell: \"select-all\"\n            }, {\n                name: \"name\",\n                label: $.t(\"console.scripts.list.grid.0\"),\n                cell: \"string\",\n                headerCell: BackgridUtils.FilterHeaderCell,\n                sortType: \"toggle\",\n                editable: false\n            }, {\n                name: \"context\",\n                label: $.t(\"console.scripts.list.grid.1\"),\n                cell: Backgrid.StringCell.extend({\n                    map: \"contextMap\",\n                    render: renderTranslatedCell\n                }),\n                headerCell: BackgridUtils.FilterHeaderCell,\n                sortType: \"toggle\",\n                editable: false\n            }, {\n                name: \"language\",\n                label: $.t(\"console.scripts.list.grid.2\"),\n                cell: Backgrid.StringCell.extend({\n                    map: \"langMap\",\n                    render: renderTranslatedCell\n                }),\n                headerCell: BackgridUtils.FilterHeaderCell,\n                sortType: \"toggle\",\n                editable: false\n            }, {\n                name: \"description\",\n                label: $.t(\"console.scripts.list.grid.3\"),\n                cell: \"string\",\n                sortable: false,\n                editable: false\n            }];\n\n            ClickableRow = BackgridUtils.ClickableRow.extend({\n                attributes: () => ({ tabindex: 0 }),\n                callback (e) {\n                    var $target = $(e.target);\n\n                    if ($target.is(\"input\") || $target.is(\".select-row-cell\")) {\n                        return;\n                    }\n\n                    Router.routeTo(Router.configuration.routes.realmsScriptEdit, {\n                        args: [encodeURIComponent(self.realmPath), encodeURIComponent(this.model.id)],\n                        trigger: true\n                    });\n                }\n            });\n\n            this.data.scripts = new Scripts();\n\n            this.data.scripts.on(\"backgrid:selected\", function (model, selected) {\n                self.onRowSelect(model, selected);\n            });\n\n            this.data.scripts.on(\"backgrid:sort\", BackgridUtils.doubleSortFix);\n\n            grid = new Backgrid.Grid({\n                columns,\n                row: ClickableRow,\n                collection: self.data.scripts,\n                className: \"backgrid table table-hover\",\n                emptyText: $.t(\"console.common.noResults\")\n            });\n\n            paginator = new Backgrid.Extension.ThemeablePaginator({\n                collection: self.data.scripts,\n                windowSize: 3\n            });\n\n            this.parentRender(function () {\n                this.renderToolbar();\n\n                this.$el.find(\".table-container\").append(grid.render().el);\n                this.$el.find(\".panel-body\").append(paginator.render().el);\n\n                $.when(this.contextSchemaPromise, this.languageSchemaPromise).done(function (contSchema, langSchema) {\n                    var languageSchema = langSchema[0] ? langSchema[0].properties.languages.items : undefined,\n                        contextSchema = contSchema[0] ? contSchema[0].properties.defaultContext : undefined;\n                    self.langMap = self.createMapBySchema(languageSchema);\n                    self.contextMap = self.createMapBySchema(contextSchema);\n\n                    self.data.scripts.fetch({ reset: true }).done(function () {\n                        if (callback) {\n                            callback();\n                        }\n                    });\n                });\n            });\n        },\n\n        onDeleteClick (e) {\n            var msg = { message: $.t(\"console.scripts.list.confirmDeleteText\") };\n            e.preventDefault();\n            FormHelper.showConfirmationBeforeDeleting(msg, _.bind(this.deleteRecords, this));\n        },\n\n        deleteRecords () {\n            var self = this,\n                i = 0,\n                item,\n                onDestroy = function () {\n                    self.data.selectedUUIDs = [];\n                    self.data.scripts.fetch({ reset: true });\n                    self.renderToolbar();\n                },\n                onSuccess = function () {\n                    onDestroy();\n                    EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"changesSaved\");\n                };\n\n            for (; i < this.data.selectedUUIDs.length; i++) {\n                item = this.data.scripts.get(this.data.selectedUUIDs[i]);\n\n                item.destroy({\n                    success: onSuccess,\n                    wait: true\n                });\n            }\n        },\n\n        onRowSelect (model, selected) {\n            if (selected) {\n                if (!_.contains(this.data.selectedUUIDs, model.id)) {\n                    this.data.selectedUUIDs.push(model.id);\n                }\n            } else {\n                this.data.selectedUUIDs = _.without(this.data.selectedUUIDs, model.id);\n            }\n\n            this.renderToolbar();\n        },\n\n        renderToolbar () {\n            var self = this;\n\n            UIUtils.fillTemplateWithData(self.toolbarTemplate, self.data, function (tpl) {\n                self.$el.find(\"[data-grid-toolbar]\").html(tpl);\n            });\n        },\n\n        addNewScript () {\n            Router.routeTo(Router.configuration.routes.realmsScriptNew, {\n                args: [encodeURIComponent(this.realmPath)],\n                trigger: true\n            });\n        },\n\n        // TODO: server side fix is needed instead of this function\n        createMapBySchema (schema) {\n            var map, i, length;\n\n            if (schema && schema[\"enum\"]) {\n                map = {};\n                length = schema[\"enum\"].length;\n\n                for (i = 0; i < length; i++) {\n                    map[schema[\"enum\"][i]] = schema.options.enum_titles[i];\n                }\n            }\n            return map;\n        }\n    });\n});\n"]}