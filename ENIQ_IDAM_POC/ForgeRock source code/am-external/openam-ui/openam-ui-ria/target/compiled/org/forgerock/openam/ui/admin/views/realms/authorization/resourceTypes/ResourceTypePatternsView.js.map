{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authorization/resourceTypes/ResourceTypePatternsView.js"],"names":["define","$","_","AbstractView","StripedListEditingView","ResourceTypePatternsView","prototype","render","entity","actions","el","callback","data","items","baseRender","getPendingItem","$el","find","val","toString","isValid","e","isExistingItem","itemPending","itemFromCollection","getCollectionWithout","itemName","target","parents","without","updateEntity","patterns"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,mDAHG,EAIH,wFAJG,CAAP,EAKG,UAACC,CAAD,EAAIC,CAAJ,EAAOC,YAAP,EAAqBC,sBAArB,EAAgD;AAC/C,aAASC,wBAAT,GAAqC,CACpC;;AAED;AACAA,6BAAyBC,SAAzB,GAAqC,IAAIF,sBAAJ,EAArC;;AAEAC,6BAAyBC,SAAzB,CAAmCC,MAAnC,GAA4C,UAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,EAA3B,EAA+BC,QAA/B,EAAyC;AACjF,aAAKC,IAAL,GAAY,EAAZ;AACA,aAAKJ,MAAL,GAAcA,MAAd;;AAEA,aAAKI,IAAL,CAAUC,KAAV,GAAkBJ,WAAW,EAA7B;;AAEA,aAAKK,UAAL,CAAgB,KAAKF,IAArB,EACI,6FADJ,EAEIF,EAFJ,EAEQC,QAFR;AAGH,KATD;;AAWAN,6BAAyBC,SAAzB,CAAmCS,cAAnC,GAAoD,YAAY;AAC5D,eAAO,KAAKC,GAAL,CAASC,IAAT,CAAc,sBAAd,EAAsCC,GAAtC,GAA4CC,QAA5C,EAAP;AACH,KAFD;;AAIAd,6BAAyBC,SAAzB,CAAmCc,OAAnC,GAA6C,UAAUC,CAAV,EAAa;AACtD,eAAO,KAAKN,cAAL,CAAoBM,CAApB,MAA2B,EAAlC;AACH,KAFD;;AAIAhB,6BAAyBC,SAAzB,CAAmCgB,cAAnC,GAAoD,UAAUC,WAAV,EAAuBC,kBAAvB,EAA2C;AAC3F,eAAOD,gBAAgBC,kBAAvB;AACH,KAFD;;AAIAnB,6BAAyBC,SAAzB,CAAmCmB,oBAAnC,GAA0D,UAAUJ,CAAV,EAAa;AACnE,YAAMK,WAAWzB,EAAEoB,EAAEM,MAAJ,EAAYC,OAAZ,CAAoB,IAApB,EAA0BhB,IAA1B,CAA+B,WAA/B,EAA4CO,QAA5C,EAAjB;AACA,eAAOjB,EAAE2B,OAAF,CAAU,KAAKjB,IAAL,CAAUC,KAApB,EAA2Ba,QAA3B,CAAP;AACH,KAHD;;AAKArB,6BAAyBC,SAAzB,CAAmCwB,YAAnC,GAAkD,YAAY;AAC1D,aAAKtB,MAAL,CAAYuB,QAAZ,GAAuB,KAAKnB,IAAL,CAAUC,KAAjC;AACH,KAFD;;AAIA,WAAOR,wBAAP;AACH,CA7CD","file":"ResourceTypePatternsView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/common/StripedListEditingView\"\n], ($, _, AbstractView, StripedListEditingView) => {\n    function ResourceTypePatternsView () {\n    }\n\n    // TODO: Rename StripedListEditingView or rewrite to bootstrap table\n    ResourceTypePatternsView.prototype = new StripedListEditingView();\n\n    ResourceTypePatternsView.prototype.render = function (entity, actions, el, callback) {\n        this.data = {};\n        this.entity = entity;\n\n        this.data.items = actions || [];\n\n        this.baseRender(this.data,\n            \"templates/admin/views/realms/authorization/resourceTypes/ResourceTypesPatternsTemplate.html\",\n            el, callback);\n    };\n\n    ResourceTypePatternsView.prototype.getPendingItem = function () {\n        return this.$el.find(\"[data-editing-input]\").val().toString();\n    };\n\n    ResourceTypePatternsView.prototype.isValid = function (e) {\n        return this.getPendingItem(e) !== \"\";\n    };\n\n    ResourceTypePatternsView.prototype.isExistingItem = function (itemPending, itemFromCollection) {\n        return itemPending === itemFromCollection;\n    };\n\n    ResourceTypePatternsView.prototype.getCollectionWithout = function (e) {\n        const itemName = $(e.target).parents(\"li\").data(\"item-name\").toString();\n        return _.without(this.data.items, itemName);\n    };\n\n    ResourceTypePatternsView.prototype.updateEntity = function () {\n        this.entity.patterns = this.data.items;\n    };\n\n    return ResourceTypePatternsView;\n});\n"]}