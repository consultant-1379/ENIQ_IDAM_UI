{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/user-1/anonymousProcess/AnonymousProcessView.js"],"names":["define","$","_","form2js","AbstractView","AnonymousProcessDelegate","Constants","EventManager","Router","UIUtils","URIUtils","ValidatorsManager","getCurrentFragmentParamString","params","getCurrentFragmentQueryString","isEmpty","walkTreeForFilterStrings","basicNode","groupValues","node","hasClass","val","length","attr","replace","chain","find","map","filter","value","join","AnonymousProcessView","extend","baseTemplate","template","events","data","i18n","getFormContent","$el","queryFilter","element","formSubmit","event","formContent","preventDefault","delegate","submit","then","bind","renderProcessState","render","args","convertCurrentUrlToJSON","stateData","setDelegate","SELF_SERVICE_CONTEXT","processType","token","submitDelegate","response","get","sendEvent","EVENT_CHANGE_VIEW","route","currentRoute","undefined","setTranslationBase","parentRender","prototype","call","start","endpoint","additional","onSubmit","omit","always","each","key","i18nBase","restartProcess","e","forceUpdate","attemptCustomTemplate","baseTemplateUrl","processStatePromise","templateUrl","type","tag","compileTemplate","renderedTemplate","resolve","loadGenericTemplate","has","Deferred","requirements","status","additions","content","html","bindValidators","baseEntity","validateAllFields","focus","buildQueryFilter","validateForm","button","incompleteAndGroup","prop","reduce","state","field","subGroup"],"mappings":"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","file":"AnonymousProcessView.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2015-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"underscore\",\r\n    \"form2js\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\r\n    \"org/forgerock/commons/ui/user/delegates/AnonymousProcessDelegate\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\",\r\n    \"org/forgerock/commons/ui/common/main/Router\",\r\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\r\n    \"org/forgerock/commons/ui/common/util/URIUtils\",\r\n    \"org/forgerock/commons/ui/common/main/ValidatorsManager\"\r\n], function($, _, form2js,\r\n    AbstractView,\r\n    AnonymousProcessDelegate,\r\n    Constants,\r\n    EventManager,\r\n    Router,\r\n    UIUtils,\r\n    URIUtils,\r\n    ValidatorsManager) {\r\n\r\n    function getCurrentFragmentParamString () {\r\n        var params = URIUtils.getCurrentFragmentQueryString();\r\n        return _.isEmpty(params) ? \"\" : \"&\" + params;\r\n    }\r\n\r\n    /**\r\n     * Given a position in the DOM, look for children elements which comprise a\r\n     * boolean expression. Using all of those found with content, return a filter\r\n     * string which represents them.\r\n     */\r\n    function walkTreeForFilterStrings(basicNode) {\r\n        var groupValues,\r\n            node = $(basicNode);\r\n\r\n        if (node.hasClass(\"filter-value\") && node.val().length > 0) {\r\n            return node.attr('name') + ' eq \"' + node.val().replace('\"', '\\\\\"') + '\"';\r\n        } else if (node.hasClass(\"filter-group\")) {\r\n            groupValues = _.chain(node.find(\">.form-group>.filter-value, >.filter-group\"))\r\n                           .map(walkTreeForFilterStrings)\r\n                           .filter(function (value) {\r\n                               return value.length > 0;\r\n                           })\r\n                           .value();\r\n\r\n            if (groupValues.length === 0) {\r\n                return \"\";\r\n            } else if (groupValues.length === 1) {\r\n                return groupValues[0];\r\n            }\r\n\r\n            if (node.hasClass(\"filter-or\")) {\r\n                return \"(\" + groupValues.join(\" OR \") + \")\";\r\n            } else {\r\n                return \"(\" + groupValues.join(\" AND \") + \")\";\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @exports org/forgerock/commons/ui/user/anonymousProcess/AnonymousProcessView\r\n     *\r\n     * To use this generic object, it is required that two properties be defined prior to initialization:\r\n     * \"processType\" - the Anonymous Process type registered on the backend under the selfservice context\r\n     * \"i18nBase\" - the base of the translation file that contains the entries specific to this instance\r\n     *\r\n     * Example:\r\n     *\r\n     *    new AnonymousProcessView.extend({\r\n     *         processType: \"reset\",\r\n     *         i18nBase: \"common.user.passwordReset\"\r\n     *     });\r\n     */\r\n\r\n    var AnonymousProcessView = AbstractView.extend({\r\n        baseTemplate: \"templates/user/AnonymousProcessBaseTemplate.html\",\r\n        template: \"templates/user/AnonymousProcessWrapper.html\",\r\n        events: {\r\n            \"submit form\": \"formSubmit\",\r\n            \"click #restart\": \"restartProcess\",\r\n            \"change #userQuery :input\": \"buildQueryFilter\",\r\n            \"keyup #userQuery :input\": \"buildQueryFilter\",\r\n            \"customValidate #userQuery\": \"validateForm\"\r\n        },\r\n        data: {\r\n            i18n: {}\r\n        },\r\n        // included as part of the AnonymousProcessView object for test purposes\r\n        walkTreeForFilterStrings: walkTreeForFilterStrings,\r\n\r\n        getFormContent: function () {\r\n            if (this.$el.find(\"form\").attr(\"id\") === \"userQuery\") {\r\n                return {\r\n                    queryFilter: this.$el.find(\":input[name=queryFilter]\").val()\r\n                };\r\n            } else {\r\n                return form2js($(this.element).find(\"form\")[0]);\r\n            }\r\n        },\r\n\r\n        formSubmit: function(event) {\r\n            var formContent = this.getFormContent();\r\n\r\n            event.preventDefault();\r\n\r\n            this.delegate.submit(formContent).then(\r\n                _.bind(this.renderProcessState, this),\r\n                _.bind(this.renderProcessState, this)\r\n            );\r\n\r\n        },\r\n\r\n        render: function(args) {\r\n            var params = Router.convertCurrentUrlToJSON().params;\r\n            this.stateData = {};\r\n\r\n            if (!this.delegate || args[0] !== \"/continue\") {\r\n                this.setDelegate(Constants.SELF_SERVICE_CONTEXT + this.processType, params.token);\r\n            }\r\n\r\n            if (!_.isEmpty(params)) {\r\n                this.submitDelegate(params, _.bind(function (response) {\r\n                    // in the case when the token presented on the URL results in an unsuccessful\r\n                    // response, do not simply redirect to /continue; doing so would reset the process\r\n                    // and hide the reason for the failure from the user.\r\n                    if (_.get(response, \"status.success\") === false) {\r\n                        this.renderProcessState(response);\r\n                    } else {\r\n                        EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\r\n                            route: Router.currentRoute,\r\n                            args: [\"/continue\", \"\"]\r\n                        });\r\n                    }\r\n                }, this));\r\n                return;\r\n            }\r\n\r\n            // TODO: The first undefined argument is the deprecated realm which is defined in the\r\n            // CommonRoutesConfig login route. This needs to be removed as part of AME-11109.\r\n            this.data.args = [undefined, getCurrentFragmentParamString()];\r\n            this.setTranslationBase();\r\n            this.parentRender();\r\n        },\r\n\r\n        parentRender: function () {\r\n            AbstractView.prototype.parentRender.call(this, _.bind(function () {\r\n                this.delegate.start().then(_.bind(this.renderProcessState, this));\r\n            }, this));\r\n        },\r\n\r\n        setDelegate: function (endpoint, token, additional) {\r\n            this.delegate = new AnonymousProcessDelegate(endpoint, token, additional);\r\n        },\r\n\r\n        submitDelegate: function (params, onSubmit) {\r\n            this.delegate.submit(_.omit(params, \"token\")).always(onSubmit);\r\n        },\r\n\r\n        setTranslationBase: function () {\r\n            _.each([\"title\", \"completed\", \"failed\", \"tryAgain\", \"return\"], function (key) {\r\n                this.data.i18n[key] = this.i18nBase + \".\" + key;\r\n            }, this);\r\n        },\r\n\r\n        restartProcess: function (e) {\r\n            e.preventDefault();\r\n            delete this.delegate;\r\n            delete this.stateData;\r\n            EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\r\n                route: _.extend({}, Router.currentRoute, { forceUpdate: true })\r\n            });\r\n        },\r\n\r\n        attemptCustomTemplate: function(stateData, baseTemplateUrl, response, processStatePromise) {\r\n            var templateUrl = baseTemplateUrl + this.processType\r\n                + \"/\" + response.type + \"-\" + response.tag + \".html\";\r\n\r\n            UIUtils.compileTemplate(templateUrl, stateData)\r\n            .then(function (renderedTemplate) {\r\n                processStatePromise.resolve(renderedTemplate);\r\n            }, _.bind(function () {\r\n                this.loadGenericTemplate(stateData, baseTemplateUrl, response, processStatePromise);\r\n            }, this));\r\n        },\r\n\r\n        loadGenericTemplate: function (stateData, baseTemplateUrl, response, processStatePromise) {\r\n            UIUtils.compileTemplate(\r\n                baseTemplateUrl + (_.has(response, \"requirements\")\r\n                ? \"GenericInputForm.html\" : \"GenericEndPage.html\"),\r\n                stateData\r\n            ).then(processStatePromise.resolve);\r\n        },\r\n\r\n        renderProcessState: function (response) {\r\n            var processStatePromise = $.Deferred(),\r\n                baseTemplateUrl = \"templates/user/process/\";\r\n\r\n            if (_.has(response, \"requirements\")) {\r\n                this.stateData = _.extend({\r\n                    requirements: response.requirements\r\n                }, this.data);\r\n            } else {\r\n                this.stateData = _.extend({\r\n                    status: response.status,\r\n                    additions: response.additions\r\n                }, this.data);\r\n            }\r\n\r\n            if (_.has(response, \"type\") && _.has(response, \"tag\")) {\r\n                this.attemptCustomTemplate(this.stateData, baseTemplateUrl, response, processStatePromise);\r\n            } else {\r\n                this.loadGenericTemplate(this.stateData, baseTemplateUrl, response, processStatePromise);\r\n            }\r\n\r\n            return processStatePromise.then(_.bind(function (content) {\r\n                this.$el.find(\"#processContent\").html(content);\r\n                ValidatorsManager.bindValidators(this.$el, this.baseEntity, _.bind(function () {\r\n                    ValidatorsManager.validateAllFields(this.$el);\r\n                }, this));\r\n                this.$el.find(\":input:visible:first\").focus();\r\n            }, this));\r\n        },\r\n\r\n        buildQueryFilter: function () {\r\n            this.$el.find(\":input[name=queryFilter]\")\r\n                .val(walkTreeForFilterStrings(this.$el.find(\"#filterContainer\")));\r\n            this.validateForm();\r\n        },\r\n        validateForm: function () {\r\n            var button = this.$el.find(\"input[type=submit]\"),\r\n                incompleteAndGroup = false;\r\n\r\n            // there has to be some value in the queryFilter or the whole thing is invalid\r\n            if (this.$el.find(\":input[name=queryFilter]\").val().length === 0) {\r\n                button.prop(\"disabled\", true);\r\n                return;\r\n            }\r\n\r\n            // filter-and groups must have each of their children filled-out\r\n            this.$el.find(\".filter-and\").each(function () {\r\n                // if there are any values at all specified for this \"and\" group...\r\n                if (walkTreeForFilterStrings(this).length > 0) {\r\n                    // then we need to make sure that they are all populated\r\n                    incompleteAndGroup = !(\r\n                        // check all direct filter-value fields for content\r\n                        _.reduce($(\">.form-group>.filter-value\", this), function (state, field) {\r\n                            return state && field.value.length > 0;\r\n                        }, true) &&\r\n                        // check all direct sub-groups for content\r\n                        _.reduce($(\">.filter-group\", this), function (state, subGroup) {\r\n                            return walkTreeForFilterStrings(subGroup).length > 0;\r\n                        }, true)\r\n                    );\r\n                }\r\n            });\r\n\r\n            button.prop(\"disabled\", incompleteAndGroup);\r\n        }\r\n\r\n    });\r\n\r\n    return AnonymousProcessView;\r\n});"]}