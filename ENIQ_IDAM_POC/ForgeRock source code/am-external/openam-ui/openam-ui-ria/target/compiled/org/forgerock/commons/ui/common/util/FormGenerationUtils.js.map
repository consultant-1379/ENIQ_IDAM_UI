{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/util/FormGenerationUtils.js"],"names":["define","$","dateUtil","obj","standardErrorSpan","standardErrorMessageTag","generateTemplateFromFormProperties","definition","formValues","formTemplate","formFieldDescription","i","formProperties","length","value","getValueForKey","_id","generateTemplateLine","key","formValueEntry","formFieldId","handlebarsValueExpression","valueExpression","formFieldDisplayName","formFieldIsReadable","formFieldIsWritable","formFieldIsRequired","formFieldType","formFieldVariableExpression","formFieldVariableName","formFieldDefaultExpression","formFieldValue","formFieldDateFormat","readable","writable","required","type","name","variableName","variableExpression","expressionText","defaultExpression","replace","generateStringTypeField","generateEnumTypeField","values","generateLongTypeField","generateBooleanTypeField","datePattern","generateDateTypeField","elementName","elementDisplayName","isReadable","isWritable","isRequired","dateFormat","fieldTagStartPart","fieldTagEndPart","label","input","dateFormatInput","validatorMessageTag","generateLabel","match","RegExp","substring","slice","generateInput","map","t","variableMap","select","additionalParams","selectedKey","__null","JSON","stringify","validatorType","isDisabledPart","isHiddenPart","isRequiredPart","validatorName","labelValue","buildPropertyTypeMap","typeName","result","propName","changeParamsToMeetTheirTypes","params","propertyTypeMapping","param","paramValue","date","parseDateString","parseInt"],"mappings":"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","file":"FormGenerationUtils.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"org/forgerock/commons/ui/common/util/DateUtil\"\r\n], function ($, dateUtil) {\r\n\r\n    var obj = {};\r\n\r\n    obj.standardErrorSpan = '<span class=\"error\">x</span>';\r\n\r\n    obj.standardErrorMessageTag = '<div class=\"validation-message\"></div>';\r\n\r\n    obj.generateTemplateFromFormProperties = function(definition, formValues) {\r\n        var formTemplate = \"\", formFieldDescription, i;\r\n        for(i = 0; i < definition.formProperties.length; i++) {\r\n            formFieldDescription = definition.formProperties[i];\r\n            formFieldDescription.value = obj.getValueForKey(formFieldDescription._id, formValues);\r\n            if (formFieldDescription._id !== '_formGenerationTemplate') {\r\n                formTemplate = formTemplate + this.generateTemplateLine(formFieldDescription._id, formFieldDescription);\r\n            }\r\n        }\r\n        return formTemplate;\r\n    };\r\n\r\n    obj.getValueForKey = function(key, formValues) {\r\n        var i, formValueEntry;\r\n        if (!formValues) {\r\n            return null;\r\n        }\r\n        for(i = 0; i < formValues.length; i++) {\r\n            formValueEntry = formValues[i];\r\n            if (formValueEntry[key]) {\r\n                return formValueEntry[key];\r\n            }\r\n        }\r\n    };\r\n\r\n    obj.generateTemplateLine = function(formFieldId, formFieldDescription) {\r\n        var handlebarsValueExpression, valueExpression, formFieldDisplayName,\r\n            formFieldIsReadable, formFieldIsWritable, formFieldIsRequired, formFieldType, formFieldVariableExpression,\r\n            formFieldVariableName, formFieldDefaultExpression, formFieldValue, formFieldDateFormat;\r\n\r\n        formFieldIsReadable = formFieldDescription.readable;\r\n\r\n        formFieldIsWritable = formFieldDescription.writable && formFieldDescription.readable;\r\n\r\n        formFieldIsRequired = formFieldDescription.required && formFieldDescription.writable\r\n            && formFieldDescription.readable;\r\n\r\n        formFieldType = formFieldDescription.type;\r\n\r\n        formFieldDisplayName = formFieldDescription.name;\r\n\r\n        formFieldVariableName = formFieldDescription.variableName ? formFieldDescription.variableName : formFieldId;\r\n\r\n        formFieldVariableExpression = formFieldDescription.variableExpression\r\n            ? formFieldDescription.variableExpression.expressionText : null;\r\n        formFieldDefaultExpression = formFieldDescription.defaultExpression\r\n            ? formFieldDescription.defaultExpression.expressionText : null;\r\n        formFieldValue = formFieldDescription.value ? formFieldDescription.value : null;\r\n\r\n        if (formFieldValue) {\r\n            valueExpression = formFieldValue;\r\n        } else if (formFieldVariableExpression) {\r\n            valueExpression = formFieldVariableExpression;\r\n        } else if (formFieldDefaultExpression) {\r\n            valueExpression = formFieldDefaultExpression;\r\n        }\r\n\r\n        if (valueExpression) {\r\n            handlebarsValueExpression = valueExpression.replace(/\\$\\{/g,'{{variables.');\r\n            handlebarsValueExpression = handlebarsValueExpression.replace(/\\}/g,'}}');\r\n        }\r\n\r\n        if (!formFieldType || !formFieldType.name || formFieldType.name === 'string') {\r\n            return this.generateStringTypeField(formFieldVariableName, formFieldDisplayName, handlebarsValueExpression,\r\n                formFieldIsReadable, formFieldIsWritable, formFieldIsRequired);\r\n        } else if (formFieldType.name === 'enum') {\r\n            return this.generateEnumTypeField(formFieldVariableName, formFieldDisplayName, formFieldType.values,\r\n                handlebarsValueExpression, formFieldIsReadable, formFieldIsWritable, formFieldIsRequired);\r\n        } else if (formFieldType.name === 'long') {\r\n            return this.generateLongTypeField(formFieldVariableName, formFieldDisplayName, handlebarsValueExpression,\r\n                formFieldIsReadable, formFieldIsWritable, formFieldIsRequired);\r\n        } else if (formFieldType.name === 'boolean') {\r\n            return this.generateBooleanTypeField(formFieldVariableName, formFieldDisplayName, handlebarsValueExpression,\r\n                formFieldIsReadable, formFieldIsWritable, formFieldIsRequired);\r\n        } else if (formFieldType.name === 'date') {\r\n            formFieldDateFormat = formFieldType.datePattern;\r\n            return this.generateDateTypeField(formFieldVariableName, formFieldDisplayName, handlebarsValueExpression,\r\n                formFieldIsReadable, formFieldIsWritable, formFieldIsRequired, formFieldDateFormat);\r\n        }\r\n    };\r\n\r\n    obj.generateDateTypeField = function(elementName, elementDisplayName, value, isReadable, isWritable, isRequired,\r\n                                         dateFormat) {\r\n        var fieldTagStartPart = '<div class=\"field\">', fieldTagEndPart = '</div>', label = \"\", input, dateFormatInput,\r\n            validatorMessageTag;\r\n        if (isReadable) {\r\n            label = this.generateLabel(elementDisplayName);\r\n        }\r\n\r\n        if (value && value.match(new RegExp(\"^\\\\{\\\\{variables\\\\.\"))) {\r\n            value = \"{{date \" + value.substring(2).slice(-2) + \" '\" + dateFormat + \"'}}\";\r\n        }\r\n\r\n        dateFormatInput = this.generateInput(\"dateFormat\", dateFormat, false, false, false);\r\n        input = this.generateInput(elementName, value, isReadable, isWritable, isRequired, \"formattedDate\");\r\n        validatorMessageTag = isReadable && isWritable ? obj.standardErrorSpan + obj.standardErrorMessageTag : '';\r\n        return fieldTagStartPart + label + input + validatorMessageTag + dateFormatInput + fieldTagEndPart;\r\n    };\r\n\r\n    obj.generateBooleanTypeField = function(elementName, elementDisplayName, value, isReadable, isWritable,\r\n                                            isRequired) {\r\n        var map = {'true' : $.t('common.form.true'), 'false' : $.t('common.form.false'), '__null' : ' '};\r\n        return obj.generateEnumTypeField(elementName, elementDisplayName, map, value, isReadable, isWritable,\r\n            isRequired);\r\n    };\r\n\r\n    obj.generateEnumTypeField = function(elementName, elementDisplayName, variableMap, value, isReadable, isWritable,\r\n                                         isRequired) {\r\n        var fieldTagStartPart = '<div class=\"field\">', fieldTagEndPart = '</div>', label = '', select,\r\n            additionalParams='', selectedKey, validatorMessageTag;\r\n\r\n        additionalParams = isRequired ? additionalParams + ' data-validator=\"required\" ' : '';\r\n        additionalParams = !isWritable ? additionalParams + ' disabled=\"disabled\" ' : additionalParams;\r\n        additionalParams = !isReadable ? additionalParams + ' style=\"display: none\" ' : additionalParams;\r\n\r\n        selectedKey = value ? value : '__null';\r\n        if (selectedKey.match(new RegExp(\"^\\\\{\\\\{variables\\\\.\"))) {\r\n            selectedKey = selectedKey.substring(2).slice(-2);\r\n        } else {\r\n            selectedKey = \"'\" + selectedKey + \"'\";\r\n        }\r\n        variableMap.__null = ' ';\r\n        if (isReadable) {\r\n            label = this.generateLabel(elementDisplayName);\r\n        }\r\n        select = \"{{select '\" + JSON.stringify(variableMap) + \"' '\" + elementName + \"' \" + selectedKey + \" '' '\"\r\n            + additionalParams + \"' }}\";\r\n        validatorMessageTag = isRequired && isWritable ? obj.standardErrorSpan + obj.standardErrorMessageTag : '';\r\n        return fieldTagStartPart + label + select + validatorMessageTag + fieldTagEndPart;\r\n    };\r\n\r\n    obj.generateStringTypeField = function(elementName, elementDisplayName, handlebarsValueExpression, isReadable,\r\n                                           isWritable, isRequired) {\r\n        var fieldTagStartPart = '<div class=\"field\">', fieldTagEndPart = '</div>', label = \"\", input,\r\n            validatorMessageTag;\r\n        if (isReadable) {\r\n            label = this.generateLabel(elementDisplayName);\r\n        }\r\n        input = this.generateInput(elementName, handlebarsValueExpression, isReadable, isWritable, isRequired);\r\n        validatorMessageTag = isRequired && isWritable ? obj.standardErrorSpan + obj.standardErrorMessageTag : '';\r\n        return fieldTagStartPart + label + input + validatorMessageTag + fieldTagEndPart;\r\n    };\r\n\r\n    obj.generateLongTypeField = function(elementName, elementDisplayName, handlebarsValueExpression, isReadable,\r\n                                         isWritable, isRequired) {\r\n        var fieldTagStartPart = '<div class=\"field\">', fieldTagEndPart = '</div>', label = \"\", input,\r\n            validatorMessageTag;\r\n        if (isReadable) {\r\n            label = this.generateLabel(elementDisplayName);\r\n        }\r\n        input = this.generateInput(elementName, handlebarsValueExpression, isReadable, isWritable, isRequired, \"long\");\r\n        validatorMessageTag = isReadable && isWritable ?  obj.standardErrorSpan + obj.standardErrorMessageTag : '';\r\n        return fieldTagStartPart + label + input + validatorMessageTag + fieldTagEndPart;\r\n    };\r\n\r\n    obj.generateInput = function(elementName, value, isReadable, isWritable, isRequired, validatorType) {\r\n        var isDisabledPart = isWritable ? '' : 'disabled=\"disabled\"' ,\r\n            isHiddenPart = isReadable ? '' : 'style=\"display: none\"', isRequiredPart, validatorName = 'required';\r\n\r\n        if (validatorType) {\r\n            if (isRequired) {\r\n                validatorName = validatorName + \"_\" + validatorType;\r\n            } else {\r\n                validatorName = validatorType;\r\n            }\r\n        }\r\n        isRequiredPart = isRequired || validatorType ? 'data-validator=\"' + validatorName + '\"' : '';\r\n        if (!value) {\r\n            value = \"\";\r\n        }\r\n        return '<input type=\"text\" name=\"' + elementName + '\" value=\"' + value +'\" ' + isDisabledPart + ' '\r\n            + isHiddenPart + ' ' + isRequiredPart + ' />';\r\n    };\r\n\r\n    obj.generateLabel = function(labelValue) {\r\n        return '<label class=\"light\">' + labelValue +'</label>';\r\n    };\r\n\r\n    obj.buildPropertyTypeMap = function(formProperties) {\r\n        var typeName, datePattern, formFieldType, formFieldDescription, result = {}, i, propName;\r\n        for (i = 0; i < formProperties.length; i++) {\r\n            formFieldDescription = formProperties[i];\r\n            if (formFieldDescription._id !== '_formGenerationTemplate') {\r\n                formFieldType = formFieldDescription.type;\r\n                if (!formFieldType || !formFieldType.name || formFieldType.name === '') {\r\n                    typeName = 'string';\r\n                } else {\r\n                    typeName = formFieldType.name;\r\n                    if (typeName === 'date') {\r\n                        datePattern = formFieldType.datePattern;\r\n                    }\r\n                }\r\n                propName = formFieldDescription.variableName\r\n                    ? formFieldDescription.variableName : formFieldDescription._id;\r\n                result[propName] = {type: typeName, datePattern: datePattern};\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    obj.changeParamsToMeetTheirTypes = function(params, propertyTypeMapping) {\r\n        var param, typeName, paramValue, dateFormat, date;\r\n        for (param in params) {\r\n            typeName = propertyTypeMapping[param].type;\r\n            paramValue = params[param];\r\n            if (\"date\" === typeName) {\r\n                if (paramValue === '') {\r\n                    params[param] = null;\r\n                } else {\r\n                    dateFormat = propertyTypeMapping[param].datePattern;\r\n                    date = dateUtil.parseDateString(paramValue, dateFormat);\r\n                    params[param] = date;\r\n                }\r\n            } else if (\"long\" === typeName) {\r\n                if (paramValue === '') {\r\n                    params[param] = null;\r\n                } else {\r\n                    params[param] = parseInt(paramValue, 10);\r\n                }\r\n            } else if (\"boolean\" === typeName) {\r\n                if (paramValue === '') {\r\n                    params[param] = null;\r\n                } else {\r\n                    params[param] = \"true\"===paramValue ? true : false ;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return obj;\r\n});"]}