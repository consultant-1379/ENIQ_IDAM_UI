{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/components/ChangesPending.js"],"names":["define","$","_","AbstractView","changesPendingInstance","ChangesPendingWidget","extend","template","noBaseTemplate","events","render","args","callback","defaults","alertClass","icon","title","t","message","undo","undoMsg","watchedObj","changes","undoCallback","noop","data","clone","element","watchedProperties","keys","parentRender","bind","checkChanges","reRender","el","$el","delegateEvents","e","preventDefault","pick","makeChanges","saveChanges","toggle","isChanged","some","prop","compareObjects","property","obj1","obj2","val1","val2","deleteEmptyProperties","obj","each","key","isEmpty","isNumber","isBoolean","isObject","isEqual","watchChanges","widget"],"mappings":"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","file":"ChangesPending.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2015-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"underscore\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractView\"\r\n\r\n], function ($, _, AbstractView) {\r\n\r\n    var changesPendingInstance = {},\r\n        ChangesPendingWidget = AbstractView.extend({\r\n            template: \"templates/common/ChangesPendingTemplate.html\",\r\n            noBaseTemplate: true,\r\n            events: {\r\n                \"click .undo-changes\": \"undo\"\r\n            },\r\n\r\n            /**\r\n             * @param {object} args\r\n             * @param {function} [callback] - Called after render\r\n             */\r\n            render: function (args, callback) {\r\n                var defaults = {\r\n                    alertClass: \"alert-warning\",\r\n                    icon: \"fa-exclamation-circle\",\r\n                    title: $.t(\"templates.user.ChangesPendingTemplate.changesPending\"),\r\n                    message: \"\",\r\n                    undo: false,\r\n                    undoMsg: $.t(\"templates.user.ChangesPendingTemplate.undo\"),\r\n                    watchedObj: {},\r\n                    changes: null,\r\n                    undoCallback: _.noop\r\n                };\r\n\r\n                this.data = _.extend(defaults, _.clone(args, true));\r\n                this.element = args.element;\r\n\r\n                if (!this.data.watchedProperties) {\r\n                    this.data.watchedProperties = _.keys(this.data.watchedObj);\r\n                }\r\n\r\n                if (!this.data.changes) {\r\n                    this.data.changes = _.clone(this.data.watchedObj, true);\r\n                }\r\n\r\n                this.parentRender(_.bind(function () {\r\n                    this.checkChanges();\r\n\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                }, this));\r\n            },\r\n\r\n            /**\r\n             * We need this clean up for when a view is rerendered and the original element\r\n             * is no longer present. This will set a new element and redeclare all associated events.\r\n             *\r\n             * @param {object} [el] - jQuery element to render widget to\r\n             */\r\n            reRender: function (el) {\r\n                this.$el = el;\r\n                this.data.element = el;\r\n                this.render(this.data, _.noop);\r\n                this.delegateEvents();\r\n            },\r\n\r\n            /**\r\n             * When undo is clicked the changes object will be overwritten and the undo callback called.\r\n             *\r\n             * @param {object} e\r\n             */\r\n            undo: function (e) {\r\n                e.preventDefault();\r\n                this.data.changes = _.clone(this.data.watchedObj, true);\r\n                if (this.data.undoCallback) {\r\n                    this.data.undoCallback(_.pick(_.clone(this.data.watchedObj, true), this.data.watchedProperties));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Call to update widget with new data that has yet to be saved.\r\n             *\r\n             * @param {object} changes - The object that contains changes from the base object this.data.watchedObj\r\n             */\r\n            makeChanges: function (changes) {\r\n                this.data.changes = _.clone(changes, true);\r\n                this.checkChanges();\r\n            },\r\n\r\n            /**\r\n             * Call to save your changes over to the watchedObj.\r\n             */\r\n            saveChanges: function () {\r\n                this.data.watchedObj = _.clone(this.data.changes, true);\r\n                this.checkChanges();\r\n            },\r\n\r\n            /**\r\n             * Called when a change is made to this.data.changes or this.data.watchedObj\r\n             */\r\n            checkChanges: function () {\r\n                $(this.element).toggle(this.isChanged());\r\n            },\r\n\r\n            /**\r\n             * Called to check if changes were done\r\n             */\r\n            isChanged: function () {\r\n                var isChanged = _.some(this.data.watchedProperties, function (prop) {\r\n                    return !this.compareObjects(prop, this.data.watchedObj, this.data.changes);\r\n                }, this);\r\n\r\n                return isChanged;\r\n            },\r\n\r\n            /**\r\n             * Compares two objects for equality on a given property.\r\n             *\r\n             * @param {string} property\r\n             * @param {object} obj1\r\n             * @param {object} obj2\r\n             * @returns {boolean} whether two passed objects are equal\r\n             */\r\n            compareObjects: function(property, obj1, obj2) {\r\n                var val1 = _.clone(obj1[property], true),\r\n                    val2 = _.clone(obj2[property], true),\r\n                    deleteEmptyProperties = function (obj) {\r\n                        _.each(obj, function(prop, key) {\r\n                            if (_.isEmpty(prop) && !_.isNumber(prop) && !_.isBoolean(prop)) {\r\n                                delete obj[key];\r\n                            }\r\n                        });\r\n                    };\r\n\r\n                if (_.isObject(val1) && _.isObject(val2)) {\r\n                    deleteEmptyProperties(val1);\r\n                    deleteEmptyProperties(val2);\r\n                } else if (!val1 && !val2 && val1 === val2) {\r\n                    return true;\r\n                }\r\n\r\n                return _.isEqual(val1, val2);\r\n            }\r\n        });\r\n\r\n    /**\r\n     * @param {object} args\r\n     * @param {object} args.element - the jQuery element to render the widget to\r\n     * @param {object} args.watchedObj - the object containing properties to watch for changes\r\n     * @param {array} [args.watchedProperties=_.keys(args.watchedObj)] - a list of property names to watch for changes,\r\n     *                                                                   defaults to watchedObj keys if not present\r\n     * @param {boolean} [args.undo=false] - enables the undo functionality\r\n     * @param {string} [args.undoMsg=\"Undo Changes\"] - the text on the undo link\r\n     * @param {string} [args.undoCallback] - The function called when the undo link is clicked\r\n     * @param {string} [args.title=\"Changes Pending\"] - bolded title of the widget\r\n     * @param {string} [args.message=\"\"] - additional message\r\n     * @param {string} [args.icon=\"fa-exclamation-circle\"] - font awesome icon classname\r\n     * @param {string} [args.alertClass=\"alert-warning\"] - the classname to apply to the whole widget\r\n     * @param {object} [args.changes] - contains the changes from watchedObj, this is usually not set manually\r\n     * @param {object} [callback] - called after render\r\n     * @returns {object} - An instance of the changes pending widget\r\n     */\r\n    changesPendingInstance.watchChanges = function (args, callback) {\r\n        var widget = new ChangesPendingWidget();\r\n        widget.render(args, callback);\r\n        return widget;\r\n    };\r\n\r\n    return changesPendingInstance;\r\n});"]}