{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/admin/utils/RedirectToLegacyConsole.jsm"],"names":["commonTasks","service","host","context","getJATOSession","realm","serviceCall","url","dataType","then","data","session","match","window","location","href","redirectToGlobalTab","tabIndex","redirectToRealmTab","dataStores","privileges","subjects","sts","global","federation","link","query","indexOf","encodeURIComponent","redirectToAgentsTab","agents","java","web","rcs"],"mappings":"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","file":"RedirectToLegacyConsole.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport AbstractDelegate from \"org/forgerock/commons/ui/common/main/AbstractDelegate\";\nimport Constants from \"org/forgerock/commons/ui/common/util/Constants\";\n\nconst service = new AbstractDelegate(`${Constants.host}${Constants.context}`);\n\nconst getJATOSession = (realm) => service.serviceCall({\n    url: `/realm/RMRealm?RMRealm.tblDataActionHref=${realm}&requester=XUI`,\n    dataType: \"html\"\n}).then((data) => {\n    const session = data.match(/jato.pageSession=(.*?)\"/)[1];\n\n    if (!session) {\n        window.location.href = `${Constants.context}/UI/Login?service=adminconsoleservice`;\n    }\n\n    return session;\n});\nconst redirectToGlobalTab = (tabIndex) => getJATOSession(\"/\").then((session) => {\n    window.location.href = `${Constants.context}/task/Home?Home.tabCommon.TabHref=${\n        tabIndex}&jato.pageSession=${session}&requester=XUI`;\n});\n\nconst redirectToRealmTab = (realm, tabIndex) => getJATOSession(realm).then((session) => {\n    window.location.href = `${Constants.context}/realm/RealmProperties?RMRealm.tblDataActionHref=${\n        realm}&RealmProperties.tabCommon.TabHref=${tabIndex}&jato.pageSession=${session}&requester=XUI`;\n});\n\nexport const realm = {\n    dataStores: (realm) => redirectToRealmTab(realm, 14),\n    privileges: (realm) => redirectToRealmTab(realm, 15),\n    subjects: (realm) => redirectToRealmTab(realm, 17),\n    sts: (realm) => redirectToRealmTab(realm, 19)\n};\n\nexport const global = {\n    federation: () => redirectToGlobalTab(2)\n};\n\nexport function commonTasks (realm, link) {\n    const query = link.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n    window.location.href = `${Constants.context}/${link}${query}realm=${encodeURIComponent(realm)}`;\n}\n\nconst redirectToAgentsTab = (realm, tabIndex) => getJATOSession(realm).then((session) => {\n    window.location.href = `${Constants.context}/agentconfig/Agents?Agents.tabCommon.TabHref=${\n        tabIndex}&jato.pageSession=${session}&requester=XUI`;\n});\n\nexport const agents = {\n    java: (realm) => redirectToAgentsTab(realm, 181),\n    web: (realm) => redirectToAgentsTab(realm, 180),\n    rcs: (realm) => redirectToAgentsTab(realm, 184)\n};\n"]}