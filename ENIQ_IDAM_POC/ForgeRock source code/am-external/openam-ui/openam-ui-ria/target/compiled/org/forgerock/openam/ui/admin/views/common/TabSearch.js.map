{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/common/TabSearch.js"],"names":["define","_","$","Backbone","Handlebars","throwOnInvalidOptions","options","isObject","Error","onChange","properties","createSelectize","element","callback","selectize","searchField","value","optgroup","clear","render","item","text","option","optgroup_header","label","populateOptionsFromJsonSchemaGroup","each","group","groupName","addOptionGroup","title","key","addOption","refreshOptions","TabSearch","View","extend","initialize","template","data","cssClass","placeholder","html","compile","$el","find"],"mappings":"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","file":"TabSearch.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\n/**\n * @module org/forgerock/openam/ui/admin/views/common/TabSearch\n */\ndefine([\n    \"lodash\",\n    \"jquery\",\n    \"backbone\",\n    \"handlebars\",\n    \"selectize\"\n], (_, $, Backbone, Handlebars) => {\n    function throwOnInvalidOptions (options) {\n        if (!options || !_.isObject(options)) {\n            throw new Error(\"[TabSearch] No \\\"options\\\" object found.\");\n        } else {\n            if (!options.onChange) {\n                throw new Error(\"[TabSearch] No \\\"options.onChange\\\" function found.\");\n            }\n            if (!options.properties) {\n                throw new Error(\"[TabSearch] No \\\"options.properties\\\" object found.\");\n            }\n        }\n    }\n\n    function createSelectize (element, callback) {\n        element.selectize({\n            searchField: [\"text\", \"value\"],\n            onChange (value) {\n                const optgroup = this.options[value].optgroup;\n                callback(optgroup, value);\n                this.clear(true);\n            },\n            render: {\n                item (item) {\n                    return `<div>${item.text}</div>`;\n                },\n                option (item) {\n                    return `<div><div>${item.text}</div><span class=\"text-muted small\"><em>${\n                        item.value}</em></span></div></div>`;\n                },\n                optgroup_header (item) { // eslint-disable-line camelcase\n                    return `<div class=\"optgroup-header\"><span class=\"text-primary\">${item.label}</span></div>`;\n                }\n            }\n        });\n\n        return element[0].selectize;\n    }\n\n    function populateOptionsFromJsonSchemaGroup (properties, selectize) {\n        _.each(properties, (group, groupName) => {\n            selectize.addOptionGroup(groupName, {\n                label: group.title || \" \"\n            });\n            _.each(group.properties, (option, key) => {\n                selectize.addOption({\n                    text: option.title,\n                    value: key,\n                    optgroup: groupName\n                });\n            });\n        });\n        selectize.refreshOptions(false);\n    }\n\n    const TabSearch = Backbone.View.extend({\n        /**\n         * @param  {object} options Contains the options which are passed in\n         * @param  {object} options.properties Contains the list of searchable properties\n         * @param  {function} options.onChangeCallback. The function that is called when an option is selected,\n         */\n        initialize (options) {\n            throwOnInvalidOptions(options);\n            this.options = options;\n        },\n\n        render () {\n            const template = \"{{> form/_Select}}\";\n            const data = {\n                cssClass:\"am-selectize-search\",\n                placeholder: \"common.form.search\",\n                data: \"search\"\n            };\n            const html = Handlebars.compile(template)(data);\n            this.$el.html(html);\n            const selectize = createSelectize(this.$el.find(\"[data-search]\"), this.options.onChange);\n            populateOptionsFromJsonSchemaGroup(this.options.properties, selectize);\n\n            return this;\n        }\n    });\n\n    return TabSearch;\n});\n"]}