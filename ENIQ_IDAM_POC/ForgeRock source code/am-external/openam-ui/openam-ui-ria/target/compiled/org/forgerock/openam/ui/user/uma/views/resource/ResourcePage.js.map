{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/user/uma/views/resource/ResourcePage.js"],"names":["define","$","_","AbstractView","Backbone","Backgrid","BackgridUtils","BootstrapDialog","CommonShare","Constants","EventManager","LabelTreeNavigationView","Messages","Router","UIUtils","UMAService","UMAResourceSetWithPolicy","isUserLabel","label","type","getLabelForId","labels","labelId","find","otherLabel","_id","getLabelForName","name","createLabels","labelNames","creationPromises","map","labelName","create","when","then","length","arguments","arg","getAllLabels","all","result","ResourcePage","extend","initialize","model","template","selectizeTemplate","events","onModelError","response","console","error","responseJSON","code","reason","message","onModelChange","render","undefined","get","onUnshare","event","currentTarget","hasClass","preventDefault","self","show","TYPE_DANGER","title","t","closable","buttons","action","dialog","close","id","cssClass","enableButtons","getButton","text","destroy","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST","toBeCreated","addMessage","always","onShare","shareView","renderDialog","share","updateUnshareButton","onToggleStarred","starredLabelId","allLabels","starButton","$el","starIcon","toggleStarred","removeClass","addClass","attr","save","isStarred","contains","renderLabelsOptions","labelsSelect","selectize","plugins","delimiter","persist","hideSelected","onChange","prop","item","labelField","valueField","searchField","disable","updateLabelOptions","hide","labelsSelectize","getLabelSelectize","userLabels","filter","resourceUserLabelNames","partial","sortBy","pluck","value","clearOptions","addOption","clear","each","addItem","renderSelectizeCell","promise","Deferred","SelectizeCell","fillTemplateWithData","Cell","className","select","html","dropdownParent","items","options","toJSON","positionDropdown","$control","offset","settings","position","top","outerHeight","left","outerWidth","$dropdown","css","width","delegateEvents","resolve","args","callback","last","isCurrentlyFetchingData","renderWithModel","findOrCreate","fetch","done","fail","collection","grid","RevokeCell","data","icon","TemplateCell","revoke","remove","Collection","has","Grid","columns","cell","editable","sortable","headerCell","ClassHeaderCell","emptyText","parentRender","tooltip","append","el","parent","starredLabel","toggleClass","stopEditingLabels","editLabels","enable","focus","disableLabelControls","enableLabelControls","submitLabelsChanges","selectedUserLabelNames","getValue","userLabelNames","newUserLabelNames","difference","existingUserLabelNames","intersection","existingUserLabelIds","existingNonUserLabelIds","reject","existingLabelIds","concat","newIds","set","addUserLabels","discardLabelsChanges"],"mappings":"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","file":"ResourcePage.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"backbone\",\n    \"org/forgerock/commons/ui/common/backgrid/Backgrid\",\n    \"org/forgerock/openam/ui/common/util/BackgridUtils\",\n    \"org/forgerock/commons/ui/common/components/BootstrapDialog\",\n    \"org/forgerock/openam/ui/user/uma/views/share/CommonShare\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/openam/ui/user/uma/views/resource/LabelTreeNavigationView\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/user/uma/services/UMAService\",\n    \"org/forgerock/openam/ui/user/uma/models/UMAResourceSetWithPolicy\",\n\n    // jquery dependencies\n    \"selectize\"\n], function ($, _, AbstractView, Backbone, Backgrid, BackgridUtils, BootstrapDialog, CommonShare, Constants,\n             EventManager, LabelTreeNavigationView, Messages, Router, UIUtils, UMAService, UMAResourceSetWithPolicy) {\n    function isUserLabel (label) {\n        return label.type === \"USER\";\n    }\n    function getLabelForId (labels, labelId) {\n        return _.find(labels, function (otherLabel) {\n            return otherLabel._id === labelId;\n        });\n    }\n    function getLabelForName (labels, name) {\n        return _.find(labels, function (otherLabel) {\n            return otherLabel.name === name;\n        });\n    }\n    function createLabels (labelNames) {\n        var creationPromises = _.map(labelNames, function (labelName) {\n            return UMAService.labels.create(labelName, \"USER\");\n        });\n        return $.when(...creationPromises).then(function () {\n            if (creationPromises.length === 1) {\n                return [arguments[0]._id];\n            } else {\n                return _.map(arguments, function (arg) {\n                    return arg[0]._id;\n                });\n            }\n        });\n    }\n    function getAllLabels () {\n        return UMAService.labels.all().then(function (labels) {\n            return labels.result;\n        });\n    }\n    var ResourcePage = AbstractView.extend({\n        initialize () {\n            // TODO: AbstarctView.prototype.initialize.call(this);\n            this.model = null;\n        },\n        template: \"templates/user/uma/views/resource/ResourceTemplate.html\",\n        selectizeTemplate: \"templates/user/uma/backgrid/cell/SelectizeCell.html\",\n        events: {\n            \"click button#starred\": \"onToggleStarred\",\n            \"click button#share\": \"onShare\",\n            \"click li#unshare\": \"onUnshare\",\n            \"click button#editLabels\": \"editLabels\",\n            \"click .page-toolbar .selectize-input.disabled\": \"editLabels\",\n            \"click button#saveLabels\": \"submitLabelsChanges\",\n            \"click button#discardLabels\": \"discardLabelsChanges\"\n        },\n        onModelError (model, response) {\n            console.error(`Unrecoverable load failure UMAResourceSetWithPolicy. ${response.responseJSON.code} (${\n                response.responseJSON.reason\n            })${response.responseJSON.message}`);\n        },\n        onModelChange (model) {\n            this.render([undefined, model.get(\"_id\")]);\n        },\n        onUnshare (event) {\n            if ($(event.currentTarget).hasClass(\"disabled\")) { return false; }\n            event.preventDefault();\n\n            var self = this;\n\n            BootstrapDialog.show({\n                type: BootstrapDialog.TYPE_DANGER,\n                title: self.model.get(\"name\"),\n                message: $.t(\"uma.resources.show.revokeAllMessage\"),\n                closable: false,\n                buttons: [{\n                    label: $.t(\"common.form.cancel\"),\n                    action (dialog) {\n                        dialog.close();\n                    }\n                }, {\n                    id: \"btnOk\",\n                    label: $.t(\"common.form.ok\"),\n                    cssClass: \"btn-primary btn-danger\",\n                    action (dialog) {\n                        dialog.enableButtons(false);\n                        dialog.getButton(\"btnOk\").text($.t(\"common.form.working\"));\n                        self.model.get(\"policy\").destroy().then(function () {\n                            EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"revokeAllPoliciesSuccess\");\n                            self.onModelChange(self.model);\n                            self.model.toBeCreated = true;\n                        }, function (response) {\n                            Messages.addMessage({\n                                response,\n                                type: Messages.TYPE_DANGER\n                            });\n                        }).always(function () {\n                            dialog.close();\n                        });\n                    }\n                }]\n            });\n        },\n        onShare () {\n            var shareView = new CommonShare();\n            shareView.renderDialog({\n                _id: this.model.id,\n                toBeCreated: this.model.toBeCreated,\n                share: () => {\n                    this.model.toBeCreated = false;\n                    this.updateUnshareButton();\n                }\n            });\n        },\n        onToggleStarred () {\n            var self = this,\n                starredLabelId = _.find(this.allLabels, { type: \"STAR\" })._id,\n                starButton = self.$el.find(\"#starred\"),\n                starIcon = starButton.find(\"i\");\n\n            self.model.toggleStarred(starredLabelId);\n            starIcon.removeClass(\"fa-star-o fa-star\");\n            starIcon.addClass(\"fa-refresh fa-spin\");\n            starButton.attr(\"disabled\", true);\n\n            self.model.save().always(function () {\n                var isStarred = _.contains(self.model.get(\"labels\"), starredLabelId);\n                starButton.attr(\"disabled\", false);\n                starIcon.removeClass(\"fa-refresh fa-spin\");\n                starIcon.addClass(isStarred ? \"fa-star\" : \"fa-star-o\");\n            });\n        },\n        renderLabelsOptions () {\n            var self = this,\n                labelsSelect = this.$el.find(\"#labels select\").selectize({\n                    plugins: [\"restore_on_backspace\"],\n                    delimiter: false,\n                    persist: false,\n                    create: true,\n                    hideSelected: true,\n                    onChange () {\n                        self.$el.find(\"button#saveLabels\").prop(\"disabled\", false);\n                    },\n                    render: {\n                        item (item) {\n                            return `<div data-value=\"${item.name}\" class=\"item\">${item.name}</div>\"`;\n                        }\n                    },\n                    labelField: \"name\",\n                    valueField: \"name\",\n                    searchField: [\"name\"]\n                })[0];\n            labelsSelect.selectize.disable();\n            this.updateLabelOptions();\n            this.$el.find(\".page-toolbar .btn-group\").hide();\n        },\n        updateLabelOptions () {\n            var labelsSelectize = this.getLabelSelectize(),\n                userLabels = _.filter(this.allLabels, isUserLabel),\n                resourceUserLabelNames = _(this.model.get(\"labels\"))\n                    .map(_.partial(getLabelForId, this.allLabels))\n                    .filter(isUserLabel)\n                    .sortBy(\"name\")\n                    .pluck(\"name\")\n                    .value();\n            labelsSelectize.clearOptions();\n            labelsSelectize.addOption(userLabels);\n            labelsSelectize.clear();\n            _.each(resourceUserLabelNames, function (item) {\n                labelsSelectize.addItem(item);\n            });\n        },\n        renderSelectizeCell () {\n            var promise = $.Deferred(),\n                SelectizeCell;\n\n            UIUtils.fillTemplateWithData(this.selectizeTemplate, {}, function (template) {\n                SelectizeCell = Backgrid.Cell.extend({\n                    className: \"selectize-cell\",\n                    render () {\n                        var select;\n\n                        this.$el.html(template);\n                        select = this.$el.find(\"select\").selectize({\n                            create: false,\n                            delimiter: false,\n                            dropdownParent: \"#uma\",\n                            hideSelected: true,\n                            persist: false,\n                            labelField: \"name\",\n                            valueField: \"id\",\n                            items: this.model.get(\"scopes\").pluck(\"name\"),\n                            options: this.model.get(\"scopes\").toJSON()\n                        })[0];\n                        select.selectize.disable();\n\n                        /* This an extention of the original positionDropdown method within Selectize. The override is\n                         * required because using the dropdownParent 'body' places the dropdown out of scope of the\n                         * containing backbone view. However adding the dropdownParent as any other element,\n                         * has problems due the offsets and/positioning being incorrecly calucaluted in orignal\n                         * positionDropdown method.\n                         */\n                        select.selectize.positionDropdown = function () {\n                            var $control = this.$control,\n                                offset = this.settings.dropdownParent ? $control.offset() : $control.position();\n\n                            if (this.settings.dropdownParent) {\n                                offset.top -= $control.outerHeight(true) * 2 +\n                                              $(this.settings.dropdownParent).position().top;\n                                offset.left -= $(this.settings.dropdownParent).offset().left +\n                                               $(this.settings.dropdownParent).outerWidth() -\n                                               $(this.settings.dropdownParent).outerWidth(true);\n                            } else {\n                                offset.top += $control.outerHeight(true);\n                            }\n\n                            this.$dropdown.css({\n                                width: $control.outerWidth(),\n                                top: offset.top,\n                                left: offset.left\n                            });\n                        };\n\n                        this.delegateEvents();\n                        return this;\n                    }\n                });\n                promise.resolve(SelectizeCell);\n            });\n            return promise;\n        },\n\n        render (args, callback) {\n            var id = _.last(args), self = this;\n\n            if (this.model && this.id === id) {\n                if (!this.isCurrentlyFetchingData) {\n                    this.renderWithModel(callback);\n                }\n            } else {\n                this.isCurrentlyFetchingData = true;\n                $.when(\n                    getAllLabels(),\n                    UMAResourceSetWithPolicy.findOrCreate({ _id: id }).fetch()\n                ).done(function (allLabels, model) {\n                    // Ensure we don't render any previous requests that were cancelled.\n                    if (model.id === self.id) {\n                        self.allLabels = allLabels;\n                        self.model = model;\n                        self.isCurrentlyFetchingData = false;\n                        self.renderWithModel(callback);\n                    }\n                }).fail(this.onModelError);\n            }\n            this.id = id;\n        },\n        renderWithModel (callback) {\n            var collection, grid, RevokeCell, self = this;\n\n            /**\n             * FIXME: Ideally the data needs to the be whole model, but I'm told it's also global so we're\n             * copying in just the attributes I need ATM\n             */\n            this.data = {};\n            this.data.name = this.model.get(\"name\");\n            this.data.icon = this.model.get(\"icon_uri\");\n\n            // FIXME: Re-enable filtering and pagination\n            //     UserPoliciesCollection = Backbone.PageableCollection.extend({\n            //         url: URLHelper.substitute(\"__api__/users/__username__/oauth2/resourcesets/\" + args[0]),\n            //         parseRecords: function (data, options) {\n            //             return data.policy.permissions;\n            //         },\n            //         sync: backgridUtils.sync\n            //     });\n\n            RevokeCell = BackgridUtils.TemplateCell.extend({\n                template: \"templates/user/uma/backgrid/cell/RevokeCell.html\",\n                events: {\n                    \"click #revoke\": \"revoke\"\n                },\n                revoke () {\n                    self.model.get(\"policy\").get(\"permissions\").remove(this.model);\n                    self.model.get(\"policy\").save().done(function () {\n                        self.onModelChange(self.model);\n                    });\n                },\n                className: \"fr-col-btn-1\"\n            });\n\n            /**\n             * There *might* be no policy object present (if all the permissions were removed) so we're\n             * checking for this and creating an empty collection if there is no policy\n             */\n            collection = new Backbone.Collection();\n            if (this.model.has(\"policy\")) {\n                collection = this.model.get(\"policy\").get(\"permissions\");\n            }\n\n            this.renderSelectizeCell().done(function (SelectizeCell) {\n                grid = new Backgrid.Grid({\n                    columns: [{\n                        name: \"subject\",\n                        label: $.t(\"uma.resources.show.grid.0\"),\n                        cell: \"string\",\n                        editable: false\n                    }, {\n                        name: \"permissions\",\n                        label: $.t(\"uma.resources.show.grid.2\"),\n                        cell: SelectizeCell,\n                        editable: false,\n                        sortable: false\n                    }, {\n                        name: \"edit\",\n                        label: \"\",\n                        cell: RevokeCell,\n                        editable: false,\n                        sortable: false,\n                        headerCell: BackgridUtils.ClassHeaderCell.extend({\n                            className: \"fr-col-btn-1\"\n                        })\n                    }],\n                    collection,\n                    emptyText: $.t(\"console.common.noResults\"),\n                    className: \"backgrid table\"\n                });\n\n                // FIXME: Re-enable filtering and pagination\n                // paginator = new Backgrid.Extension.Paginator({\n                //     collection: this.model.get('policy').get('permissions'),\n                //     windowSize: 3\n                // });\n\n                self.parentRender(function () {\n                    self.$el.find(\"[data-toggle=\\\"tooltip\\\"]\").tooltip();\n                    self.renderLabelsOptions();\n\n                    self.updateUnshareButton();\n\n                    self.$el.find(\".table-container\").append(grid.render().el);\n                    // FIXME: Re-enable filtering and pagination\n                    // self.$el.find(\"#paginationContainer\").append(paginator.render().el);\n\n                    self.$el.find(\"#umaShareImage img\").error(function () {\n                        $(this).parent().addClass(\"fa-file-image-o no-image\");\n                    });\n\n                    var starredLabel = _.find(this.allLabels, { type: \"STAR\" }),\n                        isStarred = _.contains(this.model.get(\"labels\"), starredLabel._id);\n\n                    if (isStarred) {\n                        self.$el.find(\"#starred i\").toggleClass(\"fa-star-o fa-star\");\n                    }\n\n                    if (callback) { callback(); }\n                });\n            });\n        },\n        getLabelSelectize () {\n            return this.$el.find(\"#labels select\")[0].selectize;\n        },\n        stopEditingLabels () {\n            var labelsSelect = this.getLabelSelectize();\n            labelsSelect.disable();\n            this.$el.find(\".page-toolbar .btn-group\").hide();\n            this.$el.find(\"#editLabels\").show();\n            this.$el.find(\"#labels .selectize-control\").addClass(\"pull-left\");\n        },\n        editLabels () {\n            var labelsSelect = this.getLabelSelectize();\n            labelsSelect.enable();\n            labelsSelect.focus();\n            this.$el.find(\"#editLabels\").hide();\n            this.$el.find(\"#labels .selectize-control\").removeClass(\"pull-left\");\n            this.$el.find(\"button#saveLabels\").prop(\"disabled\", true);\n            this.$el.find(\"button#discardLabels\").prop(\"disabled\", false);\n            this.$el.find(\".page-toolbar .btn-group\").show();\n        },\n        disableLabelControls () {\n            var labelsSelect = this.getLabelSelectize();\n            labelsSelect.disable();\n            this.$el.find(\"button#saveLabels\").prop(\"disabled\", true);\n            this.$el.find(\"button#discardLabels\").prop(\"disabled\", true);\n        },\n        enableLabelControls () {\n            var labelsSelect = this.getLabelSelectize();\n            labelsSelect.enable();\n            this.$el.find(\"button#saveLabels\").prop(\"disabled\", false);\n            this.$el.find(\"button#discardLabels\").prop(\"disabled\", false);\n        },\n        submitLabelsChanges () {\n            var self = this,\n                labelsSelectize = this.getLabelSelectize(),\n                selectedUserLabelNames = labelsSelectize.getValue(),\n                userLabels = _.filter(this.allLabels, isUserLabel),\n                userLabelNames = _.pluck(userLabels, \"name\"),\n                newUserLabelNames = _.difference(selectedUserLabelNames, userLabelNames),\n                existingUserLabelNames = _.intersection(selectedUserLabelNames, userLabelNames),\n                existingUserLabelIds = _(existingUserLabelNames)\n                    .map(_.partial(getLabelForName, userLabels))\n                    .pluck(\"_id\")\n                    .value(),\n                existingNonUserLabelIds = _(self.model.get(\"labels\"))\n                    .map(_.partial(getLabelForId, this.allLabels))\n                    .reject(isUserLabel)\n                    .pluck(\"_id\")\n                    .value(),\n                existingLabelIds = existingUserLabelIds.concat(existingNonUserLabelIds);\n\n            self.disableLabelControls();\n            createLabels(newUserLabelNames).then(function (newIds) {\n                self.model.set(\"labels\", existingLabelIds.concat(newIds));\n                return $.when(getAllLabels(), self.model.save());\n            }).then(function (allLabels) {\n                self.allLabels = allLabels;\n                self.enableLabelControls();\n                self.stopEditingLabels();\n                self.updateLabelOptions();\n                LabelTreeNavigationView.addUserLabels(_.filter(self.allLabels, isUserLabel));\n            }, function () {\n                self.enableLabelControls();\n            });\n        },\n        discardLabelsChanges () {\n            this.stopEditingLabels();\n            this.updateLabelOptions();\n        },\n        updateUnshareButton () {\n            if (this.model.has(\"policy\") && this.model.get(\"policy\").get(\"permissions\").length > 0) {\n                this.$el.find(\"li#unshare\").removeClass(\"disabled\").find(\"a\").attr(\"aria-disabled\", false);\n            }\n        }\n    });\n    return ResourcePage;\n});\n"]}