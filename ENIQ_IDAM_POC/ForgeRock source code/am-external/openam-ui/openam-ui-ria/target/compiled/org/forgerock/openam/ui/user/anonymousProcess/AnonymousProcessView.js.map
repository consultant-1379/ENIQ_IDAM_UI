{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/user/anonymousProcess/AnonymousProcessView.js"],"names":["define","_","EventManager","Router","URIUtils","AnonymousProcessView","AnonymousProcessDelegate","fetchUrl","Constants","getCurrentFragmentParamString","query","store","getNextRoute","endpoint","SELF_SERVICE_REGISTER","configuration","routes","continueSelfRegister","SELF_SERVICE_RESET_PASSWORD","continuePasswordReset","isFromEmailLink","params","token","extend","render","fragmentParams","parseParameters","getCurrentFragmentQueryString","nextRoute","default","realm","getState","remote","info","delegate","currentRoute","setDelegate","submitDelegate","routeTo","trigger","data","args","undefined","setTranslationBase","parentRender","restartProcess","e","preventDefault","stateData","sendEvent","EVENT_CHANGE_VIEW","route","forceUpdate"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,mDAFG,EAGH,6CAHG,EAIH,+CAJG,EAKH,qEALG,EAMH,kEANG,EAOH,kDAPG,EAQH,+CARG,EASH,uEATG,EAUH,+CAVG,EAWH,aAXG,CAAP,EAYG,UAACC,CAAD,EAAIC,YAAJ,EAAkBC,MAAlB,EAA0BC,QAA1B,EAAoCC,oBAApC,EAA0DC,wBAA1D,EAAoFC,QAApF,EAA8FC,SAA9F,EACCC,6BADD,EACgCC,KADhC,EACuCC,KADvC,EACiD;AAAE;;AAElD,aAASC,YAAT,CAAuBC,QAAvB,EAAiC;AAC7B,YAAIA,aAAaL,UAAUM,qBAA3B,EAAkD;AAC9C,mBAAOX,OAAOY,aAAP,CAAqBC,MAArB,CAA4BC,oBAAnC;AACH,SAFD,MAEO,IAAIJ,aAAaL,UAAUU,2BAA3B,EAAwD;AAC3D,mBAAOf,OAAOY,aAAP,CAAqBC,MAArB,CAA4BG,qBAAnC;AACH;AACD,eAAO,EAAP;AACH;;AAED,aAASC,eAAT,CAA0BC,MAA1B,EAAkC;AAC9B,eAAOA,OAAOC,KAAd;AACH;;AAED,WAAOjB,qBAAqBkB,MAArB,CAA4B;AAE/BC,cAF+B,oBAErB;AACN,gBAAMC,iBAAiBf,MAAMgB,eAAN,CAAsBtB,SAASuB,6BAAT,EAAtB,CAAvB;AACA,gBAAMC,YAAYhB,aAAa,KAAKC,QAAlB,CAAlB;AACA,gBAAMA,WAAWN,SAASsB,OAAT,OAAqB,KAAKhB,QAA1B,EAAsC;AACnDiB,uBAAOnB,MAAMkB,OAAN,CAAcE,QAAd,GAAyBC,MAAzB,CAAgCC,IAAhC,CAAqCH;AADO,aAAtC,CAAjB;;AAIA,gBAAI,CAAC,KAAKI,QAAN,IAAkB/B,OAAOgC,YAAP,KAAwBP,SAA9C,EAAyD;AACrD,qBAAKQ,WAAL,UAAwBvB,QAAxB,EAAoCY,eAAeH,KAAnD;AACH;;AAED,gBAAIF,gBAAgBK,cAAhB,CAAJ,EAAqC;AACjC,qBAAKY,cAAL,CAAoBZ,cAApB,EAAoC,YAAM;AACtCtB,2BAAOmC,OAAP,CAAeV,SAAf,EAA0B,EAAEW,SAAS,IAAX,EAA1B;AACH,iBAFD;AAGH,aAJD,MAIO;AACH;AACA;AACA,qBAAKC,IAAL,CAAUC,IAAV,GAAiB,CAACC,SAAD,EAAYjC,8BAA8BoB,OAA9B,EAAZ,CAAjB;AACA,qBAAKc,kBAAL;AACA,qBAAKC,YAAL;AACH;AACJ,SAxB8B;AA0B/BC,sBA1B+B,0BA0BfC,CA1Be,EA0BZ;AACfA,cAAEC,cAAF;AACA,mBAAO,KAAKb,QAAZ;AACA,mBAAO,KAAKc,SAAZ;;AAEA9C,yBAAa+C,SAAb,CAAuBzC,UAAU0C,iBAAjC,EAAoD;AAChDT,sBAAM,KAAKD,IAAL,CAAUC,IADgC;AAEhDU,uBAAOlD,EAAEsB,MAAF,CAAS,EAAT,EAAapB,OAAOgC,YAApB,EAAkC,EAAEiB,aAAa,IAAf,EAAlC;AAFyC,aAApD;AAIH;AAnC8B,KAA5B,CAAP;AAqCH,CAjED","file":"AnonymousProcessView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/URIUtils\",\n    \"org/forgerock/commons/ui/user/anonymousProcess/AnonymousProcessView\",\n    \"org/forgerock/commons/ui/user/delegates/AnonymousProcessDelegate\",\n    \"org/forgerock/openam/ui/common/services/fetchUrl\",\n    \"org/forgerock/openam/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/common/util/uri/getCurrentFragmentParamString\",\n    \"org/forgerock/openam/ui/common/util/uri/query\",\n    \"store/index\"\n], (_, EventManager, Router, URIUtils, AnonymousProcessView, AnonymousProcessDelegate, fetchUrl, Constants,\n    getCurrentFragmentParamString, query, store) => { // eslint-disable-line padded-blocks\n\n    function getNextRoute (endpoint) {\n        if (endpoint === Constants.SELF_SERVICE_REGISTER) {\n            return Router.configuration.routes.continueSelfRegister;\n        } else if (endpoint === Constants.SELF_SERVICE_RESET_PASSWORD) {\n            return Router.configuration.routes.continuePasswordReset;\n        }\n        return \"\";\n    }\n\n    function isFromEmailLink (params) {\n        return params.token;\n    }\n\n    return AnonymousProcessView.extend({\n\n        render () {\n            const fragmentParams = query.parseParameters(URIUtils.getCurrentFragmentQueryString());\n            const nextRoute = getNextRoute(this.endpoint);\n            const endpoint = fetchUrl.default(`/${this.endpoint}`, {\n                realm: store.default.getState().remote.info.realm\n            });\n\n            if (!this.delegate || Router.currentRoute !== nextRoute) {\n                this.setDelegate(`json${endpoint}`, fragmentParams.token);\n            }\n\n            if (isFromEmailLink(fragmentParams)) {\n                this.submitDelegate(fragmentParams, () => {\n                    Router.routeTo(nextRoute, { trigger: true });\n                });\n            } else {\n                // TODO: The first undefined argument is the deprecated realm which is defined in the\n                // CommonRoutesConfig login route. This needs to be removed as part of AME-11109.\n                this.data.args = [undefined, getCurrentFragmentParamString.default()];\n                this.setTranslationBase();\n                this.parentRender();\n            }\n        },\n\n        restartProcess (e) {\n            e.preventDefault();\n            delete this.delegate;\n            delete this.stateData;\n\n            EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\n                args: this.data.args,\n                route: _.extend({}, Router.currentRoute, { forceUpdate: true })\n            });\n        }\n    });\n});\n"]}