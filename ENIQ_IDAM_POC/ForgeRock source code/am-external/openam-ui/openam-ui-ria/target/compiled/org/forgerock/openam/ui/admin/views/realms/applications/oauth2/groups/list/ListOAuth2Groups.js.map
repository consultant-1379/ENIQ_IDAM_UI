{"version":3,"sources":["../../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/applications/oauth2/groups/list/ListOAuth2Groups.jsx"],"names":["ListOAuth2Groups","state","selectedIds","nextProps","groupsSetHasChanged","props","groups","sort","setState","handleOnDelete","onDelete","handleRowClick","row","onEdit","_id","handleSelectedChange","ids","toolbar","content","isFetching","newHref","length","propTypes","arrayOf","object","isRequired","bool","string","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA8BMA,gB;;;AACF,oCAAe;AAAA;;AAAA;;AAEX,kBAAKC,KAAL,GAAa,EAAEC,aAAa,EAAf,EAAb;AAFW;AAGd;;;;sDAE0BC,S,EAAW;AAClC,oBAAMC,sBAAsB,CAAC,qBACzB,mBAAM,KAAKC,KAAL,CAAWC,MAAjB,EAAyB,KAAzB,EAAgCC,IAAhC,EADyB,EAEzB,mBAAMJ,UAAUG,MAAhB,EAAwB,KAAxB,EAA+BC,IAA/B,EAFyB,CAA7B;;AAKA,oBAAIH,mBAAJ,EAAyB;AACrB;AACA,yBAAKI,QAAL,CAAc,EAAEN,aAAa,EAAf,EAAd;AACH;AACJ;;;qCAES;AAAA;;AACN,oBAAMO,iBAAiB,SAAjBA,cAAiB;AAAA,2BAAM,OAAKJ,KAAL,CAAWK,QAAX,CAAoB,OAAKT,KAAL,CAAWC,WAA/B,CAAN;AAAA,iBAAvB;AACA,oBAAMS,iBAAiB,SAAjBA,cAAiB,CAACC,GAAD;AAAA,2BAAS,OAAKP,KAAL,CAAWQ,MAAX,CAAkBD,IAAIE,GAAtB,CAAT;AAAA,iBAAvB;AACA,oBAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,GAAD;AAAA,2BAAS,OAAKR,QAAL,CAAc,EAAEN,aAAac,GAAf,EAAd,CAAT;AAAA,iBAA7B;AACA,oBAAIC,gBAAJ;AACA,oBAAIC,gBAAJ;;AAEA,oBAAI,KAAKb,KAAL,CAAWc,UAAf,EAA2B;AACvBD,8BAAU,sDAAV;AACH,iBAFD,MAEO,IAAI,qBAAQ,KAAKb,KAAL,CAAWC,MAAnB,CAAJ,EAAgC;AACnCY,8BAAU,wEAA8B,MAAO,KAAKb,KAAL,CAAWe,OAAhD,GAAV;AACH,iBAFM,MAEA;AACHH,8BACI;AACI,0CAAmB,CAAC,KAAKhB,KAAL,CAAWC,WAAX,CAAuBmB,MAD/C;AAEI,iCAAU,KAAKhB,KAAL,CAAWe,OAFzB;AAGI,wCAAiB,KAAKnB,KAAL,CAAWC,WAAX,CAAuBmB,MAH5C;AAII,kCAAWZ;AAJf,sBADJ;AAQAS,8BACI;AAAA;AAAA;AACI,kCAAO,KAAKb,KAAL,CAAWC,MADtB;AAEI,qCAAQ,KAFZ;AAGI,wCAAaK,cAHjB;AAII,8CAAmBI,oBAJvB;AAKI,yCAAc,KAAKd,KAAL,CAAWC;AAL7B;AAOI;AAAA;AAAA,8BAAmB,WAAU,KAA7B,EAAmC,YAAa,wBAAS,aAAT,CAAhD,EAA0E,cAA1E,EAAmF,WAAnF;AACM,4CAAE,gDAAF;AADN,yBAPJ;AAUI;AAAA;AAAA;AACI,2CAAU,wBADd;AAEI,4CAAa,yDAAgC,QAAhC,CAFjB;AAGI;AAHJ;AAKM,4CAAE,gDAAF;AALN;AAVJ,qBADJ;AAoBH;;AAED,uBACI;AAAA;AAAA,sBAAO,WAAU,cAAjB;AACMe,2BADN;AAEMC;AAFN,iBADJ;AAMH;;;;;;AAGLlB,qBAAiBsB,SAAjB,GAA6B;AACzBhB,gBAAQ,iBAAUiB,OAAV,CAAkB,iBAAUC,MAA5B,EAAoCC,UADnB;AAEzBN,oBAAY,iBAAUO,IAAV,CAAeD,UAFF;AAGzBL,iBAAS,iBAAUO,MAAV,CAAiBF,UAHD;AAIzBf,kBAAU,iBAAUkB,IAAV,CAAeH,UAJA;AAKzBZ,gBAAQ,iBAAUe,IAAV,CAAeH;AALE,KAA7B;;sBAQezB,gB","file":"ListOAuth2Groups.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { Panel } from \"react-bootstrap\";\nimport { isEmpty, isEqual, pluck } from \"lodash\";\nimport { t } from \"i18next\";\nimport { TableHeaderColumn } from \"react-bootstrap-table\";\nimport React, { Component, PropTypes } from \"react\";\n\nimport dataFieldObjectPath from \"components/table/cells/dataFieldObjectPath\";\nimport IconCell from \"components/table/cells/IconCell\";\nimport ListOAuth2GroupsCallToAction from \"./ListOAuth2GroupsCallToAction\";\nimport ListOAuth2Toolbar from \"./ListOAuth2Toolbar\";\nimport Loading from \"components/Loading\";\nimport StatusCell from \"components/table/cells/StatusCell\";\nimport Table from \"components/table/Table\";\n\nclass ListOAuth2Groups extends Component {\n    constructor () {\n        super();\n        this.state = { selectedIds: [] };\n    }\n\n    componentWillReceiveProps (nextProps) {\n        const groupsSetHasChanged = !isEqual(\n            pluck(this.props.groups, \"_id\").sort(),\n            pluck(nextProps.groups, \"_id\").sort()\n        );\n\n        if (groupsSetHasChanged) {\n            // deselect everything in case of pagination, items deletion, etc.\n            this.setState({ selectedIds: [] });\n        }\n    }\n\n    render () {\n        const handleOnDelete = () => this.props.onDelete(this.state.selectedIds);\n        const handleRowClick = (row) => this.props.onEdit(row._id);\n        const handleSelectedChange = (ids) => this.setState({ selectedIds: ids });\n        let toolbar;\n        let content;\n\n        if (this.props.isFetching) {\n            content = <Loading />;\n        } else if (isEmpty(this.props.groups)) {\n            content = <ListOAuth2GroupsCallToAction href={ this.props.newHref } />;\n        } else {\n            toolbar = (\n                <ListOAuth2Toolbar\n                    isDeleteDisabled={ !this.state.selectedIds.length }\n                    newHref={ this.props.newHref }\n                    numberSelected={ this.state.selectedIds.length }\n                    onDelete={ handleOnDelete }\n                />\n            );\n            content = (\n                <Table\n                    data={ this.props.groups }\n                    idField=\"_id\"\n                    onRowClick={ handleRowClick }\n                    onSelectedChange={ handleSelectedChange }\n                    selectedIds={ this.state.selectedIds }\n                >\n                    <TableHeaderColumn dataField=\"_id\" dataFormat={ IconCell(\"fa-list-alt\") } dataSort isKey>\n                        { t(\"console.applications.oauth2.groups.list.grid.0\") }\n                    </TableHeaderColumn>\n                    <TableHeaderColumn\n                        dataField=\"coreOAuth2ClientConfig\"\n                        dataFormat={ dataFieldObjectPath(StatusCell, \"status\") }\n                        dataSort\n                    >\n                        { t(\"console.applications.oauth2.groups.list.grid.1\") }\n                    </TableHeaderColumn>\n                </Table>\n            );\n        }\n\n        return (\n            <Panel className=\"fr-panel-tab\">\n                { toolbar }\n                { content }\n            </Panel>\n        );\n    }\n}\n\nListOAuth2Groups.propTypes = {\n    groups: PropTypes.arrayOf(PropTypes.object).isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    newHref: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default ListOAuth2Groups;\n"]}