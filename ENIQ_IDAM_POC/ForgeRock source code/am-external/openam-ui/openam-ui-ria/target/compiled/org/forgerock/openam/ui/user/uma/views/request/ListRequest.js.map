{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/user/uma/views/request/ListRequest.js"],"names":["define","$","Backbone","BackbonePaginator","BackgridFilter","Backgrid","ThemeablePaginator","AbstractView","Configuration","Constants","fetchUrl","BackgridUtils","UMAService","PermissionsCell","ListRequest","extend","template","render","args","callback","self","columns","grid","paginator","RequestsCollection","PageableCollection","url","context","default","loggedUser","get","state","pageSize","sortKey","queryParams","_sortKeys","sortKeys","_queryId","_queryFilter","_pagedResultsOffset","pagedResultsOffset","parseState","parseRecords","sync","name","label","t","cell","editable","DatetimeAgoCell","headerCell","ClassHeaderCell","className","onChange","value","model","set","silent","anySelected","$el","parent","find","prop","TemplateCell","events","allow","approveRequest","done","data","requests","fetch","reset","processData","deny","denyRequest","on","doubleSortFix","Grid","collection","emptyText","Extension","windowSize","parentRender","append","el"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,UAFG,EAGH,oBAHG,EAIH,iBAJG,EAKH,mDALG,EAMH,uEANG,EAOH,mDAPG,EAQH,oDARG,EASH,gDATG,EAUH,kDAVG,EAWH,mDAXG,EAYH,sDAZG,EAaH,uEAbG,CAAP,EAcG,UAAUC,CAAV,EAAaC,QAAb,EAAuBC,iBAAvB,EAA0CC,cAA1C,EAA0DC,QAA1D,EAAoEC,kBAApE,EAAwFC,YAAxF,EAAsGC,aAAtG,EACUC,SADV,EACqBC,QADrB,EAC+BC,aAD/B,EAC8CC,UAD9C,EAC0DC,eAD1D,EAC2E;AAC1E,QAAIC,cAAcP,aAAaQ,MAAb,CAAoB;AAClCC,kBAAU,2DADwB;;AAGlCC,cAHkC,kBAG1BC,IAH0B,EAGpBC,QAHoB,EAGV;AACpB,gBAAIC,OAAO,IAAX;AAAA,gBACIC,OADJ;AAAA,gBAEIC,IAFJ;AAAA,gBAGIC,SAHJ;AAAA,gBAIIC,kBAJJ;;AAMAA,iCAAqBtB,SAASuB,kBAAT,CAA4BV,MAA5B,CAAmC;AACpDW,qBAAQjB,UAAUkB,OAAlB,aACIjB,SAASkB,OAAT,aAA2BpB,cAAcqB,UAAd,CAAyBC,GAAzB,CAA6B,UAA7B,CAA3B,0BAFgD;AAGpDC,uBAAO;AACHC,8BAAU,EADP;AAEHC,6BAAS;AAFN,iBAH6C;AAOpDC,6BAAa;AACTF,8BAAU,WADD;AAETG,+BAAWxB,cAAcyB,QAFhB;AAGTC,8BAAU,GAHD;AAITC,kCAAc,MAJL;AAKTC,yCAAqB5B,cAAc6B;AAL1B,iBAPuC;AAcpDC,4BAAY9B,cAAc8B,UAd0B;AAepDC,8BAAc/B,cAAc+B,YAfwB;AAgBpDC,sBAAMhC,cAAcgC;AAhBgC,aAAnC,CAArB;;AAmBAtB,sBAAU,CAAC;AACPuB,sBAAM,MADC;AAEPC,uBAAO5C,EAAE6C,CAAF,CAAI,4BAAJ,CAFA;AAGPC,sBAAM,QAHC;AAIPC,0BAAU;AAJH,aAAD,EAKP;AACCJ,sBAAM,UADP;AAECC,uBAAO5C,EAAE6C,CAAF,CAAI,4BAAJ,CAFR;AAGCC,sBAAM,QAHP;AAICC,0BAAU;AAJX,aALO,EAUP;AACCJ,sBAAM,MADP;AAECC,uBAAO5C,EAAE6C,CAAF,CAAI,4BAAJ,CAFR;AAGCC,sBAAMpC,cAAcsC,eAHrB;AAICD,0BAAU;AAJX,aAVO,EAeP;AACCJ,sBAAM,aADP;AAECC,uBAAO5C,EAAE6C,CAAF,CAAI,4BAAJ,CAFR;AAGCI,4BAAYvC,cAAcwC,eAAd,CAA8BpC,MAA9B,CAAqC;AAC7CqC,+BAAW;AADkC,iBAArC,CAHb;AAMCL,sBAAMlC,gBAAgBE,MAAhB,CAAuB;AACzBsC,4BADyB,oBACfC,KADe,EACR;AACb,6BAAKC,KAAL,CAAWC,GAAX,CAAe,aAAf,EAA8BF,KAA9B,EAAqC,EAAEG,QAAQ,IAAV,EAArC;;AAEA,4BAAIC,cAAcJ,UAAU,IAA5B;AACA,6BAAKK,GAAL,CAASC,MAAT,GAAkBC,IAAlB,CAAuB,yBAAvB,EAAkDC,IAAlD,CAAuD,UAAvD,EAAmE,CAACJ,WAApE;;AAEA;AACA;AACA;AACH;AAVwB,iBAAvB,CANP;AAkBCV,0BAAU;AAlBX,aAfO,EAkCP;AACCJ,sBAAM,SADP;AAECC,uBAAO,EAFR;AAGCE,sBAAMpC,cAAcoD,YAAd,CAA2BhD,MAA3B,CAAkC;AACpCC,8BAAU,mDAD0B;AAEpCgD,4BAAQ;AACJ,+DAAuC,OADnC;AAEJ,8DAAsC;AAFlC,qBAF4B;AAMpCC,yBANoC,mBAM3B;AACLrD,mCAAWsD,cAAX,CAA0B,KAAKX,KAAL,CAAWzB,GAAX,CAAe,KAAf,CAA1B,EAAiD,KAAKyB,KAAL,CAAWzB,GAAX,CAAe,aAAf,CAAjD,EACKqC,IADL,CACU,YAAY;AACd/C,iCAAKgD,IAAL,CAAUC,QAAV,CAAmBC,KAAnB,CAAyB,EAAEC,OAAO,IAAT,EAAeC,aAAa,KAA5B,EAAzB,EADc,CACiD;AAClE,yBAHL;AAIH,qBAXmC;AAYpCC,wBAZoC,kBAY5B;AACJ7D,mCAAW8D,WAAX,CAAuB,KAAKnB,KAAL,CAAWzB,GAAX,CAAe,KAAf,CAAvB,EAA8CqC,IAA9C,CAAmD,YAAY;AAC3D/C,iCAAKgD,IAAL,CAAUC,QAAV,CAAmBC,KAAnB,CAAyB,EAAEC,OAAO,IAAT,EAAeC,aAAa,KAA5B,EAAzB,EAD2D,CACI;AAClE,yBAFD;AAGH;AAhBmC,iBAAlC,CAHP;AAqBCxB,0BAAU;AArBX,aAlCO,CAAV;;AA0DA,iBAAKoB,IAAL,CAAUC,QAAV,GAAqB,IAAI7C,kBAAJ,EAArB;AACA,iBAAK4C,IAAL,CAAUC,QAAV,CAAmBM,EAAnB,CAAsB,eAAtB,EAAuChE,cAAciE,aAArD;;AAEAtD,mBAAO,IAAIjB,SAASwE,IAAb,CAAkB;AACrBxD,gCADqB;AAErB+B,2BAAW,gBAFU;AAGrB0B,4BAAY1D,KAAKgD,IAAL,CAAUC,QAHD;AAIrBU,2BAAW9E,EAAE6C,CAAF,CAAI,0BAAJ;AAJU,aAAlB,CAAP;;AAOAvB,wBAAY,IAAIlB,SAAS2E,SAAT,CAAmB1E,kBAAvB,CAA0C;AAClDwE,4BAAY1D,KAAKgD,IAAL,CAAUC,QAD4B;AAElDY,4BAAY;AAFsC,aAA1C,CAAZ;;AAKA7D,iBAAK8D,YAAL,CAAkB,YAAY;AAC1B9D,qBAAKuC,GAAL,CAASE,IAAT,CAAc,kBAAd,EAAkCsB,MAAlC,CAAyC7D,KAAKL,MAAL,GAAcmE,EAAvD;AACAhE,qBAAKuC,GAAL,CAASE,IAAT,CAAc,aAAd,EAA6BsB,MAA7B,CAAoC5D,UAAUN,MAAV,GAAmBmE,EAAvD;;AAEAhE,qBAAKgD,IAAL,CAAUC,QAAV,CAAmBC,KAAnB,CAAyB,EAAEC,OAAO,IAAT,EAAeC,aAAa,KAA5B,EAAzB,EAA8DL,IAA9D,CAAmE,YAAY;AAC3E,wBAAIhD,QAAJ,EAAc;AAAEA;AAAa;AAChC,iBAFD;AAGH,aAPD;AAQH;AA9GiC,KAApB,CAAlB;;AAiHA,WAAO,IAAIL,WAAJ,EAAP;AACH,CAlID","file":"ListRequest.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"backbone\",\n    \"backbone.paginator\",\n    \"backgrid-filter\",\n    \"org/forgerock/commons/ui/common/backgrid/Backgrid\",\n    \"org/forgerock/commons/ui/common/backgrid/extension/ThemeablePaginator\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Configuration\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/common/services/fetchUrl\",\n    \"org/forgerock/openam/ui/common/util/BackgridUtils\",\n    \"org/forgerock/openam/ui/user/uma/services/UMAService\",\n    \"org/forgerock/openam/ui/user/uma/views/backgrid/cells/PermissionsCell\"\n], function ($, Backbone, BackbonePaginator, BackgridFilter, Backgrid, ThemeablePaginator, AbstractView, Configuration,\n             Constants, fetchUrl, BackgridUtils, UMAService, PermissionsCell) {\n    var ListRequest = AbstractView.extend({\n        template: \"templates/user/uma/views/request/ListRequestTemplate.html\",\n\n        render (args, callback) {\n            var self = this,\n                columns,\n                grid,\n                paginator,\n                RequestsCollection;\n\n            RequestsCollection = Backbone.PageableCollection.extend({\n                url: `${Constants.context}/json${\n                    fetchUrl.default(`/users/${Configuration.loggedUser.get(\"username\")}/uma/pendingrequests`)}`,\n                state: {\n                    pageSize: 10,\n                    sortKey: \"user\"\n                },\n                queryParams: {\n                    pageSize: \"_pageSize\",\n                    _sortKeys: BackgridUtils.sortKeys,\n                    _queryId: \"*\",\n                    _queryFilter: \"true\",\n                    _pagedResultsOffset: BackgridUtils.pagedResultsOffset\n                },\n                parseState: BackgridUtils.parseState,\n                parseRecords: BackgridUtils.parseRecords,\n                sync: BackgridUtils.sync\n            });\n\n            columns = [{\n                name: \"user\",\n                label: $.t(\"uma.requests.grid.header.0\"),\n                cell: \"string\",\n                editable: false\n            }, {\n                name: \"resource\",\n                label: $.t(\"uma.requests.grid.header.1\"),\n                cell: \"string\",\n                editable: false\n            }, {\n                name: \"when\",\n                label: $.t(\"uma.requests.grid.header.2\"),\n                cell: BackgridUtils.DatetimeAgoCell,\n                editable: false\n            }, {\n                name: \"permissions\",\n                label: $.t(\"uma.requests.grid.header.3\"),\n                headerCell: BackgridUtils.ClassHeaderCell.extend({\n                    className: \"col-xs-7 col-md-6\"\n                }),\n                cell: PermissionsCell.extend({\n                    onChange (value) {\n                        this.model.set(\"permissions\", value, { silent: true });\n\n                        var anySelected = value !== null;\n                        this.$el.parent().find(\"[data-permission=allow]\").prop(\"disabled\", !anySelected);\n\n                        // TODO: Code that works with Backbone MultiSelect\n                        // var anySelected = this.$el.find(\"li.active\").length > 0;\n                        // this.$el.parent().find(\"[data-permission=allow]\").prop(\"disabled\", !anySelected);\n                    }\n                }),\n                editable: false\n            }, {\n                name: \"actions\",\n                label: \"\",\n                cell: BackgridUtils.TemplateCell.extend({\n                    template: \"templates/user/uma/backgrid/cell/ActionsCell.html\",\n                    events: {\n                        \"click button[data-permission=allow]\": \"allow\",\n                        \"click button[data-permission=deny]\": \"deny\"\n                    },\n                    allow () {\n                        UMAService.approveRequest(this.model.get(\"_id\"), this.model.get(\"permissions\"))\n                            .done(function () {\n                                self.data.requests.fetch({ reset: true, processData: false }); // TODO: DRY\n                            });\n                    },\n                    deny () {\n                        UMAService.denyRequest(this.model.get(\"_id\")).done(function () {\n                            self.data.requests.fetch({ reset: true, processData: false }); // TODO: DRY\n                        });\n                    }\n                }),\n                editable: false\n            }];\n\n            this.data.requests = new RequestsCollection();\n            this.data.requests.on(\"backgrid:sort\", BackgridUtils.doubleSortFix);\n\n            grid = new Backgrid.Grid({\n                columns,\n                className: \"backgrid table\",\n                collection: self.data.requests,\n                emptyText: $.t(\"console.common.noResults\")\n            });\n\n            paginator = new Backgrid.Extension.ThemeablePaginator({\n                collection: self.data.requests,\n                windowSize: 3\n            });\n\n            self.parentRender(function () {\n                self.$el.find(\".table-container\").append(grid.render().el);\n                self.$el.find(\".panel-body\").append(paginator.render().el);\n\n                self.data.requests.fetch({ reset: true, processData: false }).done(function () {\n                    if (callback) { callback(); }\n                });\n            });\n        }\n    });\n\n    return new ListRequest();\n});\n"]}