{"version":3,"sources":["../../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/applications/oauth2/groups/new/NewOAuth2Group.jsx"],"names":["NewOAuth2Group","props","setRef","bind","jsonSchemaView","template","hideInheritance","schema","values","showOnlyRequiredAndEmpty","jsonForm","appendChild","render","el","element","handleCreate","onCreate","getData","footer","isCreateAllowed","content","isFetching","groupId","onGroupIdChange","propTypes","string","isRequired","bool","func","objectOf","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA4BMA,c;;;AACF,gCAAaC,KAAb,EAAoB;AAAA;;AAAA,wIACVA,KADU;;AAEhB,kBAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,OAAd;AAFgB;AAGnB;;;;iDAEqB;AAClB,oBAAI,CAAC,KAAKC,cAAN,IAAwB,KAAKH,KAAL,CAAWI,QAAvC,EAAiD;AAC7C,yBAAKD,cAAL,GAAsB,oCAA0B;AAC5CE,yCAAiB,IAD2B;AAE5CC,gCAAQ,yBAAe,KAAKN,KAAL,CAAWM,MAA1B,CAFoC;AAG5CC,gCAAQ,yBAAe,KAAKP,KAAL,CAAWI,QAA1B,CAHoC;AAI5CI,kDAA0B;AAJkB,qBAA1B,CAAtB;AAMA,yBAAKC,QAAL,CAAcC,WAAd,CAA0B,KAAKP,cAAL,CAAoBQ,MAApB,GAA6BC,EAAvD;AACH;AACJ;;;mCAEOC,O,EAAS;AACb,qBAAKJ,QAAL,GAAgBI,OAAhB;AACH;;;qCAES;AAAA;;AACN,oBAAMC,eAAe,SAAfA,YAAe;AAAA,2BAAM,OAAKd,KAAL,CAAWe,QAAX,CAAoB,OAAKZ,cAAL,CAAoBa,OAApB,EAApB,CAAN;AAAA,iBAArB;AACA,oBAAMC,SACF;AACI,mCAAgB,CAAC,KAAKjB,KAAL,CAAWkB,eADhC;AAEI,mCAAgBJ;AAFpB,kBADJ;AAMA,oBAAIK,gBAAJ;;AAEA,oBAAI,KAAKnB,KAAL,CAAWoB,UAAf,EAA2B;AACvBD,8BAAU,sDAAV;AACH,iBAFD,MAEO;AACHA,8BACI;AAAA;AAAA;AACI;AACI,qCAAU,KAAKnB,KAAL,CAAWqB,OADzB;AAEI,6CAAkB,KAAKrB,KAAL,CAAWsB;AAFjC,0BADJ;AAKI,+DAAK,KAAM,KAAKrB,MAAhB;AALJ,qBADJ;AASH;;AAED,uBACI;AAAA;AAAA;AACI,0EAAY,OAAQ,gBAAE,8CAAF,CAApB,GADJ;AAEI;AAAA;AAAA,0BAAO,QAASgB,MAAhB;AACME;AADN;AAFJ,iBADJ;AAQH;;;;;;AAGLpB,mBAAewB,SAAf,GAA2B;AACvBF,iBAAS,iBAAUG,MAAV,CAAiBC,UADH;AAEvBP,yBAAiB,iBAAUQ,IAAV,CAAeD,UAFT;AAGvBL,oBAAY,iBAAUM,IAAV,CAAeD,UAHJ;AAIvBV,kBAAU,iBAAUY,IAAV,CAAeF,UAJF;AAKvBH,yBAAiB,iBAAUK,IAAV,CAAeF,UALT;AAMvBnB,gBAAQ,iBAAUsB,QAAV,CAAmB,iBAAUC,MAA7B,EAAqCJ,UANtB;AAOvBrB,kBAAU,iBAAUwB,QAAV,CAAmB,iBAAUC,MAA7B,EAAqCJ;AAPxB,KAA3B;;sBAUe1B,c","file":"NewOAuth2Group.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { Panel } from \"react-bootstrap\";\nimport { t } from \"i18next\";\nimport React, { Component, PropTypes } from \"react\";\n\nimport GroupedJSONSchemaView from \"org/forgerock/openam/ui/common/views/jsonSchema/GroupedJSONSchemaView\";\nimport JSONSchema from \"org/forgerock/openam/ui/common/models/JSONSchema\";\nimport JSONValues from \"org/forgerock/openam/ui/common/models/JSONValues\";\nimport Loading from \"components/Loading\";\nimport NewOAuth2GroupFooter from \"./NewOAuth2GroupFooter\";\nimport NewOAuth2GroupIdInput from \"./NewOAuth2GroupIdInput\";\nimport PageHeader from \"components/PageHeader\";\n\nclass NewOAuth2Group extends Component {\n    constructor (props) {\n        super(props);\n        this.setRef = this.setRef.bind(this);\n    }\n\n    componentDidUpdate () {\n        if (!this.jsonSchemaView && this.props.template) {\n            this.jsonSchemaView = new GroupedJSONSchemaView({\n                hideInheritance: true,\n                schema: new JSONSchema(this.props.schema),\n                values: new JSONValues(this.props.template),\n                showOnlyRequiredAndEmpty: true\n            });\n            this.jsonForm.appendChild(this.jsonSchemaView.render().el);\n        }\n    }\n\n    setRef (element) {\n        this.jsonForm = element;\n    }\n\n    render () {\n        const handleCreate = () => this.props.onCreate(this.jsonSchemaView.getData());\n        const footer = (\n            <NewOAuth2GroupFooter\n                disableCreate={ !this.props.isCreateAllowed }\n                onCreateClick={ handleCreate }\n            />\n        );\n        let content;\n\n        if (this.props.isFetching) {\n            content = <Loading />;\n        } else {\n            content = (\n                <div>\n                    <NewOAuth2GroupIdInput\n                        groupId={ this.props.groupId }\n                        onGroupIdChange={ this.props.onGroupIdChange }\n                    />\n                    <div ref={ this.setRef } />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <PageHeader title={ t(\"console.applications.oauth2.groups.new.title\") } />\n                <Panel footer={ footer }>\n                    { content }\n                </Panel>\n            </div>\n        );\n    }\n}\n\nNewOAuth2Group.propTypes = {\n    groupId: PropTypes.string.isRequired,\n    isCreateAllowed: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    onCreate: PropTypes.func.isRequired,\n    onGroupIdChange: PropTypes.func.isRequired,\n    schema: PropTypes.objectOf(PropTypes.object).isRequired,\n    template: PropTypes.objectOf(PropTypes.object).isRequired\n};\n\nexport default NewOAuth2Group;\n"]}