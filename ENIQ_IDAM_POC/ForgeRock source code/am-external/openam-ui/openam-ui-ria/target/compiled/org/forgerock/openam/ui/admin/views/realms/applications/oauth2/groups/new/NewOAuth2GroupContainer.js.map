{"version":3,"sources":["../../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/applications/oauth2/groups/new/NewOAuth2GroupContainer.jsx"],"names":["NewOAuth2GroupContainer","props","state","isFetching","groupId","handleGroupIdChange","bind","router","params","then","schema","values","setState","setSchema","setTemplate","response","addMessage","type","TYPE_DANGER","handleCreate","formData","realm","routeTo","configuration","routes","realmsApplicationsOAuth2GroupsEdit","args","encodeURIComponent","trigger","template","propTypes","shape","string","isRequired","func","remote","oauth2","groups","dispatch"],"mappings":"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","file":"NewOAuth2GroupContainer.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { bindActionCreators } from \"redux\";\nimport { isEmpty, map } from \"lodash\";\nimport React, { Component, PropTypes } from \"react\";\n\nimport { create, getInitialState } from \"org/forgerock/openam/ui/admin/services/realm/AgentGroupsService\";\nimport { OAUTH2_CLIENT } from \"org/forgerock/openam/ui/admin/services/realm/AgentTypes\";\nimport { setSchema } from \"store/modules/remote/oauth2/groups/schema\";\nimport { setTemplate } from \"store/modules/remote/oauth2/groups/template\";\nimport connectWithStore from \"components/redux/connectWithStore\";\nimport Messages from \"org/forgerock/commons/ui/common/components/Messages\";\nimport NewOAuth2Group from \"./NewOAuth2Group\";\nimport Router from \"org/forgerock/commons/ui/common/main/Router\";\nimport withRouter from \"org/forgerock/commons/ui/common/components/hoc/withRouter\";\nimport withRouterPropType from \"org/forgerock/commons/ui/common/components/hoc/withRouterPropType\";\n\nclass NewOAuth2GroupContainer extends Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            isFetching: true,\n            groupId: \"\"\n        };\n\n        this.handleGroupIdChange = this.handleGroupIdChange.bind(this);\n    }\n\n    componentDidMount () {\n        getInitialState(this.props.router.params[0], OAUTH2_CLIENT).then(({ schema, values }) => {\n            this.setState({ isFetching: false });\n            this.props.setSchema(schema[0]);\n            this.props.setTemplate(values[0]);\n        }, (response) => {\n            this.setState({ isFetching: false });\n            Messages.addMessage({ response, type: Messages.TYPE_DANGER });\n        });\n    }\n\n    handleGroupIdChange (groupId) {\n        this.setState({ groupId });\n    }\n\n    render () {\n        const handleCreate = (formData) => {\n            const realm = this.props.router.params[0];\n            create(realm, OAUTH2_CLIENT, formData, this.state.groupId).then(() => {\n                Router.routeTo(Router.configuration.routes.realmsApplicationsOAuth2GroupsEdit,\n                    { args: map([realm, this.state.groupId], encodeURIComponent), trigger: true });\n            }, (response) => {\n                Messages.addMessage({ response, type: Messages.TYPE_DANGER });\n            });\n        };\n\n        return (\n            <NewOAuth2Group\n                groupId={ this.state.groupId }\n                isCreateAllowed={ !isEmpty(this.state.groupId) }\n                isFetching={ this.state.isFetching }\n                onCreate={ handleCreate }\n                onGroupIdChange={ this.handleGroupIdChange }\n                schema={ this.props.schema }\n                template={ this.props.template }\n            />\n        );\n    }\n}\n\nNewOAuth2GroupContainer.propTypes = {\n    router: withRouterPropType,\n    schema: PropTypes.shape({\n        type: PropTypes.string.isRequired\n    }),\n    setSchema: PropTypes.func.isRequired,\n    setTemplate: PropTypes.func.isRequired,\n    template: PropTypes.shape({\n        type: PropTypes.string.isRequired\n    })\n};\n\nNewOAuth2GroupContainer = connectWithStore(NewOAuth2GroupContainer,\n    (state) => ({\n        schema: state.remote.oauth2.groups.schema,\n        template: state.remote.oauth2.groups.template\n    }),\n    (dispatch) => ({\n        setSchema: bindActionCreators(setSchema, dispatch),\n        setTemplate: bindActionCreators(setTemplate, dispatch)\n    })\n);\nNewOAuth2GroupContainer = withRouter(NewOAuth2GroupContainer);\n\nexport default NewOAuth2GroupContainer;\n"]}