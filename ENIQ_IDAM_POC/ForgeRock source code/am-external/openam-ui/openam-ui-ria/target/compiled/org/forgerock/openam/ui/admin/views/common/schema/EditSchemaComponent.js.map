{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/common/schema/EditSchemaComponent.js"],"names":["define","$","_","Backbone","Messages","AbstractView","EventManager","ReactAdapterView","Router","Constants","UIUtils","FormHelper","TabSearch","SubSchemaListComponent","ScriptsList","PanelComponent","PartialBasedView","TabComponent","JSONSchema","JSONValues","Promise","FlatJSONSchemaView","default","PSEUDO_TAB","id","uniqueId","title","t","SUBSCHEMA_TAB","DEFAULT_SCRIPTS_TAB","isScriptingSubSchemaView","subSchemaType","subSubSchemaType","isEmpty","createTabs","schema","subSchemaTypes","tabs","hasSubSchema","length","schemaIsCollection","isCollection","concat","raw","properties","map","value","key","order","propertyOrder","sortBy","push","View","extend","partials","events","initialize","data","listRoute","listRouteArgs","template","subSchemaTemplate","getInstance","updateInstance","deleteInstance","getSubSchemaTypes","getSubSchemaCreatableTypes","getSubSchemaInstances","deleteSubSchemaInstance","createTabComponent","createBody","values","reactView","reactProps","subSchemaInstanceId","needsBaseTemplate","createFooter","partial","getJSONSchemaView","subview","getBody","render","serviceCalls","compact","serviceCall","all","then","response","instance","subSchema","revertFalseCollections","name","hasTabs","fillTemplateWithData","html","$el","options","onChange","tabId","setTabId","find","focus","append","setElement","updateValues","getTabId","getData","onSave","isValid","addMessage","message","type","TYPE_DANGER","valuesWithoutNullPasswords","removeNullPasswords","toJSON","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST","onDelete","e","preventDefault","showConfirmationBeforeDeleting","routeTo","args","trigger","model"],"mappings":"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","file":"EditSchemaComponent.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\n/**\n * @module org/forgerock/openam/ui/admin/views/common/schema/EditSchemaComponent\n */\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"backbone\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/ReactAdapterView\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/admin/utils/FormHelper\",\n    \"org/forgerock/openam/ui/admin/views/common/TabSearch\",\n    \"org/forgerock/openam/ui/admin/views/common/schema/SubSchemaListComponent\",\n    \"org/forgerock/openam/ui/admin/views/configuration/global/scripting/ScriptsList\",\n    \"org/forgerock/openam/ui/common/components/PanelComponent\",\n    \"org/forgerock/openam/ui/common/components/PartialBasedView\",\n    \"org/forgerock/openam/ui/common/components/TabComponent\",\n    \"org/forgerock/openam/ui/common/models/JSONSchema\",\n    \"org/forgerock/openam/ui/common/models/JSONValues\",\n    \"org/forgerock/openam/ui/common/util/Promise\",\n    \"org/forgerock/openam/ui/common/views/jsonSchema/FlatJSONSchemaView\"\n], ($, _, Backbone, Messages, AbstractView, EventManager, ReactAdapterView, Router, Constants, UIUtils, FormHelper,\n    TabSearch, SubSchemaListComponent, ScriptsList, PanelComponent, PartialBasedView, TabComponent, JSONSchema,\n    JSONValues, Promise, FlatJSONSchemaView) => { // eslint-disable-line padded-blocks\n\n    ScriptsList = ScriptsList.default;\n\n    const PSEUDO_TAB = { id: _.uniqueId(\"pseudo_tab_\"), title: $.t(\"console.common.configuration\") };\n    const SUBSCHEMA_TAB = { id: \"subschema\", title: $.t(\"console.common.secondaryConfigurations\") };\n    const DEFAULT_SCRIPTS_TAB = { id: \"defaultScripts\", title: \"Default Scripts\" };\n\n    const isScriptingSubSchemaView = (subSchemaType, subSubSchemaType) => subSchemaType === \"contexts\" &&\n        _.isEmpty(subSubSchemaType);\n\n    const createTabs = (schema, subSchemaTypes, isScriptingSubSchemaView) => {\n        let tabs = [];\n        const hasSubSchema = subSchemaTypes && subSchemaTypes.length > 0;\n        const schemaIsCollection = schema.isCollection();\n\n        if (schemaIsCollection) {\n            tabs = tabs.concat(_(schema.raw.properties)\n                .map((value, key) => ({ id: key, order: value.propertyOrder, title: value.title }))\n                .sortBy(\"order\")\n                .value());\n        } else if (hasSubSchema) {\n            tabs.push(PSEUDO_TAB);\n        }\n\n        if (isScriptingSubSchemaView) {\n            tabs.push(DEFAULT_SCRIPTS_TAB);\n        }\n\n        if (hasSubSchema) {\n            tabs.push(SUBSCHEMA_TAB);\n        }\n\n        return tabs;\n    };\n\n    return Backbone.View.extend({\n        partials: [\n            \"partials/form/_JSONSchemaFooter.html\"\n        ],\n        events: {\n            \"click [data-save]\": \"onSave\",\n            \"click [data-delete]\": \"onDelete\"\n        },\n\n        initialize ({\n            data,\n            listRoute,\n            listRouteArgs,\n            template,\n            subSchemaTemplate,\n            getInstance,\n            updateInstance,\n            deleteInstance,\n            getSubSchemaTypes,\n            getSubSchemaCreatableTypes,\n            getSubSchemaInstances,\n            deleteSubSchemaInstance\n        }) {\n            this.data = data;\n            this.listRoute = listRoute;\n            this.listRouteArgs = listRouteArgs;\n            this.template = template;\n            this.subSchemaTemplate = subSchemaTemplate;\n\n            this.getInstance = getInstance;\n            this.updateInstance = updateInstance;\n            this.deleteInstance = deleteInstance;\n\n            this.getSubSchemaTypes = getSubSchemaTypes;\n            this.getSubSchemaCreatableTypes = getSubSchemaCreatableTypes;\n            this.getSubSchemaInstances = getSubSchemaInstances;\n            this.deleteSubSchemaInstance = deleteSubSchemaInstance;\n        },\n\n        createTabComponent (tabs) {\n            return new TabComponent({\n                tabs,\n                createBody: (id) => {\n                    if (id === SUBSCHEMA_TAB.id) {\n                        return new SubSchemaListComponent({\n                            data: this.data,\n                            subSchemaTemplate: this.subSchemaTemplate,\n                            getSubSchemaCreatableTypes: this.getSubSchemaCreatableTypes,\n                            getSubSchemaInstances: this.getSubSchemaInstances,\n                            deleteSubSchemaInstance: this.deleteSubSchemaInstance\n                        });\n                    } else if (id === PSEUDO_TAB.id) {\n                        return new FlatJSONSchemaView({\n                            schema: this.data.schema,\n                            values: this.data.values\n                        });\n                    } else if (id === DEFAULT_SCRIPTS_TAB.id) {\n                        return new ReactAdapterView({\n                            reactView: ScriptsList,\n                            reactProps: { subSchemaType: this.data.subSchemaInstanceId },\n                            needsBaseTemplate: false\n                        });\n                    } else {\n                        return new FlatJSONSchemaView({\n                            schema: new JSONSchema(this.data.schema.raw.properties[id]),\n                            values: new JSONValues(this.data.values.raw[id])\n                        });\n                    }\n                },\n                createFooter: (id) => {\n                    if (id !== SUBSCHEMA_TAB.id && id !== DEFAULT_SCRIPTS_TAB.id) {\n                        return new PartialBasedView({ partial: \"form/_JSONSchemaFooter\" });\n                    }\n                }\n            });\n        },\n\n        getJSONSchemaView () {\n            return this.subview instanceof TabComponent ? this.subview.getBody() : this.subview;\n        },\n\n        render () {\n            const serviceCalls =\n                _([this.getInstance, this.getSubSchemaTypes])\n                    .compact()\n                    .map((serviceCall) => serviceCall())\n                    .value();\n\n            Promise.all(serviceCalls).then((response) => {\n                const instance = response[0];\n                const subSchema = response[1];\n\n                this.data.schema = instance.schema;\n                this.data.values = instance.values.revertFalseCollections(instance.schema);\n\n                this.data.name = instance.name;\n\n                const tabs = createTabs(instance.schema, subSchema, isScriptingSubSchemaView(this.data.subSchemaType,\n                    this.data.subSubSchemaType));\n                const hasTabs = !_.isEmpty(tabs);\n\n                this.data.hasTabs = hasTabs;\n\n                UIUtils.fillTemplateWithData(this.template, this.data, (html) => {\n                    this.$el.html(html);\n\n                    if (hasTabs) {\n                        this.subview = this.createTabComponent(tabs);\n                        if (this.data.schema.isCollection()) {\n                            const options = {\n                                properties: this.data.schema.raw.properties,\n                                onChange: (tabId, value) => {\n                                    this.subview.setTabId(tabId);\n                                    this.$el.find(`[data-schemapath=\"root.${value}\"]`).find(\"input\").focus();\n                                }\n                            };\n                            this.$el.find(\"[data-tab-search]\").append(new TabSearch(options).render().$el);\n                        }\n                    } else {\n                        this.subview = new FlatJSONSchemaView({\n                            schema: instance.schema,\n                            values: instance.values\n                        });\n                    }\n\n                    this.subview.setElement(this.$el.find(\"[data-json-form]\"));\n                    this.subview.render();\n                });\n            });\n\n            return this;\n        },\n\n        updateValues () {\n            if (this.data.schema.isCollection()) {\n                this.data.values = this.data.values\n                    .extend({ [this.subview.getTabId()]: this.getJSONSchemaView().getData() })\n                    .revertFalseCollections(this.data.schema);\n            } else {\n                this.data.values = new JSONValues(this.getJSONSchemaView().getData());\n            }\n        },\n\n        onSave () {\n            if (!this.getJSONSchemaView().isValid()) {\n                Messages.addMessage({\n                    message: $.t(\"common.form.validation.errorsNotSaved\"),\n                    type: Messages.TYPE_DANGER\n                });\n                return;\n            }\n            this.updateValues();\n            const valuesWithoutNullPasswords = this.data.values.removeNullPasswords(this.data.schema);\n            this.updateInstance(valuesWithoutNullPasswords.toJSON()).then(() => {\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"changesSaved\");\n            }, (response) => {\n                Messages.addMessage({ response, type: Messages.TYPE_DANGER });\n            });\n        },\n\n        onDelete (e) {\n            e.preventDefault();\n\n            FormHelper.showConfirmationBeforeDeleting({\n                message: $.t(\"console.common.confirmDeleteSelected\")\n            }, () => {\n                this.deleteInstance().then(() => {\n                    EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"changesSaved\");\n                    Router.routeTo(this.listRoute, { args: this.listRouteArgs, trigger: true });\n                }, (model, response) => {\n                    Messages.addMessage({ response, type: Messages.TYPE_DANGER });\n                });\n            });\n        }\n    });\n});\n"]}