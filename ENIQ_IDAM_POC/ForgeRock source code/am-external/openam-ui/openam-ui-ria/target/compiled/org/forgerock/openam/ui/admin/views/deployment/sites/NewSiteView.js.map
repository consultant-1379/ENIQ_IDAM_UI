{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/deployment/sites/NewSiteView.js"],"names":["define","$","_","Messages","AbstractView","Router","SitesService","FlatJSONSchemaView","Backlink","NewSiteView","extend","template","events","render","sites","getInitialState","then","data","parentRender","jsonSchemaView","schema","values","el","appendTo","$el","find","onCreate","cloneDeep","getData","siteId","val","create","routeTo","configuration","routes","listSites","args","trigger","response","addMessage","type","TYPE_DANGER","onValidateProps","event","currentTarget","indexOf","message","t","prop"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,qDAHG,EAIH,mDAJG,EAKH,6CALG,EAMH,4DANG,EAOH,oEAPG,EAQH,qDARG,CAAP,EASG,UAACC,CAAD,EAAIC,CAAJ,EAAOC,QAAP,EAAiBC,YAAjB,EAA+BC,MAA/B,EAAuCC,YAAvC,EAAqDC,kBAArD,EAAyEC,QAAzE,EAAsF;AACrF,QAAMC,cAAcL,aAAaM,MAAb,CAAoB;AACpCC,kBAAU,6DAD0B;AAEpCC,gBAAQ;AACJ,mCAAuB,UADnB;AAEJ,uCAA2B;AAFvB,SAF4B;;AAOpCC,cAPoC,oBAO1B;AAAA;;AACNP,yBAAaQ,KAAb,CAAmBC,eAAnB,GAAqCC,IAArC,CAA0C,UAACC,IAAD;AAAA,uBAAU,MAAKC,YAAL,CAAkB,YAAM;AACxE,wBAAIV,QAAJ,GAAeK,MAAf;AACA,0BAAKM,cAAL,GAAsB,IAAIZ,kBAAJ,CAAuB;AACzCa,gCAAQH,KAAKG,MAD4B;AAEzCC,gCAAQJ,KAAKI;AAF4B,qBAAvB,CAAtB;AAIApB,sBAAE,MAAKkB,cAAL,CAAoBN,MAApB,GAA6BS,EAA/B,EAAmCC,QAAnC,CAA4C,MAAKC,GAAL,CAASC,IAAT,CAAc,kBAAd,CAA5C;AACH,iBAPmD,CAAV;AAAA,aAA1C;AAQH,SAhBmC;AAkBpCC,gBAlBoC,sBAkBxB;AACR,gBAAML,SAASnB,EAAEyB,SAAF,CAAY,KAAKR,cAAL,CAAoBS,OAApB,EAAZ,CAAf;AACA,gBAAMC,SAAS,KAAKL,GAAL,CAASC,IAAT,CAAc,kBAAd,EAAkCK,GAAlC,EAAf;AACAT,mBAAO,KAAP,IAAgBQ,MAAhB;;AAEA;AACA;AACAvB,yBAAaQ,KAAb,CAAmBiB,MAAnB,CAA0BV,MAA1B,EACKL,IADL,CACU,YAAM;AAAEX,uBAAO2B,OAAP,CAAe3B,OAAO4B,aAAP,CAAqBC,MAArB,CAA4BC,SAA3C,EAAsD,EAAEC,MAAM,EAAR,EAAYC,SAAS,IAArB,EAAtD;AAAqF,aADvG,EAEQ,UAACC,QAAD,EAAc;AAAEnC,yBAASoC,UAAT,CAAoB,EAAED,kBAAF,EAAYE,MAAMrC,SAASsC,WAA3B,EAApB;AAAgE,aAFxF;AAIH,SA7BmC;AA+BpCC,uBA/BoC,2BA+BnBC,KA/BmB,EA+BZ;AACpB,gBAAId,SAAS5B,EAAE0C,MAAMC,aAAR,EAAuBd,GAAvB,EAAb;AACA,gBAAID,OAAOgB,OAAP,CAAe,GAAf,MAAwB,CAAC,CAA7B,EAAgC;AAC5BhB,yBAAS,KAAT;AACA1B,yBAASoC,UAAT,CAAoB;AAChBC,0BAAMrC,SAASsC,WADC;AAEhBK,6BAAS7C,EAAE8C,CAAF,CAAI,uCAAJ;AAFO,iBAApB;AAIH;AACD,iBAAKvB,GAAL,CAASC,IAAT,CAAc,eAAd,EAA+BuB,IAA/B,CAAoC,UAApC,EAAgD,CAACnB,MAAjD;AACH;AAzCmC,KAApB,CAApB;;AA4CA,WAAO,IAAIpB,WAAJ,EAAP;AACH,CAvDD","file":"NewSiteView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/openam/ui/admin/services/global/SitesService\",\n    \"org/forgerock/openam/ui/common/views/jsonSchema/FlatJSONSchemaView\",\n    \"org/forgerock/openam/ui/admin/views/common/Backlink\"\n], ($, _, Messages, AbstractView, Router, SitesService, FlatJSONSchemaView, Backlink) => {\n    const NewSiteView = AbstractView.extend({\n        template: \"templates/admin/views/deployment/sites/NewSiteTemplate.html\",\n        events: {\n            \"click [data-create]\": \"onCreate\",\n            \"keyup  [data-site-name]\": \"onValidateProps\"\n        },\n\n        render () {\n            SitesService.sites.getInitialState().then((data) => this.parentRender(() => {\n                new Backlink().render();\n                this.jsonSchemaView = new FlatJSONSchemaView({\n                    schema: data.schema,\n                    values: data.values\n                });\n                $(this.jsonSchemaView.render().el).appendTo(this.$el.find(\"[data-site-form]\"));\n            }));\n        },\n\n        onCreate () {\n            const values = _.cloneDeep(this.jsonSchemaView.getData());\n            const siteId = this.$el.find(\"[data-site-name]\").val();\n            values[\"_id\"] = siteId;\n\n            // This doesn't have the values.removeNullPasswords fix from OPENAM-11834 as not required for this view.\n            // However it might need adding in the future.\n            SitesService.sites.create(values)\n                .then(() => { Router.routeTo(Router.configuration.routes.listSites, { args: [], trigger: true }); },\n                    (response) => { Messages.addMessage({ response, type: Messages.TYPE_DANGER }); }\n                );\n        },\n\n        onValidateProps (event) {\n            let siteId = $(event.currentTarget).val();\n            if (siteId.indexOf(\" \") !== -1) {\n                siteId = false;\n                Messages.addMessage({\n                    type: Messages.TYPE_DANGER,\n                    message: $.t(\"console.sites.new.nameValidationError\")\n                });\n            }\n            this.$el.find(\"[data-create]\").prop(\"disabled\", !siteId);\n        }\n    });\n\n    return new NewSiteView();\n});\n"]}