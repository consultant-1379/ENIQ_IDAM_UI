{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/user-1/anonymousProcess/KBAView.js"],"names":["define","$","_","AbstractView","KBAQuestionView","KBAView","extend","element","template","noBaseTemplate","MIN_NUMBER_OF_QUESTIONS","events","render","kbaConfig","allQuestions","questions","minNumberOfQuestions","minItems","selectedQuestions","questionsCounter","parentRender","setDescription","itemsContainer","$el","find","times","bind","addQuestion","text","t","numberOfQuestions","getUnSelectedQuestions","map","questionView","getSelectedQuestionId","compact","value","filter","question","indexOf","id","e","preventDefault","atMinimumThresholdBeforeAdding","isAtMinimumThreshold","push","possibleQuestions","numberOfQuestionsSufficient","isNumberOfQuestionsSufficient","reRenderAllQuestions","unSelectedQuestions","each","currentViewQuestion","findWhere","clone","sort","q1","q2","updateQuestionWithNewData","length","deleteQuestion","viewId","remove","without","changeQuestion","getQuestions","getPair"],"mappings":"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","file":"KBAView.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"lodash\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\r\n    \"org/forgerock/commons/ui/user/anonymousProcess/KBAQuestionView\"\r\n], function ($, _, AbstractView, KBAQuestionView) {\r\n    var KBAView = AbstractView.extend({\r\n        element: \"#kbaQuestions\",\r\n        template: \"templates/user/process/KBATemplate.html\",\r\n        noBaseTemplate: true,\r\n        MIN_NUMBER_OF_QUESTIONS: 1,\r\n        events: {\r\n            \"click [data-add-question]\": \"addQuestion\"\r\n        },\r\n\r\n        /**\r\n         * TODO Implement mechanism of passing existing KBA questions to this view, as this is to be used on the profile\r\n         * page as well.\r\n         *\r\n         * The format of existing KBA questions is the following:\r\n         *  \"kbaInfo\":[\r\n         *      {\r\n         *          \"customQuestion\": \"question2\",\r\n         *          \"answer\":{\"$crypto\":{\"value\":{\"algorithm\":\"SHA-256\",\"data\":\".....\"},\"type\":\"salted-hash\"}}\r\n         *      },\r\n         *      {\r\n         *          \"questionId\": \"2\",\r\n         *          \"answer\":{\"$crypto\":{\"value\":{\"algorithm\":\"SHA-256\",\"data\":\".....\"},\"type\":\"salted-hash\"}}\r\n         *      }\r\n         * ]\r\n         */\r\n        render: function (kbaConfig) {\r\n            this.allQuestions = kbaConfig.questions;\r\n            this.minNumberOfQuestions = kbaConfig.minItems || this.MIN_NUMBER_OF_QUESTIONS;\r\n            this.selectedQuestions = [];\r\n            this.questionsCounter = 0;\r\n\r\n            this.parentRender(function () {\r\n                this.setDescription();\r\n\r\n                this.itemsContainer = this.$el.find(\"#kbaItems\");\r\n\r\n                _.times(this.minNumberOfQuestions, _.bind(function () {\r\n                    this.addQuestion();\r\n                }, this));\r\n            });\r\n        },\r\n\r\n        setDescription: function () {\r\n            this.$el.find(\"#kbaDescription\").text($.t(\"common.user.kba.description\", {\r\n                numberOfQuestions: this.minNumberOfQuestions\r\n            }));\r\n        },\r\n\r\n        getUnSelectedQuestions: function () {\r\n            var selectedQuestions = _(this.selectedQuestions)\r\n                .map(function (questionView) {\r\n                    return questionView.getSelectedQuestionId();\r\n                })\r\n                .compact()\r\n                .value();\r\n\r\n            return _.filter(this.allQuestions, function (question) {\r\n                return selectedQuestions.indexOf(question.id) === -1;\r\n            });\r\n        },\r\n\r\n        addQuestion: function (e) {\r\n            if (e) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            var atMinimumThresholdBeforeAdding = this.isAtMinimumThreshold(),\r\n                question = new KBAQuestionView({ id: this.questionsCounter++ });\r\n\r\n            this.selectedQuestions.push(question);\r\n\r\n            question.render({\r\n                possibleQuestions: this.getUnSelectedQuestions(),\r\n                numberOfQuestionsSufficient: this.isNumberOfQuestionsSufficient()\r\n            }, this.itemsContainer);\r\n\r\n            if (atMinimumThresholdBeforeAdding) {\r\n                this.reRenderAllQuestions();\r\n            }\r\n        },\r\n\r\n        reRenderAllQuestions: function () {\r\n            var unSelectedQuestions = this.getUnSelectedQuestions();\r\n\r\n            _.each(this.selectedQuestions, _.bind(function (questionView) {\r\n                var currentViewQuestion = _.findWhere(this.allQuestions, { id: questionView.getSelectedQuestionId() }),\r\n                    possibleQuestions = _.clone(unSelectedQuestions);\r\n\r\n                if (currentViewQuestion) {\r\n                    possibleQuestions.push(currentViewQuestion);\r\n                    possibleQuestions.sort(function (q1, q2) {\r\n                        return q1.id - q2.id;\r\n                    });\r\n                }\r\n\r\n                questionView.updateQuestionWithNewData({\r\n                    possibleQuestions: possibleQuestions,\r\n                    numberOfQuestionsSufficient: this.isNumberOfQuestionsSufficient()\r\n                });\r\n            }, this));\r\n        },\r\n\r\n        isNumberOfQuestionsSufficient: function () {\r\n            return this.minNumberOfQuestions < this.selectedQuestions.length;\r\n        },\r\n\r\n        deleteQuestion: function (viewId) {\r\n            var questionView = _.findWhere(this.selectedQuestions, { id: viewId });\r\n\r\n            questionView.remove();\r\n            this.selectedQuestions = _.without(this.selectedQuestions, questionView);\r\n\r\n            if (questionView.getSelectedQuestionId() || this.isAtMinimumThreshold()) {\r\n                this.reRenderAllQuestions();\r\n            }\r\n        },\r\n\r\n        changeQuestion: function () {\r\n            this.reRenderAllQuestions();\r\n        },\r\n\r\n        isAtMinimumThreshold: function () {\r\n            return this.minNumberOfQuestions === this.selectedQuestions.length;\r\n        },\r\n\r\n        getQuestions: function () {\r\n            return _.map(this.selectedQuestions, function (questionView) {\r\n                return questionView.getPair();\r\n            });\r\n        }\r\n    });\r\n\r\n    return new KBAView();\r\n});"]}