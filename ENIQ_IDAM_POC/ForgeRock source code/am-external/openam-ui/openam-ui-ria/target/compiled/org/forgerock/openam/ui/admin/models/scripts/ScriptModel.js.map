{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/admin/models/scripts/ScriptModel.js"],"names":["define","Backbone","Base64","URLHelper","ModelUtils","Model","extend","idAttribute","urlRoot","substitute","defaults","_id","name","script","language","context","validate","attrs","trim","parse","resp","decodeUTF8","sync","method","model","options","beforeSend","xhr","setRequestHeader","error","errorHandler","toLowerCase","id","url","set","encodeUTF8","get","prototype","call"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,UADG,EAEH,6CAFG,EAGH,+CAHG,EAIH,gDAJG,CAAP,EAKG,UAAUC,QAAV,EAAoBC,MAApB,EAA4BC,SAA5B,EAAuCC,UAAvC,EAAmD;AAClD,WAAOH,SAASI,KAAT,CAAeC,MAAf,CAAsB;AACzBC,qBAAa,KADY;AAEzBC,iBAASL,UAAUM,UAAV,CAAqB,iBAArB,CAFgB;AAGzBC,gBAHyB,sBAGb;AACR,mBAAO;AACHC,qBAAK,IADF;AAEHC,sBAAM,EAFH;AAGHC,wBAAQ,EAHL;AAIHC,0BAAU,EAJP;AAKHC,yBAAS;AALN,aAAP;AAOH,SAXwB;AAazBC,gBAbyB,oBAafC,KAbe,EAaR;AACb,gBAAIA,MAAML,IAAN,CAAWM,IAAX,OAAsB,EAA1B,EAA8B;AAC1B,uBAAO,mBAAP;AACH;;AAED,gBAAID,MAAMH,QAAN,KAAmB,EAAvB,EAA2B;AACvB,uBAAO,uBAAP;AACH;AACJ,SArBwB;AAuBzBK,aAvByB,iBAuBlBC,IAvBkB,EAuBZ;AACT,gBAAIA,QAAQA,KAAKP,MAAjB,EAAyB;AACrBO,qBAAKP,MAAL,GAAcX,OAAOmB,UAAP,CAAkBD,KAAKP,MAAvB,CAAd;AACH;AACD,mBAAOO,IAAP;AACH,SA5BwB;AA8BzBE,YA9ByB,gBA8BnBC,MA9BmB,EA8BXC,KA9BW,EA8BJC,OA9BI,EA8BK;AAC1BA,sBAAUA,WAAW,EAArB;AACAA,oBAAQC,UAAR,GAAqB,UAAUC,GAAV,EAAe;AAChCA,oBAAIC,gBAAJ,CAAqB,oBAArB,EAA2C,2BAA3C;AACH,aAFD;AAGAH,oBAAQI,KAAR,GAAgBzB,WAAW0B,YAA3B;;AAEAP,qBAASA,OAAOQ,WAAP,EAAT;AACA,gBAAIR,WAAW,QAAX,IAAuBC,MAAMQ,EAAN,KAAa,IAAxC,EAA8C;AAC1CP,wBAAQQ,GAAR,GAAiB,KAAKzB,OAAL,EAAjB;AACH;;AAED,gBAAIe,WAAW,QAAX,IAAuBA,WAAW,QAAtC,EAAgD;AAC5CC,sBAAMU,GAAN,CAAU,QAAV,EAAoBhC,OAAOiC,UAAP,CAAkBX,MAAMY,GAAN,CAAU,QAAV,CAAlB,CAApB;AACH;;AAED,mBAAOnC,SAASI,KAAT,CAAegC,SAAf,CAAyBf,IAAzB,CAA8BgB,IAA9B,CAAmC,IAAnC,EAAyCf,MAAzC,EAAiDC,KAAjD,EAAwDC,OAAxD,CAAP;AACH;AA/CwB,KAAtB,CAAP;AAiDH,CAvDD","file":"ScriptModel.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"backbone\",\n    \"org/forgerock/commons/ui/common/util/Base64\",\n    \"org/forgerock/openam/ui/common/util/URLHelper\",\n    \"org/forgerock/openam/ui/admin/utils/ModelUtils\"\n], function (Backbone, Base64, URLHelper, ModelUtils) {\n    return Backbone.Model.extend({\n        idAttribute: \"_id\",\n        urlRoot: URLHelper.substitute(\"__api__/scripts\"),\n        defaults () {\n            return {\n                _id: null,\n                name: \"\",\n                script: \"\",\n                language: \"\",\n                context: \"\"\n            };\n        },\n\n        validate (attrs) {\n            if (attrs.name.trim() === \"\") {\n                return \"scriptErrorNoName\";\n            }\n\n            if (attrs.language === \"\") {\n                return \"scriptErrorNoLanguage\";\n            }\n        },\n\n        parse (resp) {\n            if (resp && resp.script) {\n                resp.script = Base64.decodeUTF8(resp.script);\n            }\n            return resp;\n        },\n\n        sync (method, model, options) {\n            options = options || {};\n            options.beforeSend = function (xhr) {\n                xhr.setRequestHeader(\"Accept-API-Version\", \"protocol=1.0,resource=1.0\");\n            };\n            options.error = ModelUtils.errorHandler;\n\n            method = method.toLowerCase();\n            if (method === \"create\" || model.id === null) {\n                options.url = `${this.urlRoot()}/?_action=create`;\n            }\n\n            if (method === \"create\" || method === \"update\") {\n                model.set(\"script\", Base64.encodeUTF8(model.get(\"script\")));\n            }\n\n            return Backbone.Model.prototype.sync.call(this, method, model, options);\n        }\n    });\n});\n"]}