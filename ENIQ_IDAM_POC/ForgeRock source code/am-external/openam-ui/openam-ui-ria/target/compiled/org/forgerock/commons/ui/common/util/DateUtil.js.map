{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/util/DateUtil.js"],"names":["define","_","Handlebars","XDate","moment","obj","registerHelper","unformattedDate","datePattern","date","parseDateString","formattedDate","isDateValid","isString","formatDate","SafeString","defaultDateFormat","toString","Object","prototype","call","isNaN","getTime","isDateStringValid","dateString","length","isValid","parseStringValid","getDateFromEpochString","stringWithMilisFromEpoch","parseInt","toDate","currentDate","replace"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,YADI,EAEJ,YAFI,EAGJ,OAHI,EAIJ,QAJI,CAAP,EAKE,UAAUC,CAAV,EAAaC,UAAb,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;;AAEvC,QAAIC,MAAM,EAAV;;AAEA;AACAH,eAAWI,cAAX,CAA0B,MAA1B,EAAkC,UAASC,eAAT,EAA0BC,WAA1B,EAAuC;AACrE,YAAIC,OAAOJ,IAAIK,eAAJ,CAAoBH,eAApB,CAAX;AAAA,YAAiDI,aAAjD;;AAEA,YAAG,CAACN,IAAIO,WAAJ,CAAgBH,IAAhB,CAAJ,EAA2B;AACvB,mBAAO,EAAP;AACH;;AAED,YAAID,eAAeP,EAAEY,QAAF,CAAWL,WAAX,CAAnB,EAA4C;AACxCG,4BAAgBN,IAAIS,UAAJ,CAAeL,IAAf,EAAoBD,WAApB,CAAhB;AACH,SAFD,MAEO;AACHG,4BAAgBN,IAAIS,UAAJ,CAAeL,IAAf,CAAhB;AACH;;AAED,eAAO,IAAIP,WAAWa,UAAf,CAA0BJ,aAA1B,CAAP;AACH,KAdD;;AAgBAN,QAAIW,iBAAJ,GAAwB,eAAxB;;AAEAX,QAAIS,UAAJ,GAAiB,UAAUL,IAAV,EAAgBD,WAAhB,EAA6B;AAC1C,YAAIA,WAAJ,EAAgB;AACZ,mBAAO,IAAIL,KAAJ,CAAUM,IAAV,EAAgBQ,QAAhB,CAAyBT,WAAzB,CAAP;AACH,SAFD,MAEO;AACH,mBAAO,IAAIL,KAAJ,CAAUM,IAAV,EAAgBQ,QAAhB,CAAyBZ,IAAIW,iBAA7B,CAAP;AACH;AACJ,KAND;;AAQAX,QAAIO,WAAJ,GAAkB,UAASH,IAAT,EAAe;AAC7B,YAAKS,OAAOC,SAAP,CAAiBF,QAAjB,CAA0BG,IAA1B,CAA+BX,IAA/B,MAAyC,eAA9C,EAAgE;AAC5D,mBAAO,KAAP;AACH;AACD,eAAO,CAACY,MAAMZ,KAAKa,OAAL,EAAN,CAAR;AACH,KALD;;AAOAjB,QAAIkB,iBAAJ,GAAwB,UAASC,UAAT,EAAqBhB,WAArB,EAAkC;AACtD,eAAOgB,WAAWC,MAAX,KAAsBjB,YAAYiB,MAAlC,IAA4CrB,OAAOoB,UAAP,EAAmBhB,WAAnB,EAAgCkB,OAAhC,EAAnD;AACH,KAFD;;AAIArB,QAAIsB,gBAAJ,GAAuB,UAASH,UAAT,EAAqBhB,WAArB,EAAkC;AACrD,eAAOgB,WAAWC,MAAX,KAAsBjB,YAAYiB,MAAlC,IAA4CrB,OAAOoB,UAAP,EAAmBhB,WAAnB,EAAgCkB,OAAhC,EAAnD;AACH,KAFD;;AAIArB,QAAIuB,sBAAJ,GAA6B,UAASC,wBAAT,EAAmC;AAC5D,eAAO,IAAI1B,KAAJ,CAAU2B,SAASD,wBAAT,EAAmC,EAAnC,CAAV,EAAkDE,MAAlD,EAAP;AACH,KAFD;;AAIA1B,QAAI2B,WAAJ,GAAkB,YAAW;AACzB,eAAO,IAAI7B,KAAJ,GAAY4B,MAAZ,EAAP;AACH,KAFD;;AAIA1B,QAAIK,eAAJ,GAAsB,UAASc,UAAT,EAAqBhB,WAArB,EAAkC;AACpD,YAAIA,WAAJ,EAAiB;AACbA,0BAAcA,YAAYyB,OAAZ,CAAoB,IAApB,EAAyB,GAAzB,CAAd;AACAzB,0BAAcA,YAAYyB,OAAZ,CAAoB,IAApB,EAAyB,GAAzB,CAAd;AACA,mBAAO7B,OAAOoB,UAAP,EAAmBhB,WAAnB,EAAgCuB,MAAhC,EAAP;AACH,SAJD,MAIO;AACH,mBAAO,IAAI5B,KAAJ,CAAUqB,UAAV,EAAsBO,MAAtB,EAAP;AACH;AACJ,KARD;;AAUA,WAAO1B,GAAP;AACH,CAtEA","file":"DateUtil.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"underscore\",\r\n    \"handlebars\",\r\n    \"xdate\",\r\n    \"moment\"\r\n], function (_, Handlebars, XDate, moment) {\r\n\r\n    var obj = {};\r\n\r\n    //format ISO8601; example: 2012-10-29T10:49:49.419+01:00\r\n    Handlebars.registerHelper('date', function(unformattedDate, datePattern) {\r\n        var date = obj.parseDateString(unformattedDate), formattedDate;\r\n\r\n        if(!obj.isDateValid(date)) {\r\n            return \"\";\r\n        }\r\n\r\n        if (datePattern && _.isString(datePattern)) {\r\n            formattedDate = obj.formatDate(date,datePattern);\r\n        } else {\r\n            formattedDate = obj.formatDate(date);\r\n        }\r\n\r\n        return new Handlebars.SafeString(formattedDate);\r\n    });\r\n\r\n    obj.defaultDateFormat = \"MMMM dd, yyyy\";\r\n\r\n    obj.formatDate = function (date, datePattern) {\r\n        if (datePattern){\r\n            return new XDate(date).toString(datePattern);\r\n        } else {\r\n            return new XDate(date).toString(obj.defaultDateFormat);\r\n        }\r\n    };\r\n\r\n    obj.isDateValid = function(date) {\r\n        if ( Object.prototype.toString.call(date) !== \"[object Date]\" ) {\r\n            return false;\r\n        }\r\n        return !isNaN(date.getTime());\r\n    };\r\n\r\n    obj.isDateStringValid = function(dateString, datePattern) {\r\n        return dateString.length === datePattern.length && moment(dateString, datePattern).isValid();\r\n    };\r\n\r\n    obj.parseStringValid = function(dateString, datePattern) {\r\n        return dateString.length === datePattern.length && moment(dateString, datePattern).isValid();\r\n    };\r\n\r\n    obj.getDateFromEpochString = function(stringWithMilisFromEpoch) {\r\n        return new XDate(parseInt(stringWithMilisFromEpoch, 10)).toDate();\r\n    };\r\n\r\n    obj.currentDate = function() {\r\n        return new XDate().toDate();\r\n    };\r\n\r\n    obj.parseDateString = function(dateString, datePattern) {\r\n        if (datePattern) {\r\n            datePattern = datePattern.replace(/d/g,'D');\r\n            datePattern = datePattern.replace(/y/g,'Y');\r\n            return moment(dateString, datePattern).toDate();\r\n        } else {\r\n            return new XDate(dateString).toDate();\r\n        }\r\n    };\r\n\r\n    return obj;\r\n});"]}