{"version":3,"sources":["../../../../../../XUI/org/forgerock/openam/ui/common/RouteTo.js"],"names":["define","Constants","EventManager","Router","Configuration","SessionManager","obj","setGoToUrlProperty","hash","getCurrentHash","gotoURL","match","configuration","routes","login","url","setProperty","forbiddenPage","globalData","authorizationFailurePending","sendEvent","EVENT_CHANGE_VIEW","route","view","fromRouter","forbiddenError","EVENT_DISPLAY_MESSAGE_REQUEST","logout","then","EVENT_AUTHENTICATION_DATA_CHANGED","anonymousMode","loginDialog","EVENT_SHOW_LOGIN_DIALOG"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBA;;;;;AAKAA,OAAO,CACH,+CADG,EAEH,mDAFG,EAGH,6CAHG,EAIH,oDAJG,EAKH,qDALG,CAAP,EAMG,UAAUC,SAAV,EAAqBC,YAArB,EAAmCC,MAAnC,EAA2CC,aAA3C,EAA0DC,cAA1D,EAA0E;AACzE,QAAIC,MAAM;AACNC,0BADM,gCACgB;AAClB,gBAAIC,OAAOL,OAAOM,cAAP,EAAX;AACA,gBAAI,CAACL,cAAcM,OAAf,IAA0B,CAACF,KAAKG,KAAL,CAAWR,OAAOS,aAAP,CAAqBC,MAArB,CAA4BC,KAA5B,CAAkCC,GAA7C,CAA/B,EAAkF;AAC9EX,8BAAcY,WAAd,CAA0B,SAA1B,QAAyCR,IAAzC;AACH;AACJ,SANK;AAONS,qBAPM,2BAOW;AACb,mBAAOb,cAAcc,UAAd,CAAyBC,2BAAhC;AACA,mBAAOjB,aAAakB,SAAb,CAAuBnB,UAAUoB,iBAAjC,EAAoD;AACvDC,uBAAO;AACHC,0BAAM,0DADH;AAEHR,yBAAK;AAFF,iBADgD;AAKvDS,4BAAY;AAL2C,aAApD,CAAP;AAOH,SAhBK;AAiBNC,sBAjBM,4BAiBY;AACdvB,yBAAakB,SAAb,CAAuBnB,UAAUyB,6BAAjC,EAAgE,cAAhE;AACH,SAnBK;AAoBNC,cApBM,oBAoBI;AACNrB,gBAAIC,kBAAJ;;AAEA,mBAAOF,eAAesB,MAAf,GAAwBC,IAAxB,CAA6B,YAAY;AAC5C1B,6BAAakB,SAAb,CAAuBnB,UAAU4B,iCAAjC,EAAoE;AAChEC,mCAAe;AADiD,iBAApE;AAGA,uBAAO5B,aAAakB,SAAb,CAAuBnB,UAAUoB,iBAAjC,EAAoD;AACvDC,2BAAOnB,OAAOS,aAAP,CAAqBC,MAArB,CAA4BC;AADoB,iBAApD,CAAP;AAGH,aAPM,CAAP;AAQH,SA/BK;AAgCNiB,mBAhCM,yBAgCS;AACX,mBAAO7B,aAAakB,SAAb,CAAuBnB,UAAU+B,uBAAjC,CAAP;AACH;AAlCK,KAAV;;AAqCA,WAAO1B,GAAP;AACH,CA7CD","file":"RouteTo.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\n/**\n  * Provides functions to navigate the application to commonly required routes.\n  *\n  * @module org/forgerock/openam/ui/common/RouteTo\n  */\ndefine([\n    \"org/forgerock/openam/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/main/Configuration\",\n    \"org/forgerock/commons/ui/common/main/SessionManager\"\n], function (Constants, EventManager, Router, Configuration, SessionManager) {\n    var obj = {\n        setGoToUrlProperty () {\n            var hash = Router.getCurrentHash();\n            if (!Configuration.gotoURL && !hash.match(Router.configuration.routes.login.url)) {\n                Configuration.setProperty(\"gotoURL\", `#${hash}`);\n            }\n        },\n        forbiddenPage () {\n            delete Configuration.globalData.authorizationFailurePending;\n            return EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\n                route: {\n                    view: \"org/forgerock/openam/ui/common/views/error/ForbiddenView\",\n                    url: /.*/\n                },\n                fromRouter: true\n            });\n        },\n        forbiddenError () {\n            EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"unauthorized\");\n        },\n        logout () {\n            obj.setGoToUrlProperty();\n\n            return SessionManager.logout().then(function () {\n                EventManager.sendEvent(Constants.EVENT_AUTHENTICATION_DATA_CHANGED, {\n                    anonymousMode: true\n                });\n                return EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\n                    route: Router.configuration.routes.login\n                });\n            });\n        },\n        loginDialog () {\n            return EventManager.sendEvent(Constants.EVENT_SHOW_LOGIN_DIALOG);\n        }\n    };\n\n    return obj;\n});\n"]}