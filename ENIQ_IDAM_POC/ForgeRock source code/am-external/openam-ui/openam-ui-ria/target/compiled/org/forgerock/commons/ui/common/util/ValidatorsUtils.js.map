{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/common/util/ValidatorsUtils.js"],"names":["define","$","_","obj","namePattern","RegExp","phonePattern","emailPattern","setErrors","el","validatorType","msg","each","split","vt","find","input","$input","type","attr","span","prev","text","inArray","removeClass","addClass","hideValidation","nextAll","hide","showValidation","show","hideBox","showBox"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,QADI,EAEJ,YAFI,CAAP,EAGE,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACd,QAAIC,MAAM,EAAV;;AAEAA,QAAIC,WAAJ,GAAkB,IAAIC,MAAJ,CAAW,4DACzB,oFADyB,GAEzB,sEAFyB,GAGzB,sEAHyB,GAIzB,8EAJyB,GAKzB,oCALc,CAAlB;AAMAF,QAAIG,YAAJ,GAAmB,sBAAnB;AACAH,QAAII,YAAJ,GAAmB,6DAAnB;;AAEAJ,QAAIK,SAAJ,GAAgB,UAASC,EAAT,EAAaC,aAAb,EAA4BC,GAA5B,EAAiC;AAC7CT,UAAEU,IAAF,CAAOF,cAAcG,KAAd,CAAoB,GAApB,CAAP,EAAiC,UAAUC,EAAV,EAAc;AAC3CZ,cAAEU,IAAF,CAAOH,GAAGM,IAAH,CAAQ,6BAA6BD,EAA7B,GAAkC,GAA1C,CAAP,EAAuD,UAAUE,KAAV,EAAiB;AACpE,oBAAIC,SAASR,GAAGM,IAAH,CAAQC,KAAR,CAAb;AAAA,oBACIE,OAAOD,OAAOE,IAAP,CAAY,cAAZ,CADX;AAAA,oBAEIC,OAAOH,OAAOI,IAAP,CAAY,MAAZ,CAFX;AAGA,oBAAI,CAACH,IAAL,EAAW;AACPA,2BAAOD,OAAOK,IAAP,EAAP;AACH;;AAED,oBAAIrB,EAAEsB,OAAF,CAAUL,IAAV,EAAgBP,GAAhB,MAAyB,CAAC,CAA9B,EAAiC;AAC7BS,yBAAKI,WAAL,CAAiB,aAAjB;AACAJ,yBAAKK,QAAL,CAAc,WAAd;AACH,iBAHD,MAGO;AACHL,yBAAKI,WAAL,CAAiB,WAAjB;AACAJ,yBAAKK,QAAL,CAAc,aAAd;AACH;AACJ,aAfD;AAgBH,SAjBD;AAkBH,KAnBD;;AAqBAtB,QAAIuB,cAAJ,GAAqB,UAAUT,MAAV,EAAkBR,EAAlB,EAAsB;AACvCQ,eAAOU,OAAP,CAAe,MAAf,EAAuBC,IAAvB;AACAX,eAAOU,OAAP,CAAe,8BAAf,EAA+CC,IAA/C;AACAnB,WAAGM,IAAH,CAAQ,iCAAiCE,OAAOE,IAAP,CAAY,MAAZ,CAAjC,GAAuD,IAA/D,EAAqES,IAArE;AACH,KAJD;;AAMAzB,QAAI0B,cAAJ,GAAqB,UAAUZ,MAAV,EAAkBR,EAAlB,EAAsB;AACvCQ,eAAOU,OAAP,CAAe,MAAf,EAAuBG,IAAvB;AACAb,eAAOU,OAAP,CAAe,8BAAf,EAA+CG,IAA/C;AACArB,WAAGM,IAAH,CAAQ,iCAAiCE,OAAOE,IAAP,CAAY,MAAZ,CAAjC,GAAuD,IAA/D,EAAqEW,IAArE;AACH,KAJD;;AAMA3B,QAAI4B,OAAJ,GAAc,UAAStB,EAAT,EAAa;AACvBA,WAAGM,IAAH,CAAQ,qBAAR,EAA+Ba,IAA/B;AACH,KAFD;;AAIAzB,QAAI6B,OAAJ,GAAc,UAASvB,EAAT,EAAa;AACvBA,WAAGM,IAAH,CAAQ,qBAAR,EAA+Be,IAA/B;AACH,KAFD;;AAIA,WAAO3B,GAAP;AACH,CAzDA","file":"ValidatorsUtils.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2012-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"underscore\"\r\n], function($, _) {\r\n    var obj = {};\r\n\r\n    obj.namePattern = new RegExp(\"^([A-Za'-\\u0105\\u0107\\u0119\\u0142\\u00F3\\u015B\\u017C\\u017A\" +\r\n        \"\\u0104\\u0106\\u0118\\u0141\\u00D3\\u015A\\u017B\\u0179\\u00C0\\u00C8\\u00CC\\u00D2\\u00D9\\u00E0\\u00E8\\u00EC\\u00F2\" +\r\n        \"\\u00F9\\u00C1\\u00C9\\u00CD\\u00D3\\u00DA\\u00DD\\u00E1\\u00E9\\u00ED\\u00F3\\u00FA\\u00FD\\u00C2\\u00CA\\u00CE\\u00D4\" +\r\n        \"\\u00DB\\u00E2\\u00EA\\u00EE\\u00F4\\u00FB\\u00C3\\u00D1\\u00D5\\u00E3\\u00F1\\u00F5\\u00C4\\u00CB\\u00CF\\u00D6\\u00DC\" +\r\n        \"\\u0178\\u00E4\\u00EB\\u00EF\\u00F6\\u00FC\\u0178\\u00A1\\u00BF\\u00E7\\u00C7\\u0152\\u0153\\u00DF\\u00D8\\u00F8\\u00C5\" +\r\n        \"\\u00E5\\u00C6\\u00E6\\u00DE\\u00FE\\u00D0\\u00F0\\-\\s])+$\");\r\n    obj.phonePattern = /^\\+?([0-9\\- \\(\\)])*$/;\r\n    obj.emailPattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n\r\n    obj.setErrors = function(el, validatorType, msg) {\r\n        _.each(validatorType.split(' '), function (vt) {\r\n            _.each(el.find(\"span[data-for-validator=\" + vt + \"]\"), function (input) {\r\n                var $input = el.find(input),\r\n                    type = $input.attr(\"data-for-req\"),\r\n                    span = $input.prev(\"span\");\r\n                if (!type) {\r\n                    type = $input.text();\r\n                }\r\n\r\n                if ($.inArray(type, msg) !== -1) {\r\n                    span.removeClass('has-success');\r\n                    span.addClass('has-error');\r\n                } else {\r\n                    span.removeClass('has-error');\r\n                    span.addClass('has-success');\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    obj.hideValidation = function ($input, el) {\r\n        $input.nextAll(\"span\").hide();\r\n        $input.nextAll(\"div.validation-message:first\").hide();\r\n        el.find(\"div.validation-message[for='\" + $input.attr('name') + \"']\").hide();\r\n    };\r\n\r\n    obj.showValidation = function ($input, el) {\r\n        $input.nextAll(\"span\").show();\r\n        $input.nextAll(\"div.validation-message:first\").show();\r\n        el.find(\"div.validation-message[for='\" + $input.attr('name') + \"']\").show();\r\n    };\r\n\r\n    obj.hideBox = function(el) {\r\n        el.find(\".group-field-errors\").hide();\r\n    };\r\n\r\n    obj.showBox = function(el) {\r\n        el.find(\".group-field-errors\").show();\r\n    };\r\n\r\n    return obj;\r\n});"]}