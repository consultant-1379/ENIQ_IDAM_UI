{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/common/navigation/createTreeNavigation.js"],"names":["define","_","Router","throwOnNoData","data","Error","isArray","throwOnArgsNotArray","args","createTreeNavigation","each","navObj","route","href","getLink","configuration","routes","event","children","camelCase","title"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,6CAFG,CAAP,EAGG,UAACC,CAAD,EAAIC,MAAJ,EAAe;AACd,aAASC,aAAT,CAAwBC,IAAxB,EAA8B;AAC1B,YAAI,CAACA,IAAL,EAAW;AACP,kBAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACH,SAFD,MAEO,IAAID,QAAQ,CAACH,EAAEK,OAAF,CAAUF,IAAV,CAAb,EAA8B;AACjC,kBAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH;AACJ;;AAED,aAASE,mBAAT,CAA8BC,IAA9B,EAAoC;AAChC,YAAIA,QAAQ,CAACP,EAAEK,OAAF,CAAUE,IAAV,CAAb,EAA8B;AAC1B,kBAAM,IAAIH,KAAJ,CAAU,kDAAV,CAAN;AACH;AACJ;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,aAASI,oBAAT,CAA+BL,IAA/B,EAAqCI,IAArC,EAA2C;AACvCL,sBAAcC,IAAd;AACAG,4BAAoBC,IAApB;;AAEAP,UAAES,IAAF,CAAON,IAAP,EAAa,UAACO,MAAD,EAAY;AACrB,gBAAIA,OAAOC,KAAX,EAAkB;AACdD,uBAAOE,IAAP,SAAkBX,OAAOY,OAAP,CAAeZ,OAAOa,aAAP,CAAqBC,MAArB,CAA4BL,OAAOC,KAAnC,CAAf,EAA0DJ,IAA1D,CAAlB;AACH,aAFD,MAEO,IAAIG,OAAOM,KAAX,EAAkB;AACrBN,uBAAOE,IAAP,GAAc,GAAd;AACH,aAFM,MAEA,IAAIF,OAAOO,QAAX,EAAqB;AACxBP,uBAAOE,IAAP,GAAcZ,EAAEkB,SAAF,CAAYR,OAAOS,KAAnB,CAAd;AACAX,qCAAqBE,OAAOO,QAA5B,EAAsCV,IAAtC;AACH;AACJ,SATD;AAUA,eAAOJ,IAAP;AACH;AACD,WAAOK,oBAAP;AACH,CAvED","file":"createTreeNavigation.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/Router\"\n], (_, Router) => {\n    function throwOnNoData (data) {\n        if (!data) {\n            throw new Error(\"[createTreeNavigation] No \\\"data\\\" array found.\");\n        } else if (data && !_.isArray(data)) {\n            throw new Error(\"[createTreeNavigation] \\\"data\\\" is not an array.\");\n        }\n    }\n\n    function throwOnArgsNotArray (args) {\n        if (args && !_.isArray(args)) {\n            throw new Error(\"[createTreeNavigation] \\\"args\\\" is not an array.\");\n        }\n    }\n\n    /**\n     * @param  {object[]} data An array of navigation objects\n     * @param  {string} data[].title The navigation link title. This can be a translation string.\n     * @param  {string} data[].icon The navigation link icon\n     * @param  {string} [data[].route] Each data[] object needs to have one of the following,\n     *                                 [data[].route], or [data[].event], or [data[].children].\n     *                                 If a [data[].route] is supplied, the Router will convert this value into an href\n     * @param  {string} [data[].event] If a [data[].event] is supplied, the event will be added via the template\n     * @param  {array} [data[].children] An array of child navigation objects of the same format as this.\n     * @param  {array} [args] An array of routing arguments.\n     * @example\n     * <code>\n     * data = [{\n     *     title: \"console.common.navigation.foo\",\n     *     icon: \"fa-check-triangle-o\",\n     *     route: \"myRouteKey\"\n     * }, {\n     *     title: \"console.common.navigation.privileges\",\n     *     icon: \"fa-check-square-o\",\n     *     event: \"main.navigation.EVENT_REDIRECT_TO_JATO_PRIVILEGES\"\n     * }, {\n     *     title: \"console.common.navigation.authorization\",\n     *     icon: \"fa-key\",\n     *     children: [{\n     *         title: \"console.common.navigation.policySets\",\n     *         icon: \"fa-angle-right\",\n     *         route: \"realmsPolicySets\"\n     *     }, {\n     *         title: \"console.common.navigation.resourceTypes\",\n     *         icon: \"fa-angle-right\",\n     *         route: \"realmsResourceTypes\"\n     *     }]\n     * }]\n     * </code>\n     * @returns {object[]} Returns the same array with an object[].href added to each navigation object.\n     */\n    function createTreeNavigation (data, args) {\n        throwOnNoData(data);\n        throwOnArgsNotArray(args);\n\n        _.each(data, (navObj) => {\n            if (navObj.route) {\n                navObj.href = `#${Router.getLink(Router.configuration.routes[navObj.route], args)}`;\n            } else if (navObj.event) {\n                navObj.href = \"#\";\n            } else if (navObj.children) {\n                navObj.href = _.camelCase(navObj.title);\n                createTreeNavigation(navObj.children, args);\n            }\n        });\n        return data;\n    }\n    return createTreeNavigation;\n});\n"]}