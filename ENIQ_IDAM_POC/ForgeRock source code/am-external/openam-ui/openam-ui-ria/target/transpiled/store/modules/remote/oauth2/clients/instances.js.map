{"version":3,"sources":["../../../../../../XUI/store/modules/remote/oauth2/clients/instances.jsm"],"names":["ADD_INSTANCE","REMOVE_INSTANCE","SET_INSTANCES","addInstance","removeInstance","setInstances","initialState","state","action","payload","_id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;AACA,QAAMA,eAAe,8CAArB;AACA,QAAMC,kBAAkB,iDAAxB;AACA,QAAMC,gBAAgB,+CAAtB;;AAEA;AACO,QAAMC,oCAAc,gCAAaH,YAAb,CAApB;AACA,QAAMI,0CAAiB,gCAAaH,eAAb,CAAvB;AACA,QAAMI,sCAAe,gCAAaH,aAAb,CAArB;;AAEP;AACA,QAAMI,eAAe,EAArB;sBACe,uFACVN,YADU,EACK,UAACO,KAAD,EAAQC,MAAR;AAAA,4BACTD,KADS,sBAEXC,OAAOC,OAAP,CAAeC,GAFJ,EAEUF,OAAOC,OAFjB;AAAA,KADL,mCAKVR,eALU,EAKQ,UAACM,KAAD,EAAQC,MAAR;AAAA,eAAmB,kBAAKD,KAAL,EAAYC,OAAOC,OAAP,CAAeC,GAA3B,CAAnB;AAAA,KALR,mCAMVR,aANU,EAMM,UAACK,KAAD,EAAQC,MAAR;AAAA,eAAmB,qBAAQA,OAAOC,OAAf,EAAwB,KAAxB,CAAnB;AAAA,KANN,oBAOZH,YAPY,C","file":"instances.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { indexBy, omit } from \"lodash\";\n\n// Types\nconst ADD_INSTANCE = \"remote/oauth2/clients/instances/ADD_INSTANCE\";\nconst REMOVE_INSTANCE = \"remote/oauth2/clients/instances/REMOVE_INSTANCE\";\nconst SET_INSTANCES = \"remote/oauth2/clients/instances/SET_INSTANCES\";\n\n// Actions\nexport const addInstance = createAction(ADD_INSTANCE);\nexport const removeInstance = createAction(REMOVE_INSTANCE);\nexport const setInstances = createAction(SET_INSTANCES);\n\n// Reducer\nconst initialState = {};\nexport default handleActions({\n    [ADD_INSTANCE]: (state, action) => ({\n        ...state,\n        [action.payload._id]: action.payload\n    }),\n    [REMOVE_INSTANCE]: (state, action) => omit(state, action.payload._id),\n    [SET_INSTANCES]: (state, action) => indexBy(action.payload, \"_id\")\n}, initialState);\n"]}