{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/deployment/sites/ListSitesView.js"],"names":["define","$","_","AbstractView","showConfirmationBeforeAction","Messages","SitesService","TemplateBasedView","ToggleCardListView","default","ListSitesView","extend","template","events","partials","onDelete","event","preventDefault","id","currentTarget","data","deleteItem","message","t","type","sites","remove","then","render","response","addMessage","TYPE_DANGER","renderToggleView","tableData","toggleView","el","activeView","getActiveView","DEFAULT_VIEW","button","href","icon","title","btnClass","getElementA","callback","$el","find","popover","getElementB","showCallToAction","removeClass","args","getAll","parentRender","isEmpty"],"mappings":"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","file":"ListSitesView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/openam/ui/admin/utils/form/showConfirmationBeforeAction\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/openam/ui/admin/services/global/SitesService\",\n    \"org/forgerock/openam/ui/common/components/TemplateBasedView\",\n    \"org/forgerock/openam/ui/admin/views/common/ToggleCardListView\"\n], ($, _, AbstractView, showConfirmationBeforeAction, Messages, SitesService, TemplateBasedView,\n    ToggleCardListView) => { // eslint-disable-line padded-blocks\n\n    showConfirmationBeforeAction = showConfirmationBeforeAction.default;\n\n    const ListSitesView = AbstractView.extend({\n        template: \"templates/admin/views/deployment/sites/ListSitesTemplate.html\",\n        events: {\n            \"click [data-delete-item]\" : \"onDelete\"\n        },\n        partials: [\n            \"partials/util/_ButtonLink.html\",\n            \"templates/admin/views/deployment/sites/_SiteCard.html\"\n        ],\n\n        onDelete (event) {\n            event.preventDefault();\n            const id = $(event.currentTarget).data().deleteItem;\n\n            showConfirmationBeforeAction({\n                message: $.t(\"console.common.confirmDeleteText\", {\n                    type: $.t(\"console.sites.common.confirmType\")\n                })\n            },\n            () => {\n                SitesService.sites.remove(id).then(\n                    () => this.render(),\n                    (response) => Messages.addMessage({ response, type: Messages.TYPE_DANGER })\n                );\n            });\n        },\n\n        renderToggleView (data) {\n            const tableData = {\n                \"headers\": [\n                    $.t(\"console.sites.list.table.0\"), $.t(\"console.sites.list.table.1\"),\n                    $.t(\"console.sites.list.table.2\"), $.t(\"console.sites.list.table.3\")\n                ],\n                \"items\" : data\n            };\n\n            this.toggleView = new ToggleCardListView({\n                el: \"#toggleCardList\",\n                activeView: this.toggleView ? this.toggleView.getActiveView() : ToggleCardListView.DEFAULT_VIEW,\n                button: {\n                    href: \"#deployment/sites/new\",\n                    icon: \"fa-plus\",\n                    title: $.t(\"console.sites.list.new\"),\n                    btnClass: \"btn-primary\"\n                }\n            });\n\n            this.toggleView.render((toggleView) => {\n                new TemplateBasedView({\n                    data: tableData,\n                    el: toggleView.getElementA(),\n                    template: \"templates/admin/views/deployment/sites/SitesCardsTemplate.html\",\n                    callback: () => {\n                        this.$el.find('[data-toggle=\"popover\"]').popover();\n                    }\n                }).render();\n                new TemplateBasedView({\n                    data: tableData,\n                    el: toggleView.getElementB(),\n                    template: \"templates/admin/views/deployment/sites/SitesTableTemplate.html\"\n                }).render();\n            });\n        },\n\n        showCallToAction () {\n            this.$el.find(\".call-to-action-block\").removeClass(\"hidden\");\n        },\n\n        render (args, callback) {\n            SitesService.sites.getAll().then((data) => {\n                this.parentRender(() => {\n                    if (_.isEmpty(data)) {\n                        this.showCallToAction();\n                    } else {\n                        this.renderToggleView(data);\n                    }\n\n                    if (callback) {\n                        callback();\n                    }\n                });\n            }, (response) => {\n                Messages.addMessage({\n                    type: Messages.TYPE_DANGER,\n                    response\n                });\n            });\n        }\n    });\n\n    return new ListSitesView();\n});\n"]}