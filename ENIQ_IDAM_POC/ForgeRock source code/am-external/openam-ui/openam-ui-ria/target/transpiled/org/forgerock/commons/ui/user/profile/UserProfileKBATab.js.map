{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/user/profile/UserProfileKBATab.js"],"names":["define","$","_","form2js","js2form","Handlebars","AbstractUserProfileTab","Configuration","KBADelegate","UIUtils","ValidatorsManager","UserProfileKBATab","extend","template","events","prototype","partials","getTabDetail","t","addKBAQuestion","e","preventDefault","kbaItems","$el","find","newIndex","length","append","html","compile","questions","data","predefinedQuestions","index","isNew","trigger","deleteKBAQuestion","target","form","closest","kbaPair","changesPending","attr","parent","remove","hide","changesPendingWidget","makeChanges","subform","getFormContent","isChanged","prop","checkChanges","attributeName","currentKbaInfo","predefinedQuestion","customQuestionContainer","answer","answerRequired","isKbaQuestion","keys","watchedObj","hasClass","toggleClass","val","customQuestion","questionId","bindValidators","loggedUser","baseEntity","validateAllFields","submit","formData","saveInfo","then","bind","submitSuccess","formContent","map","value","key","isArray","newPair","is","undefined","user","isObject","compact","object","render","callback","getInfo","response","numberOfQuestions","minimumAnswersToDefine","parentRender","reloadFormData","omit","each","kbaSelect","customQuestionValue","initializeChangesPending"],"mappings":"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","file":"UserProfileKBATab.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2015-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"lodash\",\r\n    \"form2js\",\r\n    \"js2form\",\r\n    \"handlebars\",\r\n    \"org/forgerock/commons/ui/user/profile/AbstractUserProfileTab\",\r\n    \"org/forgerock/commons/ui/common/main/Configuration\",\r\n    \"KBADelegate\",\r\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\r\n    \"org/forgerock/commons/ui/common/main/ValidatorsManager\"\r\n], function($, _, form2js, js2form, Handlebars,\r\n    AbstractUserProfileTab,\r\n    Configuration,\r\n    KBADelegate,\r\n    UIUtils,\r\n    ValidatorsManager) {\r\n\r\n    /**\r\n     * An instance of AbstractUserProfileTab, to be used with the UserProfileView when\r\n     * KBA management is available for the end-user.\r\n     * @exports org/forgerock/commons/ui/user/profile/AbstractUserProfileTab\r\n     */\r\n    var UserProfileKBATab = AbstractUserProfileTab.extend({\r\n        template : \"templates/user/UserProfileKBATab.html\",\r\n        events: _.extend({\r\n            \"change .kba-pair :input\": \"checkChanges\",\r\n            \"click #provideAnother\": \"addKBAQuestion\",\r\n            \"click .delete-KBA-question\": \"deleteKBAQuestion\"\r\n        }, AbstractUserProfileTab.prototype.events),\r\n        partials: [\r\n            \"partials/profile/_kbaItem.html\"\r\n        ],\r\n\r\n        /**\r\n         Expected by all dynamic user profile tabs - returns a map of details necessary to render the nav tab\r\n         */\r\n        getTabDetail : function () {\r\n            return {\r\n                \"panelId\": \"userKBATab\",\r\n                \"label\": $.t(\"common.user.kba.securityQuestions\")\r\n            };\r\n        },\r\n\r\n        addKBAQuestion: function (e) {\r\n            e.preventDefault();\r\n            var kbaItems = this.$el.find(\"#kbaItems\"),\r\n                newIndex = kbaItems.find(\">li\").length;\r\n            kbaItems.append(\r\n                $(\"<li>\").html(Handlebars.compile(\"{{> profile/_kbaItem}}\")({\r\n                    questions: this.data.predefinedQuestions,\r\n                    index: newIndex,\r\n                    isNew: true\r\n                }))\r\n            );\r\n            // below event trigger will result in checkChanges to run for this new question\r\n            this.$el.find(\".kba-pair[index=\"+newIndex+\"] :input:first\").trigger(\"change\");\r\n        },\r\n\r\n        deleteKBAQuestion: function (e) {\r\n            var target = $(e.target),\r\n                form = target.closest(\"form\"),\r\n                kbaPair = target.closest(\".kba-pair\"),\r\n                changesPending;\r\n\r\n            e.preventDefault();\r\n            if (kbaPair.attr(\"isNew\") === \"true\") {\r\n                kbaPair.parent(\"li\").remove();\r\n            } else {\r\n                kbaPair.hide();\r\n            }\r\n            this.changesPendingWidget.makeChanges({ subform: this.getFormContent() });\r\n            changesPending = this.changesPendingWidget.isChanged();\r\n\r\n            $(form).find(\"input[type='reset']\").prop(\"disabled\", changesPending);\r\n            $(form).find(\"input[type='submit']\").prop(\"disabled\", changesPending);\r\n        },\r\n\r\n        checkChanges: function (e) {\r\n            var target = $(e.target),\r\n                form = target.closest(\"form\"),\r\n                attributeName, kbaPair, currentKbaInfo, predefinedQuestion, customQuestionContainer, answer,\r\n                answerRequired, isKbaQuestion;\r\n\r\n            attributeName = _.keys(form2js(e.target))[0];\r\n            kbaPair = target.closest(\".kba-pair\");\r\n            currentKbaInfo = this.changesPendingWidget.data.watchedObj.subform[attributeName];\r\n            predefinedQuestion = kbaPair.find(\".kba-questions\");\r\n            customQuestionContainer = kbaPair.find(\".custom-question\");\r\n            answer = kbaPair.find(\".answer :input\");\r\n            answerRequired = false;\r\n            isKbaQuestion = target.hasClass(\"kba-questions\");\r\n            customQuestionContainer.toggleClass(\"hidden\", predefinedQuestion.val() !== \"custom\");\r\n\r\n            // below conditions check to see if a new KBA answer needs to be provided, or whether\r\n            // it can stay unchanged\r\n            if (currentKbaInfo && currentKbaInfo[kbaPair.attr('index')]) {\r\n                if (predefinedQuestion.val() === \"custom\") {\r\n                    answerRequired = currentKbaInfo[kbaPair.attr('index')].customQuestion\r\n                        !== customQuestionContainer.find(\":input\").val();\r\n                } else {\r\n                    answerRequired = currentKbaInfo[kbaPair.attr('index')].questionId !== predefinedQuestion.val();\r\n                }\r\n            } else {\r\n                answerRequired = true;\r\n            }\r\n\r\n            if (answerRequired) {\r\n                answer.attr(\"data-validator\", \"required\");\r\n                answer.attr(\"placeholder\", \"\");\r\n            }\r\n\r\n            // validate form only in case security question was selected\r\n            if (!isKbaQuestion || (isKbaQuestion && (target.val() !== \"\"))) {\r\n                ValidatorsManager.bindValidators(form, Configuration.loggedUser.baseEntity, function () {\r\n                    ValidatorsManager.validateAllFields(form);\r\n                });\r\n            }\r\n\r\n            if (!isKbaQuestion) {\r\n                this.changesPendingWidget.makeChanges({subform: this.getFormContent()});\r\n            }\r\n\r\n            $(form).find(\"input[type='reset']\").prop(\"disabled\", false);\r\n\r\n        },\r\n        /**\r\n         * Overrides AbstractUserProfileTab implementation because saving KBA details\r\n         * for the user is tricky, owing to the fact that patching multi-valued properties\r\n         * is done differently in various contexts. The implementation in KBADelegate replaces\r\n         * the whole kba property rather than the inner parts which might have changed.\r\n         */\r\n        submit: function (formData) {\r\n            KBADelegate.saveInfo(formData).then(\r\n                _.bind(function () {\r\n                    this.submitSuccess();\r\n                }, this)\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Overrides AbstractUserProfileTab implementation. Needs more complex logic\r\n         * to handle the various conditions - particularly around the answers which may have\r\n         * been previously available as hashed values, and must remain as they were if a new\r\n         * answer was not provided.\r\n         */\r\n        getFormContent: function () {\r\n            var form = this.$el.find(\"form\")[0],\r\n                formContent = form2js(form, \".\", false);\r\n            // cannot rely upon a particular named field in the form content,\r\n            // so apply the logic to all fields found in the form\r\n            return _(formContent)\r\n                .map(function (value, key) {\r\n                    if (_.isArray(value)) {\r\n                        return [\r\n                            key,\r\n                            _(value)\r\n                                .map(function (kbaPair, index) {\r\n                                    var newPair = {};\r\n\r\n                                    // deleted pairs will be hidden\r\n                                    if ($(form).is(\":visible\")\r\n                                        && !$(form).find(\".kba-pair[index=\"+index+\"]:visible\").length) {\r\n                                        // express their removal via an explicit undefined value in that position\r\n                                        return undefined;\r\n                                    }\r\n\r\n                                    if (kbaPair.answer && kbaPair.answer.length) {\r\n                                        newPair.answer = kbaPair.answer;\r\n                                    } else if (this.data.user[key] && _.isObject(this.data.user[key][index])) {\r\n                                        newPair.answer = this.data.user[key][index].answer;\r\n                                    }\r\n\r\n                                    if (kbaPair.questionId === \"custom\") {\r\n                                        newPair.customQuestion = kbaPair.customQuestion;\r\n                                    } else {\r\n                                        newPair.questionId = kbaPair.questionId;\r\n                                    }\r\n                                    return newPair;\r\n                                }, this)\r\n                                .compact()\r\n                                .value()\r\n                        ];\r\n                    } else {\r\n                        return [key, value];\r\n                    }\r\n                }, this)\r\n                .object()\r\n                .value();\r\n        },\r\n\r\n        render: function (data, callback) {\r\n            this.data = data;\r\n            KBADelegate.getInfo().then(_.bind(function (response) {\r\n                this.data.predefinedQuestions = _.map(response.questions, function (value, key) {\r\n                    return { \"id\" : key, \"question\" : value };\r\n                });\r\n                this.data.numberOfQuestions = response.minimumAnswersToDefine;\r\n\r\n                this.parentRender(callback);\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Rerender the template and populate the form using the latest details from the user's\r\n         * kba property. Relies upon the DOM structure in the template to determine which field\r\n         * contains the kba list; by default, it's called \"kbaInfo\".\r\n         */\r\n        reloadFormData: function () {\r\n            var form;\r\n\r\n            this.parentRender();\r\n\r\n            form = this.$el.find(\"form\")[0];\r\n            js2form(form,\r\n                // use the form structure to find out which fields are defined for the kba form...\r\n                _(form2js(form, \".\", false))\r\n                 .map(function (value, key) {\r\n                     // omit the \"answer\" property from any array found there...\r\n                     if (_.isArray(this.data.user[key])) {\r\n                         return [\r\n                             key,\r\n                             _.map(this.data.user[key], function (kbaPair) {\r\n                                 return _.omit(kbaPair, \"answer\");\r\n                             })\r\n                         ];\r\n                     } else {\r\n                         return [key, this.data.user[key]];\r\n                     }\r\n                 }, this)\r\n                 .object()\r\n                 .value()\r\n            );\r\n\r\n            _.each($(\".kba-questions\", form), function (kbaSelect) {\r\n                var customQuestionContainer = $(kbaSelect).closest(\".kba-pair\").find(\".custom-question\"),\r\n                    customQuestionValue = customQuestionContainer.find(\":input\").val();\r\n                if (customQuestionValue !== \"\") {\r\n                    $(kbaSelect).val(\"custom\");\r\n                    customQuestionContainer.toggleClass(\"hidden\", false);\r\n                } else {\r\n                    customQuestionContainer.toggleClass(\"hidden\", true);\r\n                }\r\n            });\r\n\r\n            this.initializeChangesPending();\r\n            $(form).find(\"input[type='reset']\").prop(\"disabled\", true);\r\n            $(form).find(\"input[type='submit']\").prop(\"disabled\", true);\r\n\r\n        }\r\n    });\r\n\r\n    return new UserProfileKBATab();\r\n});"]}