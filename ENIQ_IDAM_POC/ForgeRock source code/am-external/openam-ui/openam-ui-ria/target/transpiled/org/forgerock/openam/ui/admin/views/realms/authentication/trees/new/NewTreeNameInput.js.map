{"version":3,"sources":["../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/trees/new/NewTreeNameInput.jsx"],"names":["NewTreeNameInput","treeName","onTreeNameChange","handleTreeNameChange","event","target","value","propTypes","func","isRequired","string"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAqBA,QAAMA,mBAAmB,SAAnBA,gBAAmB,OAAoC;AAAA,YAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,YAAvBC,gBAAuB,QAAvBA,gBAAuB;;AACzD,YAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,KAAD;AAAA,mBAAWF,iBAAiBE,MAAMC,MAAN,CAAaC,KAA9B,CAAX;AAAA,SAA7B;;AAEA,eACI;AAAA;AAAA,cAAM,gBAAN;AACI;AAAA;AAAA,kBAAW,WAAY,sBAAS,UAAT,CAAvB;AACI;AAAA;AAAA,sBAAc,WAAU,UAAxB;AACM,oCAAE,2CAAF;AADN,iBADJ;AAII;AAAA;AAAA,sBAAK,IAAK,CAAV;AACI,iFAAa,UAAWH,oBAAxB,EAA+C,MAAK,MAApD,EAA2D,OAAQF,QAAnE;AADJ;AAJJ;AADJ,SADJ;AAYH,KAfD;;AAiBAD,qBAAiBO,SAAjB,GAA6B;AACzBL,0BAAkB,iBAAUM,IAAV,CAAeC,UADR;AAEzBR,kBAAU,iBAAUS,MAAV,CAAiBD;AAFF,KAA7B;;sBAKeT,gB","file":"NewTreeNameInput.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { Col, ControlLabel, FormControl, Form, FormGroup } from \"react-bootstrap\";\nimport { t } from \"i18next\";\nimport { uniqueId } from \"lodash\";\nimport React, { PropTypes } from \"react\";\n\nconst NewTreeNameInput = ({ treeName, onTreeNameChange }) => {\n    const handleTreeNameChange = (event) => onTreeNameChange(event.target.value);\n\n    return (\n        <Form horizontal>\n            <FormGroup controlId={ uniqueId(\"treeName\") }>\n                <ControlLabel className=\"col-sm-4\">\n                    { t(\"console.authentication.trees.new.treeName\") }\n                </ControlLabel>\n                <Col sm={ 6 }>\n                    <FormControl onChange={ handleTreeNameChange } type=\"text\" value={ treeName } />\n                </Col>\n            </FormGroup>\n        </Form>\n    );\n};\n\nNewTreeNameInput.propTypes = {\n    onTreeNameChange: PropTypes.func.isRequired,\n    treeName: PropTypes.string.isRequired\n};\n\nexport default NewTreeNameInput;\n"]}