{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/user/services/TokenService.js"],"names":["define","Constants","AbstractDelegate","obj","host","context","getAllTokens","successCallback","errorCallback","serviceCall","url","success","data","result","error","deleteToken","id","type","getTokenByID"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,gDADG,EAEH,uDAFG,CAAP,EAGG,UAAUC,SAAV,EAAqBC,gBAArB,EAAuC;AACtC,QAAIC,MAAM,IAAID,gBAAJ,MAAwBD,UAAUG,IAAlC,GAAyCH,UAAUI,OAAnD,0BAAV;;AAEA;;;;;AAKAF,QAAIG,YAAJ,GAAmB,UAAUC,eAAV,EAA2BC,aAA3B,EAA0C;AACzDL,YAAIM,WAAJ,CAAgB,EAAEC,KAAK,cAAP,EAAuBC,OAAvB,mBAAgCC,IAAhC,EAAsC;AAClD,oBAAIL,eAAJ,EAAqB;AACjBA,oCAAgBK,KAAKC,MAArB;AACH;AACJ,aAJe;AAIbC,mBAAON,aAJM,EAAhB;AAKH,KAND;;AAQA;;;;;;AAMAL,QAAIY,WAAJ,GAAkB,UAAUR,eAAV,EAA2BC,aAA3B,EAA0CQ,EAA1C,EAA8C;AAC5Db,YAAIM,WAAJ,CAAgB,EAAEQ,MAAM,QAAR,EAAkBP,WAASM,EAA3B,EAAiCL,OAAjC,qBAA4C;AACxD,oBAAIJ,eAAJ,EAAqB;AACjBA,oCAAgBS,EAAhB;AACH;AACJ,aAJe;AAIbF,mBAAON,cAAcQ,EAAd,CAJM,EAAhB;AAKH,KAND;;AAQA;;;;;;AAMAb,QAAIe,YAAJ,GAAmB,UAAUX,eAAV,EAA2BC,aAA3B,EAA0CQ,EAA1C,EAA8C;AAC7Db,YAAIM,WAAJ,CAAgB,EAAEC,WAASM,EAAX,EAAiBL,OAAjB,mBAA0BC,IAA1B,EAAgC;AAC5C,oBAAIL,eAAJ,EAAqB;AACjBA,oCAAgBK,IAAhB;AACH;AACJ,aAJe;AAIbE,mBAAON,aAJM,EAAhB;AAKH,KAND;;AAQA,WAAOL,GAAP;AACH,CAhDD","file":"TokenService.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2011-2017 ForgeRock AS.\n */\n\ndefine([\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/main/AbstractDelegate\"\n], function (Constants, AbstractDelegate) {\n    var obj = new AbstractDelegate(`${Constants.host}${Constants.context}/frrest/oauth2/token`);\n\n    /**\n     * Gets all the OAuth 2 tokens for a user\n     * @param {Function} successCallback Success callback function\n     * @param {Function} errorCallback Error callback function\n     */\n    obj.getAllTokens = function (successCallback, errorCallback) {\n        obj.serviceCall({ url: \"/?_queryid=*\", success (data) {\n            if (successCallback) {\n                successCallback(data.result);\n            }\n        }, error: errorCallback });\n    };\n\n    /**\n     *  Deletes a token given a tokenID\n     * @param {Function} successCallback success handler\n     * @param {Function} errorCallback error handler\n     * @param {String} id TokenID\n     */\n    obj.deleteToken = function (successCallback, errorCallback, id) {\n        obj.serviceCall({ type: \"DELETE\", url: `/${id}`, success () {\n            if (successCallback) {\n                successCallback(id);\n            }\n        }, error: errorCallback(id) });\n    };\n\n    /**\n     * Gets a token given a token ID\n     * @param {Function} successCallback success handler\n     * @param {Function} errorCallback error handler\n     * @param {String} id TokenID\n     */\n    obj.getTokenByID = function (successCallback, errorCallback, id) {\n        obj.serviceCall({ url: `/${id}`, success (data) {\n            if (successCallback) {\n                successCallback(data);\n            }\n        }, error: errorCallback });\n    };\n\n    return obj;\n});\n"]}