{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/SettingsView.js"],"names":["define","$","_","AbstractView","Constants","EventManager","Form","Messages","SMSServiceUtils","AuthenticationService","SettingsView","extend","template","events","render","args","callback","self","data","realmLocation","authentication","get","then","formData","parentRender","$el","find","show","tab","tabdrop","response","addMessage","type","TYPE_DANGER","renderTab","event","empty","id","target","attr","slice","schema","sanitizeSchema","properties","element","form","values","parent","hide","revert","reset","save","update","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST"],"mappings":"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","file":"SettingsView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/openam/ui/admin/models/Form\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/openam/ui/admin/services/SMSServiceUtils\",\n    \"org/forgerock/openam/ui/admin/services/realm/AuthenticationService\",\n\n    // jquery dependencies\n    \"bootstrap-tabdrop\"\n], function ($, _, AbstractView, Constants, EventManager, Form, Messages, SMSServiceUtils, AuthenticationService) {\n    var SettingsView = AbstractView.extend({\n        template: \"templates/admin/views/realms/authentication/SettingsTemplate.html\",\n        events: {\n            \"click [data-revert]\"          : \"revert\",\n            \"click [data-save]\"            : \"save\",\n            \"show.bs.tab ul.nav.nav-tabs a\": \"renderTab\"\n        },\n\n        render (args, callback) {\n            var self = this;\n\n            this.data.realmLocation = args[0];\n\n            AuthenticationService.authentication.get(this.data.realmLocation).then((data) => {\n                self.data.formData = data;\n\n                self.parentRender(function () {\n                    self.$el.find(\"div.tab-pane\").show(); // FIXME: To remove\n                    self.$el.find(\"ul.nav a:first\").tab(\"show\");\n\n                    self.$el.find(\".tab-menu .nav-tabs\").tabdrop();\n\n                    if (callback) {\n                        callback();\n                    }\n                });\n            }, (response) => {\n                Messages.addMessage({\n                    type: Messages.TYPE_DANGER,\n                    response\n                });\n            });\n        },\n        renderTab (event) {\n            this.$el.find(\"#tabpanel\").empty();\n\n            var id = $(event.target).attr(\"href\").slice(1),\n                schema = SMSServiceUtils.sanitizeSchema(this.data.formData.schema.properties[id]),\n                element = this.$el.find(\"#tabpanel\").get(0);\n\n            this.data.form = new Form(element, schema, this.data.formData.values[id]);\n            this.$el.find(\"[data-header]\").parent().hide();\n        },\n        revert () {\n            this.data.form.reset();\n        },\n        save () {\n            var formData = this.data.form.data(),\n                self = this;\n\n            AuthenticationService.authentication.update(this.data.realmLocation, formData).then((data) => {\n                // update formData for correct re-render tab after saving\n                _.extend(self.data.formData.values, data);\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"changesSaved\");\n            }, (response) => {\n                Messages.addMessage({\n                    type: Messages.TYPE_DANGER,\n                    response\n                });\n            });\n        }\n    });\n\n    return SettingsView;\n});\n"]}