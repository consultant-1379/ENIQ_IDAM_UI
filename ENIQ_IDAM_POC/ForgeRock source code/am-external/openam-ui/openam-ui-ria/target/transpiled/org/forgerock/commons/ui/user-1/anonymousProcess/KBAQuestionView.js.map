{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/user-1/anonymousProcess/KBAQuestionView.js"],"names":["define","$","_","AbstractView","EventManager","ValidatorsManager","Constants","UIUtils","extend","template","noBaseTemplate","CUSTOM_QUESTION","events","render","data","parent","index","id","createAndSetEmptyDOMElement","parentRender","bindValidators","li","append","element","deleteQuestion","e","preventDefault","sendEvent","EVENT_DELETE_KBA_QUESTION","viewId","changeQuestion","newQuestionId","target","val","questionId","answer","customQuestion","EVENT_SELECT_KBA_QUESTION","setCustomQuestion","setAnswer","getSelectedQuestionId","getPair","pair","updateQuestionWithNewData","fillTemplateWithData","then","bind","$el","html","baseEntity","validateAllFields"],"mappings":"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","file":"KBAQuestionView.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"lodash\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\r\n    \"org/forgerock/commons/ui/common/main/EventManager\",\r\n    \"org/forgerock/commons/ui/common/main/ValidatorsManager\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\",\r\n    \"org/forgerock/commons/ui/common/util/UIUtils\"\r\n], function ($, _, AbstractView, EventManager, ValidatorsManager, Constants, UIUtils) {\r\n    return AbstractView.extend({\r\n        template: \"templates/user/process/KBAQuestionTemplate.html\",\r\n        noBaseTemplate: true,\r\n        CUSTOM_QUESTION: \"customQuestion\",\r\n        events: {\r\n            \"click  [data-delete-question]\": \"deleteQuestion\",\r\n            \"change [data-select-question]\": \"changeQuestion\",\r\n            \"blur   [data-custom-question]\": \"setCustomQuestion\",\r\n            \"blur   [data-answer]\"         : \"setAnswer\"\r\n        },\r\n\r\n        /**\r\n         * @param {Object}  data\r\n         * @param {array}   data.possibleQuestions           - all possible variants of questions\r\n         * @param {boolean} data.numberOfQuestionsSufficient - whether the selected number of questions is greater than\r\n         *                                                     the required minimum number of questions\r\n         * @param {Object}  parent                           - parent jQuery element\r\n         */\r\n        render: function (data, parent) {\r\n            _.extend(this.data, data);\r\n\r\n            this.data.index = this.id;\r\n\r\n            this.createAndSetEmptyDOMElement(parent);\r\n            this.parentRender(this.bindValidators);\r\n        },\r\n\r\n        createAndSetEmptyDOMElement: function (parent) {\r\n            var li = $(\"<li data-question-\" + this.id + \">\");\r\n            parent.append(li);\r\n\r\n            this.element = li;\r\n        },\r\n\r\n        deleteQuestion: function (e) {\r\n            e.preventDefault();\r\n            EventManager.sendEvent(Constants.EVENT_DELETE_KBA_QUESTION, { viewId: this.id });\r\n        },\r\n\r\n        changeQuestion: function (e) {\r\n            var newQuestionId = $(e.target).val();\r\n\r\n            if (newQuestionId !== this.data.questionId) {\r\n                this.data.questionId = newQuestionId;\r\n                delete this.data.answer;\r\n                delete this.data.customQuestion;\r\n\r\n                EventManager.sendEvent(Constants.EVENT_SELECT_KBA_QUESTION);\r\n            }\r\n        },\r\n\r\n        setCustomQuestion: function (e) {\r\n            this.data.customQuestion = $(e.target).val();\r\n        },\r\n\r\n        setAnswer: function (e) {\r\n            this.data.answer = $(e.target).val();\r\n        },\r\n\r\n        getSelectedQuestionId: function () {\r\n            return this.data.questionId;\r\n        },\r\n\r\n        getPair: function () {\r\n            var pair = { answer: this.data.answer };\r\n\r\n            if (this.data.questionId === this.CUSTOM_QUESTION) {\r\n                pair.customQuestion = this.data.customQuestion;\r\n            } else {\r\n                pair.questionId = this.data.questionId;\r\n            }\r\n\r\n            return pair;\r\n        },\r\n\r\n        /**\r\n         * @param {Object}  data\r\n         * @param {array}   data.possibleQuestions           - all possible variants of questions\r\n         * @param {boolean} data.numberOfQuestionsSufficient - whether the selected number of questions is greater than\r\n         *                                                     the required minimum number of questions\r\n         */\r\n        updateQuestionWithNewData: function (data) {\r\n            _.extend(this.data, data);\r\n\r\n            UIUtils.fillTemplateWithData(this.template, this.data).then(_.bind(function (template) {\r\n                this.$el.html(template);\r\n                this.bindValidators();\r\n            }, this));\r\n        },\r\n\r\n        bindValidators: function () {\r\n            ValidatorsManager.bindValidators(this.$el, this.baseEntity, _.bind(function () {\r\n                ValidatorsManager.validateAllFields(this.$el);\r\n            }, this));\r\n        }\r\n    });\r\n});"]}