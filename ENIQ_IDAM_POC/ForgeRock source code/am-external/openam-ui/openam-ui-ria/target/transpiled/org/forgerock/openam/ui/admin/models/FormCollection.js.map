{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/admin/models/FormCollection.js"],"names":["define","_","obj","FormCollection","forms","prototype","add","form","push","data","reduce","merged","merge","reset","each"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,CAAP,EAEG,UAAUC,CAAV,EAAa;AACZ,QAAIC,MAAM,SAASC,cAAT,GAA2B;AACjC,aAAKC,KAAL,GAAa,EAAb;AACH,KAFD;;AAIAF,QAAIG,SAAJ,CAAcC,GAAd,GAAoB,UAAUC,IAAV,EAAgB;AAChC,aAAKH,KAAL,CAAWI,IAAX,CAAgBD,IAAhB;AACH,KAFD;;AAIAL,QAAIG,SAAJ,CAAcI,IAAd,GAAqB,YAAY;AAC7B,eAAOR,EAAES,MAAF,CAAS,KAAKN,KAAd,EAAqB,UAAUO,MAAV,EAAkBJ,IAAlB,EAAwB;AAChD,mBAAON,EAAEW,KAAF,CAAQD,MAAR,EAAgBJ,KAAKE,IAAL,EAAhB,CAAP;AACH,SAFM,EAEJ,KAAKL,KAAL,CAAW,CAAX,EAAcK,IAAd,EAFI,CAAP;AAGH,KAJD;;AAMAP,QAAIG,SAAJ,CAAcQ,KAAd,GAAsB,YAAY;AAC9BZ,UAAEa,IAAF,CAAO,KAAKV,KAAZ,EAAmB,UAAUG,IAAV,EAAgB;AAC/BA,iBAAKM,KAAL;AACH,SAFD;AAGH,KAJD;;AAMA,WAAOX,GAAP;AACH,CAxBD","file":"FormCollection.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"lodash\"\n], function (_) {\n    var obj = function FormCollection () {\n        this.forms = [];\n    };\n\n    obj.prototype.add = function (form) {\n        this.forms.push(form);\n    };\n\n    obj.prototype.data = function () {\n        return _.reduce(this.forms, function (merged, form) {\n            return _.merge(merged, form.data());\n        }, this.forms[0].data());\n    };\n\n    obj.prototype.reset = function () {\n        _.each(this.forms, function (form) {\n            form.reset();\n        });\n    };\n\n    return obj;\n});\n"]}