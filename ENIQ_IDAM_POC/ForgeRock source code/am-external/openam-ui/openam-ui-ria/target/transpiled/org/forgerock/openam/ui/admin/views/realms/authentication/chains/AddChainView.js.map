{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/chains/AddChainView.js"],"names":["define","$","_","AbstractView","Router","Messages","AuthenticationService","validateChainProps","name","$el","find","val","trim","nameExists","isValid","findWhere","data","chainsData","_id","addMessage","type","TYPE_DANGER","message","t","attr","extend","template","events","render","args","callback","self","realmPath","authentication","chains","all","then","each","values","result","obj","push","parentRender","save","create","routeTo","configuration","routes","realmsAuthenticationChainEdit","map","encodeURIComponent","trigger","response","onValidateChainProps","call"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,mDAHG,EAIH,6CAJG,EAKH,qDALG,EAMH,oEANG,CAAP,EAOG,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,YAAhB,EAA8BC,MAA9B,EAAsCC,QAAtC,EAAgDC,qBAAhD,EAAuE;AACtE,aAASC,kBAAT,GAA+B;AAC3B,YAAIC,OAAO,KAAKC,GAAL,CAASC,IAAT,CAAc,mBAAd,EAAmCC,GAAnC,GAAyCC,IAAzC,EAAX;AAAA,YACIC,UADJ;AAAA,YAEIC,OAFJ;;AAIAD,qBAAaX,EAAEa,SAAF,CAAY,KAAKC,IAAL,CAAUC,UAAtB,EAAkC,EAAEC,KAAIV,IAAN,EAAlC,CAAb;AACA,YAAIK,UAAJ,EAAgB;AACZR,qBAASc,UAAT,CAAoB;AAChBC,sBAAMf,SAASgB,WADC;AAEhBC,yBAASrB,EAAEsB,CAAF,CAAI,8CAAJ;AAFO,aAApB;AAIH;AACDT,kBAAUN,QAAQ,CAACK,UAAnB;AACA,aAAKJ,GAAL,CAASC,IAAT,CAAc,aAAd,EAA6Bc,IAA7B,CAAkC,UAAlC,EAA8C,CAACV,OAA/C;AACH;;AAED,WAAOX,aAAasB,MAAb,CAAoB;AACvBC,kBAAU,0EADa;AAEvBC,gBAAQ;AACJ,uCAA4B,sBADxB;AAEJ,wCAA4B,sBAFxB;AAGJ,iCAA4B;AAHxB,SAFe;AAOvBC,cAPuB,kBAOfC,IAPe,EAOTC,QAPS,EAOC;AACpB,gBAAIC,OAAO,IAAX;AAAA,gBACId,aAAa,EADjB;AAEA,iBAAKD,IAAL,CAAUgB,SAAV,GAAsBH,KAAK,CAAL,CAAtB;;AAEAvB,kCAAsB2B,cAAtB,CAAqCC,MAArC,CAA4CC,GAA5C,CAAgD,KAAKnB,IAAL,CAAUgB,SAA1D,EAAqEI,IAArE,CAA0E,UAAUpB,IAAV,EAAgB;AACtFd,kBAAEmC,IAAF,CAAOrB,KAAKsB,MAAL,CAAYC,MAAnB,EAA2B,UAAUC,GAAV,EAAe;AACtCvB,+BAAWwB,IAAX,CAAgBD,GAAhB;AACH,iBAFD;AAGAT,qBAAKf,IAAL,CAAUC,UAAV,GAAuBA,UAAvB;;AAEAc,qBAAKW,YAAL,CAAkB,YAAY;AAC1B,wBAAIZ,QAAJ,EAAc;AACVA;AACH;AACJ,iBAJD;AAKH,aAXD;AAYH,SAxBsB;AAyBvBa,YAzBuB,kBAyBf;AACJ,gBAAIZ,OAAO,IAAX;AAAA,gBACIvB,OAAO,KAAKC,GAAL,CAASC,IAAT,CAAc,mBAAd,EAAmCC,GAAnC,GAAyCC,IAAzC,EADX;;AAGAN,kCAAsB2B,cAAtB,CAAqCC,MAArC,CAA4CU,MAA5C,CACIb,KAAKf,IAAL,CAAUgB,SADd,EAEI,EAAEd,KAAKV,IAAP,EAFJ,EAGE4B,IAHF,CAGO,YAAY;AACfhC,uBAAOyC,OAAP,CAAezC,OAAO0C,aAAP,CAAqBC,MAArB,CAA4BC,6BAA3C,EAA0E;AACtEnB,0BAAM3B,EAAE+C,GAAF,CAAM,CAAClB,KAAKf,IAAL,CAAUgB,SAAX,EAAsBxB,IAAtB,CAAN,EAAmC0C,kBAAnC,CADgE;AAEtEC,6BAAS;AAF6D,iBAA1E;AAIH,aARD,EAQG,UAAUC,QAAV,EAAoB;AACnB/C,yBAASc,UAAT,CAAoB;AAChBC,0BAAMf,SAASgB,WADC;AAEhB+B;AAFgB,iBAApB;AAIH,aAbD;AAcH,SA3CsB;AA4CvBC,4BA5CuB,kCA4CC;AACpB9C,+BAAmB+C,IAAnB,CAAwB,IAAxB;AACH;AA9CsB,KAApB,CAAP;AAgDH,CAxED","file":"AddChainView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/openam/ui/admin/services/realm/AuthenticationService\"\n], function ($, _, AbstractView, Router, Messages, AuthenticationService) {\n    function validateChainProps () {\n        var name = this.$el.find(\"[data-chain-name]\").val().trim(),\n            nameExists,\n            isValid;\n\n        nameExists = _.findWhere(this.data.chainsData, { _id:name });\n        if (nameExists) {\n            Messages.addMessage({\n                type: Messages.TYPE_DANGER,\n                message: $.t(\"console.authentication.chains.duplicateChain\")\n            });\n        }\n        isValid = name && !nameExists;\n        this.$el.find(\"[data-save]\").attr(\"disabled\", !isValid);\n    }\n\n    return AbstractView.extend({\n        template: \"templates/admin/views/realms/authentication/chains/AddChainTemplate.html\",\n        events: {\n            \"keyup [data-chain-name]\" : \"onValidateChainProps\",\n            \"change [data-chain-name]\": \"onValidateChainProps\",\n            \"click [data-save]\"       : \"save\"\n        },\n        render (args, callback) {\n            var self = this,\n                chainsData = [];\n            this.data.realmPath = args[0];\n\n            AuthenticationService.authentication.chains.all(this.data.realmPath).then(function (data) {\n                _.each(data.values.result, function (obj) {\n                    chainsData.push(obj);\n                });\n                self.data.chainsData = chainsData;\n\n                self.parentRender(function () {\n                    if (callback) {\n                        callback();\n                    }\n                });\n            });\n        },\n        save () {\n            var self = this,\n                name = this.$el.find(\"[data-chain-name]\").val().trim();\n\n            AuthenticationService.authentication.chains.create(\n                self.data.realmPath,\n                { _id: name }\n            ).then(function () {\n                Router.routeTo(Router.configuration.routes.realmsAuthenticationChainEdit, {\n                    args: _.map([self.data.realmPath, name], encodeURIComponent),\n                    trigger: true\n                });\n            }, function (response) {\n                Messages.addMessage({\n                    type: Messages.TYPE_DANGER,\n                    response\n                });\n            });\n        },\n        onValidateChainProps () {\n            validateChainProps.call(this);\n        }\n    });\n});\n"]}