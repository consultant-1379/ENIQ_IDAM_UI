{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authorization/policies/PolicySettingsModal.jsx"],"names":["PolicySettingsModal","props","handleCheckBoxChange","bind","handleClose","handleSubmit","handleTextFieldChange","state","showModal","data","nextProps","setState","e","active","target","checked","pick","getAttribute","value","handleOnExit","name","description","propTypes","PropTypes","objectOf","bool","isRequired","string","func"],"mappings":"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","file":"PolicySettingsModal.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\nimport _ from \"lodash\";\nimport { Button, Col, ControlLabel, Grid, FormControl, FormGroup, Modal } from \"react-bootstrap\";\nimport { t } from \"i18next\";\nimport Checkbox from \"components/Checkbox\";\nimport React, { Component, PropTypes } from \"react\";\n\nclass PolicySettingsModal extends Component {\n    constructor (props) {\n        super(props);\n\n        this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\n\n        this.state = {\n            showModal: true,\n            ...props.data\n        };\n    }\n\n    componentWillReceiveProps (nextProps) {\n        this.setState({\n            showModal: true,\n            ...nextProps.data\n        });\n    }\n\n    handleCheckBoxChange (e) {\n        this.setState({ active: e.target.checked });\n    }\n\n    handleClose () {\n        this.setState({ showModal: false });\n    }\n\n    handleSubmit () {\n        this.setState({ showModal: false });\n        this.props.handleSubmit(_.pick(this.state, [\"active\", \"name\", \"description\"]));\n    }\n\n    handleTextFieldChange (e) {\n        this.setState({ [e.target.getAttribute(\"data-entity-prop\")]: e.target.value });\n    }\n\n    render () {\n        return (\n            <Modal onExit={ this.handleOnExit } onHide={ this.handleClose } show={ this.state.showModal }>\n                <Modal.Header closeButton>\n                    <Modal.Title>{ t(\"common.form.editDetails\") }</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <Grid bsClass=\"\">\n                            <FormGroup className=\"clearfix\" controlId=\"policyName\">\n                                <Col sm={ 2 }>\n                                    <ControlLabel>\n                                        { t(\"console.common.name\") }\n                                    </ControlLabel>\n                                </Col>\n                                <Col sm={ 9 }>\n                                    <FormControl\n                                        data-entity-prop=\"name\"\n                                        onChange={ this.handleTextFieldChange }\n                                        placeholder={ t(\"common.form.validation.required\") }\n                                        type=\"text\"\n                                        value={ this.state.name }\n                                    />\n                                </Col>\n                            </FormGroup>\n\n                            <FormGroup className=\"clearfix\" controlId=\"policyDescription\">\n                                <Col sm={ 2 }>\n                                    <ControlLabel>\n                                        { t(\"console.common.description\") }\n                                    </ControlLabel>\n                                </Col>\n                                <Col sm={ 9 }>\n                                    <FormControl\n                                        componentClass=\"textarea\"\n                                        data-entity-prop=\"description\"\n                                        onChange={ this.handleTextFieldChange }\n                                        value={ this.state.description }\n                                    />\n                                </Col>\n                            </FormGroup>\n\n                            <FormGroup className=\"clearfix\">\n                                <Col sm={ 2 }>\n                                    <ControlLabel htmlFor=\"policyActive\">\n                                        { t(\"common.user.active\") }\n                                    </ControlLabel>\n                                </Col>\n                                <Col sm={ 9 }>\n                                    <Checkbox\n                                        checked={ this.state.active }\n                                        id=\"policyActive\"\n                                        onChange={ this.handleCheckBoxChange }\n                                    />\n                                </Col>\n                            </FormGroup>\n                        </Grid>\n                    </form>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button onClick={ this.handleClose }>{ t(\"common.form.close\") }</Button>\n                    <Button bsStyle=\"primary\" onClick={ this.handleSubmit }>{ t(\"common.form.saveChanges\") }</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nPolicySettingsModal.propTypes = {\n    data: React.PropTypes.objectOf({\n        active: PropTypes.bool.isRequired,\n        description: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n    }),\n    handleSubmit: PropTypes.func.isRequired\n};\n\nexport default PolicySettingsModal;\n"]}