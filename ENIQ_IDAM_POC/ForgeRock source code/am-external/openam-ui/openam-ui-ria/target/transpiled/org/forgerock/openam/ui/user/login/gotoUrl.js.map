{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/user/login/gotoUrl.jsm"],"names":["ifRelativePathInsertContext","exists","get","isNotDefaultPath","remove","setValidated","toHref","validateParam","path","context","indexOf","has","url","CONSOLE_PATH","globalData","auth","validatedGoto","value","set","encodeURIComponent","decodeURIComponent","unvalidated","deferred","Deferred","then","responce","successURL","resolve","reject"],"mappings":";;;;;;YA0BgBA,2B,GAAAA,2B;YAQAC,M,GAAAA,M;YAIAC,G,GAAAA,G;YAIAC,gB,GAAAA,gB;YAKAC,M,GAAAA,M;YAMAC,Y,GAAAA,Y;YAMAC,M,GAAAA,M;YAWAC,a,GAAAA,a;;;;;;;;;;;;;;;;;;AA5CT,aAASP,2BAAT,CAAsCQ,IAAtC,EAA4C;AAC/C,YAAIC,UAAU,EAAd;AACA,YAAID,KAAKE,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BF,KAAKE,OAAL,MAAgB,oBAAUD,OAA1B,MAAyC,CAAxE,EAA2E;AACvEA,2BAAa,oBAAUA,OAAvB;AACH;AACD,eAAOA,UAAUD,IAAjB;AACH,K,CAhCD;;;;;;;;;;;;;;;;AAgBA;;;;AAkBO,aAASP,MAAT,GAAmB;AACtB,eAAO,iBAAEU,GAAF,0BAAqB,+BAArB,CAAP;AACH;;AAEM,aAAST,GAAT,GAAgB;AACnB,eAAO,iBAAEA,GAAF,0BAAqB,+BAArB,CAAP;AACH;;AAEM,aAASC,gBAAT,CAA2BS,GAA3B,EAAgC;AACnC;AACA,eAAOA,QAAQ,oBAAUC,YAAzB;AACH;;AAEM,aAAST,MAAT,GAAmB;AACtB,YAAI,KAAKH,MAAL,EAAJ,EAAmB;AACf,mBAAO,wBAAca,UAAd,CAAyBC,IAAzB,CAA8BC,aAArC;AACH;AACJ;;AAEM,aAASX,YAAT,CAAuBY,KAAvB,EAA8B;AACjC;AACA;AACA,yBAAEC,GAAF,0BAAqB,+BAArB,EAAsDC,mBAAmB,KAAKnB,2BAAL,CAAiCiB,KAAjC,CAAnB,CAAtD;AACH;;AAEM,aAASX,MAAT,GAAmB;AACtB,eAAOc,mBAAmB,wBAAcN,UAAd,CAAyBC,IAAzB,CAA8BC,aAAjD,CAAP;AACH;;AAED;;;;;;;AAOO,aAAST,aAAT,CAAwBc,WAAxB,EAAqC;AAAA;;AACxC,YAAMC,WAAW,iBAAEC,QAAF,EAAjB;AACA,2CAAoBF,WAApB,EAAiCG,IAAjC,CAAsC,UAACC,QAAD,EAAc;AAChD,gBAAI,MAAKtB,gBAAL,CAAsBsB,SAASC,UAA/B,CAAJ,EAAgD;AAC5CJ,yBAASK,OAAT,CAAiBF,SAASC,UAA1B;AACH,aAFD,MAEO,IAAI,MAAKvB,gBAAL,CAAsBkB,WAAtB,CAAJ,EAAwC;AAC3CC,yBAASM,MAAT;AACH,aAFM,MAEA;AACHN,yBAASK,OAAT,CAAiBF,SAASC,UAA1B;AACH;AACJ,SARD,EAQG,YAAM;AACLJ,qBAASM,MAAT;AACH,SAVD;AAWA,eAAON,QAAP;AACH","file":"gotoUrl.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\n/**\n * @module org/forgerock/openam/ui/user/login/gotoUrl\n */\n\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport Configuration from \"org/forgerock/commons/ui/common/main/Configuration\";\nimport Constants from \"org/forgerock/commons/ui/common/util/Constants\";\nimport validateGotoService from \"org/forgerock/openam/ui/user/services/validateGotoService\";\n\nexport function ifRelativePathInsertContext (path) {\n    let context = \"\";\n    if (path.indexOf(\"/\") === 0 && path.indexOf(`${Constants.context}`) !== 0) {\n        context = `${Constants.context}`;\n    }\n    return context + path;\n}\n\nexport function exists () {\n    return _.has(Configuration, \"globalData.auth.validatedGoto\");\n}\n\nexport function get () {\n    return _.get(Configuration, \"globalData.auth.validatedGoto\");\n}\n\nexport function isNotDefaultPath (url) {\n    // The server will return the CONSOLE_PATH if the there is no (valid) goto to return.\n    return url !== Constants.CONSOLE_PATH;\n}\n\nexport function remove () {\n    if (this.exists()) {\n        delete Configuration.globalData.auth.validatedGoto;\n    }\n}\n\nexport function setValidated (value) {\n    // Any goto url coming from the url params needs to be validated. And success or goto url coming from the server\n    // will have already been validated and will be returned unencoded\n    _.set(Configuration, \"globalData.auth.validatedGoto\", encodeURIComponent(this.ifRelativePathInsertContext(value)));\n}\n\nexport function toHref () {\n    return decodeURIComponent(Configuration.globalData.auth.validatedGoto);\n}\n\n/**\n * Returns a promise that containes the successURL or undefined.\n * Instead of returning the CONSOLE_PATH which the server returns if the supplied url was invalid,\n * it returns an empty promise.\n * @param {String} unvalidated The url or path to validate.\n * @returns {Promise} A promise containing the successURL or undefined.\n */\nexport function validateParam (unvalidated) {\n    const deferred = $.Deferred();\n    validateGotoService(unvalidated).then((responce) => {\n        if (this.isNotDefaultPath(responce.successURL)) {\n            deferred.resolve(responce.successURL);\n        } else if (this.isNotDefaultPath(unvalidated)) {\n            deferred.reject();\n        } else {\n            deferred.resolve(responce.successURL);\n        }\n    }, () => {\n        deferred.reject();\n    });\n    return deferred;\n}\n"]}