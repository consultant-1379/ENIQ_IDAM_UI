{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/user-1/delegates/AnonymousProcessDelegate.js"],"names":["define","$","_","AbstractDelegate","Constants","AnonymousProcessDelegate","path","token","additional","call","context","prototype","Object","create","constructor","start","lastResponse","serviceCall","done","response","Deferred","resolve","submit","input","JSON","stringify","status","then","bind","has","xhr","responseJSON","message"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,QADI,EAEJ,YAFI,EAGJ,uDAHI,EAIJ,gDAJI,CAAP,EAKE,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,gBAAhB,EAAkCC,SAAlC,EAA6C;;AAE5C,QAAIC,2BAA2B,SAA3BA,wBAA2B,CAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,UAAvB,EAAmC;AAC9D,aAAKD,KAAL,GAAaA,KAAb;AACA,aAAKC,UAAL,GAAkBA,cAAc,EAAhC;AACA,eAAOL,iBAAiBM,IAAjB,CAAsB,IAAtB,EAA4B,MAAML,UAAUM,OAAhB,GAA0B,GAA1B,GAAgCJ,IAA5D,CAAP;AACH,KAJD;;AAMAD,6BAAyBM,SAAzB,GAAqCC,OAAOC,MAAP,CAAcV,iBAAiBQ,SAA/B,CAArC;AACAN,6BAAyBM,SAAzB,CAAmCG,WAAnC,GAAiDT,wBAAjD;;AAEAA,6BAAyBM,SAAzB,CAAmCI,KAAnC,GAA2C,YAAY;AACnD,YAAI,CAAC,KAAKR,KAAN,IAAe,CAAC,KAAKS,YAAzB,EAAuC;AACnC,mBAAO,KAAKC,WAAL,CAAiB;AACpB,wBAAQ,KADY;AAEpB,uBAAQ;AAFY,aAAjB,EAGJC,IAHI,CAGC,UAAUC,QAAV,EAAoB;AACxB,qBAAKH,YAAL,GAAoBG,QAApB;AACH,aALM,CAAP;AAMH,SAPD,MAOO;AAAE;AACL,mBAAOlB,EAAEmB,QAAF,GAAaC,OAAb,CAAqB,KAAKL,YAA1B,CAAP;AACH;AACJ,KAXD;;AAaA;;;;;AAKAX,6BAAyBM,SAAzB,CAAmCW,MAAnC,GAA4C,UAAUC,KAAV,EAAiB;AACzD,eAAO,KAAKN,WAAL,CAAiB;AACpB,oBAAQ,MADY;AAEpB,mBAAO,gCAAgC,KAAKT,UAFxB;AAGpB,oBAAQgB,KAAKC,SAAL,CAAe;AACnB,yBAAU,KAAKlB,KADI;AAEnB,yBAAUgB;AAFS,aAAf,CAHY;AAOpB,8BAAkB;AACd,0BAAW;AACPG,4BAAQ;AADD;AADG;AAPE,SAAjB,EAYJC,IAZI,CAaHzB,EAAE0B,IAAF,CAAO,UAAUT,QAAV,EAAoB;AACvB,gBAAIjB,EAAE2B,GAAF,CAAMV,QAAN,EAAgB,OAAhB,CAAJ,EAA8B;AAC1B,qBAAKZ,KAAL,GAAaY,SAASZ,KAAtB;AACH;AACD,iBAAKS,YAAL,GAAoBG,QAApB;AACA,mBAAOA,QAAP;AACH,SAND,EAMG,IANH,CAbG,EAoBHjB,EAAE0B,IAAF,CAAO,UAAUE,GAAV,EAAe;AAClB,mBAAO,KAAKvB,KAAZ;AACA,mBAAO,KAAKS,YAAZ;AACA,mBAAO;AACH,0BAAU;AACN,+BAAW,KADL;AAEN,8BAAUc,IAAIC,YAAJ,CAAiBC;AAFrB;AADP,aAAP;AAMH,SATD,EASG,IATH,CApBG,CAAP;AA+BH,KAhCD;;AAkCA,WAAO3B,wBAAP;AACH,CArEA","file":"AnonymousProcessDelegate.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2015-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"underscore\",\r\n    \"org/forgerock/commons/ui/common/main/AbstractDelegate\",\r\n    \"org/forgerock/commons/ui/common/util/Constants\"\r\n], function ($, _, AbstractDelegate, Constants) {\r\n\r\n    var AnonymousProcessDelegate = function (path, token, additional) {\r\n        this.token = token;\r\n        this.additional = additional || \"\";\r\n        return AbstractDelegate.call(this, \"/\" + Constants.context + \"/\" + path);\r\n    };\r\n\r\n    AnonymousProcessDelegate.prototype = Object.create(AbstractDelegate.prototype);\r\n    AnonymousProcessDelegate.prototype.constructor = AnonymousProcessDelegate;\r\n\r\n    AnonymousProcessDelegate.prototype.start = function () {\r\n        if (!this.token || !this.lastResponse) {\r\n            return this.serviceCall({\r\n                \"type\": \"GET\",\r\n                \"url\" : \"\"\r\n            }).done(function (response) {\r\n                this.lastResponse = response;\r\n            });\r\n        } else { // the presence of a token means this can be treated as more of a \"resume\" than a start\r\n            return $.Deferred().resolve(this.lastResponse);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Takes a generic object as input to submit to the process, intended to fulfill the requirements\r\n     * outlined by the previous request.\r\n     * @returns {Object} A promise that is resolved when the backend responses to the provided input\r\n     */\r\n    AnonymousProcessDelegate.prototype.submit = function (input) {\r\n        return this.serviceCall({\r\n            \"type\": \"POST\",\r\n            \"url\": \"?_action=submitRequirements\" + this.additional,\r\n            \"data\": JSON.stringify({\r\n                \"token\" : this.token,\r\n                \"input\" : input\r\n            }),\r\n            \"errorsHandlers\": {\r\n                \"failed\" : {\r\n                    status: \"400\"\r\n                }\r\n            }\r\n        }).then(\r\n            _.bind(function (response) {\r\n                if (_.has(response, \"token\")) {\r\n                    this.token = response.token;\r\n                }\r\n                this.lastResponse = response;\r\n                return response;\r\n            }, this),\r\n            _.bind(function (xhr) {\r\n                delete this.token;\r\n                delete this.lastResponse;\r\n                return {\r\n                    \"status\": {\r\n                        \"success\": false,\r\n                        \"reason\": xhr.responseJSON.message\r\n                    }\r\n                };\r\n            }, this)\r\n        );\r\n    };\r\n\r\n    return AnonymousProcessDelegate;\r\n});"]}