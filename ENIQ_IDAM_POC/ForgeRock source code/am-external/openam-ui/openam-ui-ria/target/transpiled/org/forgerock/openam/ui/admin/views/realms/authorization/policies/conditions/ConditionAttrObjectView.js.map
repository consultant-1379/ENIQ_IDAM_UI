{"version":3,"sources":["../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authorization/policies/conditions/ConditionAttrObjectView.js"],"names":["define","$","_","ConditionAttrBaseView","extend","template","render","data","element","callback","initBasic","parentRender","initSelectize","view","title","itemData","options","keyValPair","propName","propVal","$item","$el","find","each","persist","delimiter","onItemRemove","value","$input","parent","split","onItemAdd","union","compact","create","input","text","onChange","createFilter","test","plugins","selectize"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,oGAHG;;AAKH;AACA,WANG,CAAP,EAOG,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,qBAAhB,EAAuC;AACtC,WAAOA,sBAAsBC,MAAtB,CAA6B;AAChCC,kBAAU,yFADsB;;AAGhCC,cAHgC,kBAGxBC,IAHwB,EAGlBC,OAHkB,EAGTC,QAHS,EAGC;AAC7B,iBAAKC,SAAL,CAAeH,IAAf,EAAqBC,OAArB,EAA8B,gCAA9B;;AAEA,iBAAKG,YAAL,CAAkB,YAAY;AAC1B,qBAAKC,aAAL;;AAEA,oBAAIH,QAAJ,EAAc;AACVA;AACH;AACJ,aAND;AAOH,SAb+B;AAehCG,qBAfgC,2BAef;AACb,gBAAIC,OAAO,IAAX;AAAA,gBACIC,QAAQ,EADZ;AAAA,gBAEIC,QAFJ;AAAA,gBAGIC,OAHJ;AAAA,gBAIIC,UAJJ;AAAA,gBAKIC,QALJ;AAAA,gBAMIC,OANJ;AAAA,gBAOIC,KAPJ;;AASA,iBAAKC,GAAL,CAASC,IAAT,CAAc,kBAAd,EAAkCC,IAAlC,CAAuC,YAAY;AAC/CH,wBAAQnB,EAAE,IAAF,CAAR;AACAe,0BAAU;AACNQ,6BAAS,KADH;AAENC,+BAAW,GAFL;AAGNC,gCAHM,wBAGQC,KAHR,EAGe;AACjBb,gCAAQ,KAAKc,MAAL,CAAYC,MAAZ,GAAqBP,IAArB,CAA0B,OAA1B,EAAmCf,IAAnC,GAA0CO,KAAlD;AACAC,mCAAWF,KAAKN,IAAL,CAAUQ,QAArB;AACAE,qCAAaU,MAAMG,KAAN,CAAY,GAAZ,CAAb;AACA,+BAAOf,SAASD,KAAT,EAAgBG,WAAW,CAAX,CAAhB,CAAP;AACH,qBARK;AASNc,6BATM,qBASKJ,KATL,EASY;AACdb,gCAAQ,KAAKc,MAAL,CAAYC,MAAZ,GAAqBP,IAArB,CAA0B,OAA1B,EAAmCf,IAAnC,GAA0CO,KAAlD;AACAC,mCAAWF,KAAKN,IAAL,CAAUQ,QAArB;AACAE,qCAAaU,MAAMG,KAAN,CAAY,GAAZ,CAAb;AACAZ,mCAAWD,WAAW,CAAX,CAAX;AACAE,kCAAUF,WAAW,CAAX,CAAV;;AAEA,4BAAI,CAACF,SAASD,KAAT,EAAgBI,QAAhB,CAAL,EAAgC;AAC5BH,qCAASD,KAAT,EAAgBI,QAAhB,IAA4B,EAA5B;AACH;;AAEDH,iCAASD,KAAT,EAAgBI,QAAhB,IAA4BhB,EAAE8B,KAAF,CAAQ9B,EAAE+B,OAAF,CAAUd,QAAQW,KAAR,CAAc,GAAd,CAAV,CAAR,EAAuCf,SAASD,KAAT,EAAgBI,QAAhB,CAAvC,CAA5B;AACH,qBArBK;AAsBNgB,0BAtBM,kBAsBEC,KAtBF,EAsBS;AACX,+BAAO;AACHR,mCAAOQ,KADJ;AAEHC,kCAAMD;AAFH,yBAAP;AAIH,qBA3BK;AA4BNE,4BA5BM,sBA4BM;AACRvB,gCAAQ,KAAKc,MAAL,CAAYC,MAAZ,GAAqBP,IAArB,CAA0B,OAA1B,EAAmCf,IAAnC,GAA0CO,KAAlD;AACAC,mCAAWF,KAAKN,IAAL,CAAUQ,QAArB;AACH,qBA/BK;AAgCNuB,gCAhCM,wBAgCQF,IAhCR,EAgCc;AAChB,+BAAQ,mBAAD,CAAqBG,IAArB,CAA0BH,IAA1B;AAAP;AACH;AAlCK,iBAAV;;AAqCAlC,kBAAEE,MAAF,CAASY,OAAT,EAAkB,EAAEwB,SAAS,CAAC,sBAAD,CAAX,EAAlB;AACApB,sBAAMqB,SAAN,CAAgBzB,OAAhB;AACH,aAzCD;AA0CH;AAnE+B,KAA7B,CAAP;AAqEH,CA7ED","file":"ConditionAttrObjectView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/conditions/ConditionAttrBaseView\",\n\n    // jquery dependencies\n    \"selectize\"\n], function ($, _, ConditionAttrBaseView) {\n    return ConditionAttrBaseView.extend({\n        template: \"templates/admin/views/realms/authorization/policies/conditions/ConditionAttrObject.html\",\n\n        render (data, element, callback) {\n            this.initBasic(data, element, \"field-float-selectize data-obj\");\n\n            this.parentRender(function () {\n                this.initSelectize();\n\n                if (callback) {\n                    callback();\n                }\n            });\n        },\n\n        initSelectize () {\n            var view = this,\n                title = \"\",\n                itemData,\n                options,\n                keyValPair,\n                propName,\n                propVal,\n                $item;\n\n            this.$el.find(\"select.selectize\").each(function () {\n                $item = $(this);\n                options = {\n                    persist: false,\n                    delimiter: \";\",\n                    onItemRemove (value) {\n                        title = this.$input.parent().find(\"label\").data().title;\n                        itemData = view.data.itemData;\n                        keyValPair = value.split(\":\");\n                        delete itemData[title][keyValPair[0]];\n                    },\n                    onItemAdd (value) {\n                        title = this.$input.parent().find(\"label\").data().title;\n                        itemData = view.data.itemData;\n                        keyValPair = value.split(\":\");\n                        propName = keyValPair[0];\n                        propVal = keyValPair[1];\n\n                        if (!itemData[title][propName]) {\n                            itemData[title][propName] = [];\n                        }\n\n                        itemData[title][propName] = _.union(_.compact(propVal.split(\",\")), itemData[title][propName]);\n                    },\n                    create (input) {\n                        return {\n                            value: input,\n                            text: input\n                        };\n                    },\n                    onChange () {\n                        title = this.$input.parent().find(\"label\").data().title;\n                        itemData = view.data.itemData;\n                    },\n                    createFilter (text) {\n                        return (/^\\w+:(?:\\w+,?)+$/).test(text);\n                    }\n                };\n\n                _.extend(options, { plugins: [\"restore_on_backspace\"] });\n                $item.selectize(options);\n            });\n        }\n    });\n});\n"]}