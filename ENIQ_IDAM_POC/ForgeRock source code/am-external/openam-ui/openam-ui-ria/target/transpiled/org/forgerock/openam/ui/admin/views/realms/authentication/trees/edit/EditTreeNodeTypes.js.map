{"version":3,"sources":["../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/trees/edit/EditTreeNodeTypes.jsx"],"names":["EditTreeNodeTypes","nodeTypes","sortedNodeTypes","nodeTypeItems","_id","name","localePath","propTypes","objectOf","shape","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;AAsBA,QAAMA,oBAAoB,SAApBA,iBAAoB,OAAmB;AAAA,YAAhBC,SAAgB,QAAhBA,SAAgB;;AACzC,YAAMC,kBAAkB,oBAAOD,SAAP,EAAkB,MAAlB,CAAxB;AACA,YAAME,gBAAgB,iBAAID,eAAJ,EAAqB;AAAA,gBAAGE,GAAH,SAAGA,GAAH;AAAA,gBAAQC,IAAR,SAAQA,IAAR;AAAA,mBACvC,gEAAsB,aAAcA,IAApC,EAA2C,KAAMD,GAAjD,EAAuD,UAAWA,GAAlE,GADuC;AAAA,SAArB,CAAtB;AAGA,YAAME,aAAa,yCAAnB;;AAEA,eACI;AAAA;AAAA,cAAK,WAAU,6CAAf;AACI;AAAA;AAAA,kBAAI,WAAU,6BAAd;AAA8C,gCAAKA,UAAL;AAA9C,aADJ;AAEI;AACI,6BAAc,gBAAKA,UAAL,oBADlB;AAEI,8CAFJ;AAGI;AAHJ,cAFJ;AAOI;AACI,6BAAc,gBAAKA,UAAL,oBADlB;AAEI,8CAFJ;AAGI;AAHJ,cAPJ;AAYI,qDAZJ;AAaMH;AAbN,SADJ;AAiBH,KAxBD,C,CAtBA;;;;;;;;;;;;;;;;;AAgDAH,sBAAkBO,SAAlB,GAA8B;AAC1BN,mBAAW,iBAAUO,QAAV,CAAmB,iBAAUC,KAAV,CAAgB;AAC1CL,iBAAK,iBAAUM,MAAV,CAAiBC,UADoB;AAE1CN,kBAAM,iBAAUK,MAAV,CAAiBC;AAFmB,SAAhB,CAAnB,EAGPA;AAJsB,KAA9B;;sBAOeX,iB","file":"EditTreeNodeTypes.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\nimport { map, sortBy } from \"lodash\";\nimport { t } from \"i18next\";\nimport React, { PropTypes } from \"react\";\n\nimport EditTreeNodeTypeItem from \"./EditTreeNodeTypeItem\";\nimport { FAILURE_NODE_TYPE, SUCCESS_NODE_TYPE } from \"store/modules/local/authentication/trees/current/nodes/static\";\n\nconst EditTreeNodeTypes = ({ nodeTypes }) => {\n    const sortedNodeTypes = sortBy(nodeTypes, \"name\");\n    const nodeTypeItems = map(sortedNodeTypes, ({ _id, name }) =>\n        <EditTreeNodeTypeItem displayName={ name } key={ _id } nodeType={ _id } />\n    );\n    const localePath = \"console.authentication.trees.edit.nodes\";\n\n    return (\n        <div className=\"authtree-content-side authtree-content-left\">\n            <h4 className=\"authtree-content-side-title\">{ t(`${localePath}.nodeTypes.title`) }</h4>\n            <EditTreeNodeTypeItem\n                displayName={ t(`${localePath}.success.title`) }\n                key={ SUCCESS_NODE_TYPE }\n                nodeType={ SUCCESS_NODE_TYPE }\n            />\n            <EditTreeNodeTypeItem\n                displayName={ t(`${localePath}.failure.title`) }\n                key={ FAILURE_NODE_TYPE }\n                nodeType={ FAILURE_NODE_TYPE }\n            />\n            <hr />\n            { nodeTypeItems }\n        </div>\n    );\n};\n\nEditTreeNodeTypes.propTypes = {\n    nodeTypes: PropTypes.objectOf(PropTypes.shape({\n        _id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n    })).isRequired\n};\n\nexport default EditTreeNodeTypes;\n"]}