{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/deployment/servers/ListServersView.js"],"names":["define","$","_","AbstractView","showConfirmationBeforeAction","Messages","ServersService","TemplateBasedView","ToggleCardListView","default","ListServersView","extend","template","events","partials","onDelete","event","preventDefault","id","currentTarget","data","deleteItem","message","t","type","servers","remove","then","render","response","addMessage","TYPE_DANGER","renderToggleView","tableData","toggleView","el","activeView","getActiveView","DEFAULT_VIEW","button","href","icon","title","btnClass","getElementA","callback","$el","find","popover","getElementB","showCallToAction","removeClass","args","getAll","parentRender","isEmpty"],"mappings":"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","file":"ListServersView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/openam/ui/admin/utils/form/showConfirmationBeforeAction\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/openam/ui/admin/services/global/ServersService\",\n    \"org/forgerock/openam/ui/common/components/TemplateBasedView\",\n    \"org/forgerock/openam/ui/admin/views/common/ToggleCardListView\"\n], ($, _, AbstractView, showConfirmationBeforeAction, Messages, ServersService, TemplateBasedView,\n    ToggleCardListView) => { // eslint-disable-line padded-blocks\n\n    showConfirmationBeforeAction = showConfirmationBeforeAction.default;\n\n    const ListServersView = AbstractView.extend({\n        template: \"templates/admin/views/deployment/servers/ListServersTemplate.html\",\n        events: {\n            \"click [data-delete-item]\" : \"onDelete\"\n        },\n        partials: [\n            \"partials/util/_ButtonLink.html\",\n            \"templates/admin/views/deployment/servers/_ServerCard.html\"\n        ],\n        onDelete (event) {\n            event.preventDefault();\n            const id = $(event.currentTarget).data().deleteItem;\n            showConfirmationBeforeAction({\n                message: $.t(\"console.common.confirmDeleteText\", { type: $.t(\"console.servers.common.confirmType\") })\n            },\n            () => {\n                ServersService.servers.remove(id).then(() => {\n                    this.render();\n                }, (response) => {\n                    Messages.addMessage({ response, type: Messages.TYPE_DANGER });\n                });\n            });\n        },\n        renderToggleView (data) {\n            const tableData = {\n                \"headers\": [$.t(\"console.servers.list.table.0\"), $.t(\"console.servers.list.table.1\")],\n                \"items\" : data\n            };\n\n            this.toggleView = new ToggleCardListView({\n                el: \"#toggleCardList\",\n                activeView: this.toggleView ? this.toggleView.getActiveView() : ToggleCardListView.DEFAULT_VIEW,\n                button: {\n                    href: \"#deployment/servers/new\",\n                    icon: \"fa-plus\",\n                    title: $.t(\"console.servers.list.new\"),\n                    btnClass: \"btn-primary\"\n                }\n            });\n\n            this.toggleView.render((toggleView) => {\n                new TemplateBasedView({\n                    data: tableData,\n                    el: toggleView.getElementA(),\n                    template: \"templates/admin/views/deployment/servers/ServersCardsTemplate.html\",\n                    callback: () => {\n                        this.$el.find('[data-toggle=\"popover\"]').popover();\n                    }\n                }).render();\n                new TemplateBasedView({\n                    data: tableData,\n                    el: toggleView.getElementB(),\n                    template: \"templates/admin/views/deployment/servers/ServersTableTemplate.html\"\n                }).render();\n            });\n        },\n\n        showCallToAction () {\n            this.$el.find(\".call-to-action-block\").removeClass(\"hidden\");\n        },\n\n        render (args, callback) {\n            ServersService.servers.getAll().then((data) => {\n                this.parentRender(() => {\n                    if (_.isEmpty(data)) {\n                        this.showCallToAction();\n                    } else {\n                        this.renderToggleView(data);\n                    }\n\n                    if (callback) {\n                        callback();\n                    }\n                });\n            }, (response) => {\n                Messages.addMessage({\n                    type: Messages.TYPE_DANGER,\n                    response\n                });\n            });\n        }\n    });\n\n    return new ListServersView();\n});\n"]}