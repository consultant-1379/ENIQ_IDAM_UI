{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/common/services/ServerService.jsm"],"names":["getVersion","getConfiguration","obj","host","context","getRealmUrlParameter","parseQueryString","getCurrentQueryString","realm","getUrl","path","realmParameter","serviceCall","headers","url","then","fullVersion","callParams","extend","response","dispatch","reason","realmUrlParameter"],"mappings":";;;;;;YAsCgBA,U,GAAAA,U;YAOAC,gB,GAAAA,gB;;;;;;;;;;;;;;;;;;;;AAlBhB,QAAMC,MAAM,oCAAwB,oBAAUC,IAAlC,GAAyC,oBAAUC,OAAnD,WAAZ,C,CA3BA;;;;;;;;;;;;;;;;AAgBA;;;;;AAaA,aAASC,oBAAT,GAAiC;AAC7B,eAAO,mBAASC,gBAAT,CAA0B,mBAASC,qBAAT,EAA1B,EAA4DC,KAAnE;AACH;;AAED,aAASC,MAAT,CAAiBC,IAAjB,EAAuB;AACnB,YAAMC,iBAAiBN,sBAAvB;AACA,eAAO,wBAASK,IAAT,EAAe,EAAEF,OAAOG,iBAAiBA,cAAjB,GAAkC,KAA3C,EAAf,CAAP;AACH;;AAEM,aAASX,UAAT,GAAuB;AAC1B,eAAOE,IAAIU,WAAJ,CAAgB;AACnBC,qBAAS,EAAE,sBAAsB,2BAAxB,EADU;AAEnBC,iBAAKL,OAAO,qBAAP;AAFc,SAAhB,EAGJM,IAHI,CAGC;AAAA,gBAAGC,WAAH,QAAGA,WAAH;AAAA,mBAAqBA,WAArB;AAAA,SAHD,CAAP;AAIH;;AAEM,aAASf,gBAAT,CAA2BgB,UAA3B,EAAuC;AAC1C,eAAOf,IAAIU,WAAJ,CAAgB,iBAAEM,MAAF,CAAS;AAC5BL,qBAAS,EAAE,sBAAsB,2BAAxB,EADmB;AAE5BC,iBAAKL,OAAO,eAAP;AAFuB,SAAT,EAGpBQ,UAHoB,CAAhB,EAGSF,IAHT,CAGc,UAACI,QAAD,EAAc;AAC/B,4BAAMC,QAAN,CAAe,oBAASD,SAASX,KAAlB,CAAf;;AAEA,mBAAOW,QAAP;AACH,SAPM,EAOJ,UAACE,MAAD,EAAY;AACX,gBAAMC,oBAAoBjB,sBAA1B;AACA,gBAAIiB,iBAAJ,EAAuB;AACnB,gCAAMF,QAAN,CAAe,oBAASE,iBAAT,CAAf;AACH;;AAED,mBAAOD,MAAP;AACH,SAdM,CAAP;AAeH","file":"ServerService.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\n/**\n * @module org/forgerock/openam/ui/common/services/ServerService\n */\nimport _ from \"lodash\";\nimport { addRealm } from \"store/modules/remote/info\";\nimport AbstractDelegate from \"org/forgerock/commons/ui/common/main/AbstractDelegate\";\nimport Constants from \"org/forgerock/commons/ui/common/util/Constants\";\nimport fetchUrl from \"./fetchUrl\";\nimport store from \"store/index\";\nimport URIUtils from \"org/forgerock/commons/ui/common/util/URIUtils\";\n\nconst obj = new AbstractDelegate(`${Constants.host}${Constants.context}/json`);\n\nfunction getRealmUrlParameter () {\n    return URIUtils.parseQueryString(URIUtils.getCurrentQueryString()).realm;\n}\n\nfunction getUrl (path) {\n    const realmParameter = getRealmUrlParameter();\n    return fetchUrl(path, { realm: realmParameter ? realmParameter : false });\n}\n\nexport function getVersion () {\n    return obj.serviceCall({\n        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n        url: getUrl(\"/serverinfo/version\")\n    }).then(({ fullVersion }) => fullVersion);\n}\n\nexport function getConfiguration (callParams) {\n    return obj.serviceCall(_.extend({\n        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.1\" },\n        url: getUrl(\"/serverinfo/*\")\n    }, callParams)).then((response) => {\n        store.dispatch(addRealm(response.realm));\n\n        return response;\n    }, (reason) => {\n        const realmUrlParameter = getRealmUrlParameter();\n        if (realmUrlParameter) {\n            store.dispatch(addRealm(realmUrlParameter));\n        }\n\n        return reason;\n    });\n}\n"]}