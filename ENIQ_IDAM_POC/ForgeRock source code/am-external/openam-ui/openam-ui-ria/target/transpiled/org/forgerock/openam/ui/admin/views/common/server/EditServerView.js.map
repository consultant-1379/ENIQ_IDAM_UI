{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/common/server/EditServerView.js"],"names":["define","$","_","Messages","AbstractView","EventManager","Constants","ServersService","PanelComponent","PartialBasedView","TabComponent","TabSearch","InlineEditTable","JSONSchema","JSONValues","Promise","setFocusToFoundInput","FlatJSONSchemaView","default","createTabs","schema","raw","properties","map","value","key","id","order","propertyOrder","title","sortBy","isAdvancedSection","sectionId","servers","ADVANCED_SECTION","extend","template","events","getJSONSchemaView","subview","getBody","render","serverId","data","t","getWithDefaults","then","defaultValues","values","parentRender","createBody","cloneDeep","createFooter","partial","tabs","type","rowSchema","items","options","onChange","setTabId","$el","find","append","setElement","getSection","getTabId","updateValues","getData","onSave","isValid","addMessage","message","TYPE_DANGER","removeNullPasswords","update","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST","response","toggleInheritance","event","target","currentTarget","removeJSONSchemaRootPrefix","slice","propertySchemaPath","getAttribute","isInherited","propValue"],"mappings":"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","file":"EditServerView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/admin/services/global/ServersService\",\n    \"org/forgerock/openam/ui/common/components/PanelComponent\",\n    \"org/forgerock/openam/ui/common/components/PartialBasedView\",\n    \"org/forgerock/openam/ui/common/components/TabComponent\",\n    \"org/forgerock/openam/ui/admin/views/common/TabSearch\",\n    \"org/forgerock/openam/ui/common/components/table/InlineEditTable\",\n    \"org/forgerock/openam/ui/common/models/JSONSchema\",\n    \"org/forgerock/openam/ui/common/models/JSONValues\",\n    \"org/forgerock/openam/ui/common/util/Promise\",\n    \"org/forgerock/openam/ui/admin/utils/form/setFocusToFoundInput\",\n    \"org/forgerock/openam/ui/common/views/jsonSchema/FlatJSONSchemaView\"\n], ($, _, Messages, AbstractView, EventManager, Constants, ServersService, PanelComponent, PartialBasedView,\n    TabComponent, TabSearch, InlineEditTable, JSONSchema, JSONValues, Promise, setFocusToFoundInput,\n    FlatJSONSchemaView) => {\n    setFocusToFoundInput = setFocusToFoundInput.default;\n    function createTabs (schema) {\n        return _(schema.raw.properties)\n            .map((value, key) => ({ id: key, order: value.propertyOrder, title: value.title }))\n            .sortBy(\"order\")\n            .value();\n    }\n    function isAdvancedSection (sectionId) {\n        return sectionId === ServersService.servers.ADVANCED_SECTION;\n    }\n\n    return AbstractView.extend({\n        template: \"templates/admin/views/common/HeaderFormTemplate.html\",\n        events: {\n            \"click [data-save]\": \"onSave\",\n            \"click [data-inherit-value]\": \"toggleInheritance\"\n        },\n        getJSONSchemaView () {\n            return this.subview.getBody();\n        },\n        render ([serverId, sectionId]) {\n            this.sectionId = sectionId;\n            this.serverId = serverId;\n\n            this.data.title = $.t(`console.common.navigation.${this.sectionId}`);\n\n            ServersService.servers.getWithDefaults(this.serverId, this.sectionId).then(({ defaultValues, schema,\n                values }) => {\n                this.schema = schema;\n                this.values = values;\n                this.defaultValues = defaultValues;\n\n                this.parentRender(() => {\n                    if (isAdvancedSection(this.sectionId)) {\n                        this.subview = new PanelComponent({\n                            createBody: () => new InlineEditTable({ values: _.cloneDeep(this.values.raw) }),\n                            createFooter: () => new PartialBasedView({ partial: \"form/_JSONSchemaFooter\" })\n                        });\n                    } else {\n                        const tabs = createTabs(schema);\n                        this.subview = new TabComponent({\n                            tabs,\n                            createBody: (id) => {\n                                if (schema.raw.properties[id].type === \"array\") {\n                                    return new InlineEditTable({\n                                        values: _.cloneDeep(this.values.raw)[id],\n                                        rowSchema: schema.raw.properties[id].items\n                                    });\n                                } else {\n                                    return new FlatJSONSchemaView({\n                                        schema: new JSONSchema(schema.raw.properties[id]),\n                                        values: new JSONValues(_.cloneDeep(this.values.raw)[id])\n                                    });\n                                }\n                            },\n                            createFooter: () => new PartialBasedView({ partial: \"form/_JSONSchemaFooter\" })\n                        });\n                        const options = {\n                            properties: this.schema.raw.properties,\n                            onChange: (id, value) => {\n                                this.subview.setTabId(id);\n                                setFocusToFoundInput(this.$el.find(`[data-schemapath=\"root.${value}\"]`));\n                            }\n                        };\n                        this.$el.find(\"[data-tab-search]\").append(new TabSearch(options).render().$el);\n                    }\n                    this.subview.setElement(\"[data-json-form]\");\n                    this.subview.render();\n                });\n            });\n        },\n        getSection () {\n            return this.sectionId === ServersService.servers.ADVANCED_SECTION\n                ? this.sectionId\n                : this.subview.getTabId();\n        },\n        updateValues () {\n            this.values = this.values.extend({\n                [this.getSection()]: this.getJSONSchemaView().getData()\n            });\n        },\n        onSave () {\n            if (!this.getJSONSchemaView().isValid()) {\n                Messages.addMessage({\n                    message: $.t(\"common.form.validation.errorsNotSaved\"),\n                    type: Messages.TYPE_DANGER\n                });\n                return;\n            }\n\n            this.updateValues();\n\n            const values = isAdvancedSection(this.sectionId)\n                ? this.values\n                : this.values.removeNullPasswords(this.schema);\n\n            ServersService.servers.update(\n                this.sectionId,\n                values.raw,\n                this.serverId\n            ).then(() => {\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"changesSaved\");\n            }, (response) => {\n                Messages.addMessage({\n                    response,\n                    type: Messages.TYPE_DANGER\n                });\n            });\n        },\n        toggleInheritance (event) {\n            const target = event.currentTarget;\n            const removeJSONSchemaRootPrefix = (key) => key.slice(5);\n            const propertySchemaPath = removeJSONSchemaRootPrefix(target.getAttribute(\"data-schemapath\"));\n            const isInherited = target.getAttribute(\"data-inherit-value\") === \"true\";\n            let propValue;\n\n            if (isInherited) {\n                propValue = this.values.raw[this.subview.getTabId()][propertySchemaPath].value;\n            } else {\n                propValue = this.defaultValues.raw[this.subview.getTabId()][propertySchemaPath];\n            }\n\n            this.getJSONSchemaView().subview.toggleInheritance(propertySchemaPath, propValue, !isInherited);\n        }\n    });\n});\n"]}