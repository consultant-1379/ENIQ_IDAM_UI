{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authorization/policies/PolicyActionsView.js"],"names":["define","$","_","AbstractView","UIUtils","PolicyActionsView","extend","element","template","noBaseTemplate","events","render","data","callback","availableActions","cloneDeep","options","selectedActions","each","entity","actionValues","value","key","without","find","action","push","parentRender","d1","Deferred","d2","renderAvailableActions","resolve","renderSelectedActions","when","done","fillTemplateWithData","sortBy","tpl","$el","html","prop","selectAction","e","preventDefault","actionName","target","cloned","clone","changePermission","$target","permitted","val","closest","text","trim","deleteItem","type","keyCode","selectedAction"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,mDAHG,EAIH,8CAJG,CAAP,EAKG,UAACC,CAAD,EAAIC,CAAJ,EAAOC,YAAP,EAAqBC,OAArB,EAAiC;AAChC,QAAMC,oBAAoBF,aAAaG,MAAb,CAAoB;AAC1CC,iBAAS,UADiC;AAE1CC,kBAAU,gFAFgC;AAG1CC,wBAAgB,IAH0B;AAI1CC,gBAAQ;AACJ,wCAA4B,kBADxB;AAEJ,wCAA4B,cAFxB;AAGJ,yCAA6B,YAHzB;AAIJ,yCAA6B;AAJzB,SAJkC;;AAW1CC,cAX0C,kBAWlCC,IAXkC,EAW5BC,QAX4B,EAWlB;AACpBX,cAAEI,MAAF,CAAS,KAAKM,IAAd,EAAoBA,IAApB;;AAEA,gBAAIE,mBAAmBZ,EAAEa,SAAF,CAAYH,KAAKI,OAAL,CAAaF,gBAAzB,CAAvB;AACA,gBAAMG,kBAAkB,EAAxB;;AAEAf,cAAEgB,IAAF,CAAON,KAAKO,MAAL,CAAYC,YAAnB,EAAiC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC7CR,mCAAmBZ,EAAEqB,OAAF,CAAUT,gBAAV,EAA4BZ,EAAEsB,IAAF,CAAOV,gBAAP,EAAyB,EAAEW,QAAQH,GAAV,EAAzB,CAA5B,CAAnB;AACAL,gCAAgBS,IAAhB,CAAqB,EAAED,QAAQH,GAAV,EAAeD,YAAf,EAArB;AACH,aAHD;;AAKA,iBAAKT,IAAL,CAAUE,gBAAV,GAA6BA,gBAA7B;AACA,iBAAKF,IAAL,CAAUK,eAAV,GAA4BA,eAA5B;;AAEA,iBAAKU,YAAL,CAAkB,YAAY;AAC1B,oBAAMC,KAAK3B,EAAE4B,QAAF,EAAX;AACA,oBAAMC,KAAK7B,EAAE4B,QAAF,EAAX;;AAEA,qBAAKE,sBAAL,CAA4B;AAAA,2BAAMH,GAAGI,OAAH,EAAN;AAAA,iBAA5B;AACA,qBAAKC,qBAAL,CAA2B;AAAA,2BAAMH,GAAGE,OAAH,EAAN;AAAA,iBAA3B;;AAEA/B,kBAAEiC,IAAF,CAAON,EAAP,EAAWE,EAAX,EAAeK,IAAf,CAAoB,YAAM;AACtB,wBAAItB,QAAJ,EAAc;AACVA;AACH;AACJ,iBAJD;AAKH,aAZD;AAaH,SAtCyC;AAwC1CkB,8BAxC0C,kCAwClBlB,QAxCkB,EAwCR;AAAA;;AAC9BT,oBAAQgC,oBAAR,CACI,yFADJ,EAEI,EAAE,SAASlC,EAAEmC,MAAF,CAAS,KAAKzB,IAAL,CAAUE,gBAAnB,EAAqC,QAArC,CAAX,EAFJ,EAGI,UAACwB,GAAD,EAAS;AACL,sBAAKC,GAAL,CAASf,IAAT,CAAc,mBAAd,EAAmCgB,IAAnC,CAAwCF,GAAxC;AACA,oBAAIzB,QAAJ,EAAc;AACVA;AACH;AACJ,aARL;AASH,SAlDyC;AAoD1CoB,6BApD0C,iCAoDnBpB,QApDmB,EAoDT;AAAA;;AAC7BT,oBAAQgC,oBAAR,CACI,6EADJ,EAEI,EAAE,SAASlC,EAAEmC,MAAF,CAAS,KAAKzB,IAAL,CAAUK,eAAnB,EAAoC,QAApC,CAAX,EAFJ,EAGI,UAACqB,GAAD,EAAS;AACL,uBAAKC,GAAL,CAASf,IAAT,CAAc,kBAAd,EAAkCgB,IAAlC,CAAuCF,GAAvC;AACA,uBAAKC,GAAL,CAASf,IAAT,CAAc,uBAAd,EAAuCiB,IAAvC,CAA4C,UAA5C,EAAwD,IAAxD;AACA,oBAAI5B,QAAJ,EAAc;AACVA;AACH;AACJ,aATL;AAUH,SA/DyC;AAiE1C6B,oBAjE0C,wBAiE5BC,CAjE4B,EAiEzB;AACbA,cAAEC,cAAF;;AAEA,gBAAMC,aAAa5C,EAAE0C,EAAEG,MAAJ,EAAYlC,IAAZ,CAAiB,YAAjB,CAAnB;AACA,gBAAMa,SAASvB,EAAEsB,IAAF,CAAO,KAAKZ,IAAL,CAAUI,OAAV,CAAkBF,gBAAzB,EAA2C,EAAEW,QAAQoB,UAAV,EAA3C,CAAf;AACA,gBAAME,SAAS7C,EAAE8C,KAAF,CAAQvB,MAAR,CAAf;;AAEA,iBAAKb,IAAL,CAAUE,gBAAV,GAA6BZ,EAAEqB,OAAF,CAAU,KAAKX,IAAL,CAAUE,gBAApB,EACzBZ,EAAEsB,IAAF,CAAO,KAAKZ,IAAL,CAAUE,gBAAjB,EAAmC,EAAEW,QAAQoB,UAAV,EAAnC,CADyB,CAA7B;AAGA,iBAAKd,sBAAL;AACA,iBAAKnB,IAAL,CAAUK,eAAV,CAA0BS,IAA1B,CAA+BqB,MAA/B;AACA,iBAAKd,qBAAL;;AAEA,iBAAKrB,IAAL,CAAUO,MAAV,CAAiBC,YAAjB,CAA8BK,OAAOA,MAArC,IAA+CA,OAAOJ,KAAtD;AACH,SAhFyC;AAkF1C4B,wBAlF0C,4BAkFxBN,CAlFwB,EAkFrB;AACjB,gBAAMO,UAAUjD,EAAE0C,EAAEG,MAAJ,CAAhB;AACA,gBAAMK,YAAY,CAACD,QAAQE,GAAR,MAAiBF,QAAQ1B,IAAR,CAAa,OAAb,EAAsB4B,GAAtB,EAAlB,MAAmD,MAArE;AACA,gBAAMP,aAAaK,QAAQG,OAAR,CAAgB,IAAhB,EAAsB7B,IAAtB,CAA2B,cAA3B,EAA2C8B,IAA3C,GAAkDC,IAAlD,EAAnB;;AAEArD,cAAEsB,IAAF,CAAO,KAAKZ,IAAL,CAAUK,eAAjB,EAAkC,EAAEQ,QAAQoB,UAAV,EAAlC,EAA0DxB,KAA1D,GAAkE8B,SAAlE;;AAEA,iBAAKvC,IAAL,CAAUO,MAAV,CAAiBC,YAAjB,CAA8ByB,UAA9B,IAA4CM,SAA5C;AACH,SA1FyC;AA4F1CK,kBA5F0C,sBA4F9Bb,CA5F8B,EA4F3B;AACX,gBAAIA,EAAEc,IAAF,KAAW,OAAX,IAAsBd,EAAEe,OAAF,KAAc,EAAxC,EAA4C;AACxC;AACH;AACD,gBAAMR,UAAUjD,EAAE0C,EAAEG,MAAJ,CAAhB;AACA,gBAAMD,aAAaK,QAAQG,OAAR,CAAgB,IAAhB,EAAsB7B,IAAtB,CAA2B,cAA3B,EAA2C8B,IAA3C,GAAkDC,IAAlD,EAAnB;AACA,gBAAMI,iBAAiBzD,EAAEsB,IAAF,CAAO,KAAKZ,IAAL,CAAUK,eAAjB,EAAkC,EAAEQ,QAAQoB,UAAV,EAAlC,CAAvB;;AAEA,iBAAKjC,IAAL,CAAUK,eAAV,GAA4Bf,EAAEqB,OAAF,CAAU,KAAKX,IAAL,CAAUK,eAApB,EAAqC0C,cAArC,CAA5B;AACA,iBAAK1B,qBAAL;;AAEA,mBAAO,KAAKrB,IAAL,CAAUO,MAAV,CAAiBC,YAAjB,CAA8ByB,UAA9B,CAAP;;AAEA,iBAAKjC,IAAL,CAAUE,gBAAV,CAA2BY,IAA3B,CAAgCiC,cAAhC;AACA,iBAAK5B,sBAAL;AACH;AA3GyC,KAApB,CAA1B;;AA8GA,WAAO,IAAI1B,iBAAJ,EAAP;AACH,CArHD","file":"PolicyActionsView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\"\n], ($, _, AbstractView, UIUtils) => {\n    const PolicyActionsView = AbstractView.extend({\n        element: \"#actions\",\n        template: \"templates/admin/views/realms/authorization/policies/PolicyActionsTemplate.html\",\n        noBaseTemplate: true,\n        events: {\n            \"click [data-toggle-item]\": \"changePermission\",\n            \"click [data-action-name]\": \"selectAction\",\n            \"click button[data-delete]\": \"deleteItem\",\n            \"keyup button[data-delete]\": \"deleteItem\"\n        },\n\n        render (data, callback) {\n            _.extend(this.data, data);\n\n            let availableActions = _.cloneDeep(data.options.availableActions);\n            const selectedActions = [];\n\n            _.each(data.entity.actionValues, (value, key) => {\n                availableActions = _.without(availableActions, _.find(availableActions, { action: key }));\n                selectedActions.push({ action: key, value });\n            });\n\n            this.data.availableActions = availableActions;\n            this.data.selectedActions = selectedActions;\n\n            this.parentRender(function () {\n                const d1 = $.Deferred();\n                const d2 = $.Deferred();\n\n                this.renderAvailableActions(() => d1.resolve());\n                this.renderSelectedActions(() => d2.resolve());\n\n                $.when(d1, d2).done(() => {\n                    if (callback) {\n                        callback();\n                    }\n                });\n            });\n        },\n\n        renderAvailableActions (callback) {\n            UIUtils.fillTemplateWithData(\n                \"templates/admin/views/realms/authorization/policies/PolicyAvailableActionsTemplate.html\",\n                { \"items\": _.sortBy(this.data.availableActions, \"action\") },\n                (tpl) => {\n                    this.$el.find(\"#availableActions\").html(tpl);\n                    if (callback) {\n                        callback();\n                    }\n                });\n        },\n\n        renderSelectedActions (callback) {\n            UIUtils.fillTemplateWithData(\n                \"templates/admin/views/realms/authorization/common/ActionsTableTemplate.html\",\n                { \"items\": _.sortBy(this.data.selectedActions, \"action\") },\n                (tpl) => {\n                    this.$el.find(\"#selectedActions\").html(tpl);\n                    this.$el.find(\"button[data-add-item]\").prop(\"disabled\", true);\n                    if (callback) {\n                        callback();\n                    }\n                });\n        },\n\n        selectAction (e) {\n            e.preventDefault();\n\n            const actionName = $(e.target).data(\"actionName\");\n            const action = _.find(this.data.options.availableActions, { action: actionName });\n            const cloned = _.clone(action);\n\n            this.data.availableActions = _.without(this.data.availableActions,\n                _.find(this.data.availableActions, { action: actionName })\n            );\n            this.renderAvailableActions();\n            this.data.selectedActions.push(cloned);\n            this.renderSelectedActions();\n\n            this.data.entity.actionValues[action.action] = action.value;\n        },\n\n        changePermission (e) {\n            const $target = $(e.target);\n            const permitted = ($target.val() || $target.find(\"input\").val()) === \"true\";\n            const actionName = $target.closest(\"tr\").find(\".action-name\").text().trim();\n\n            _.find(this.data.selectedActions, { action: actionName }).value = permitted;\n\n            this.data.entity.actionValues[actionName] = permitted;\n        },\n\n        deleteItem (e) {\n            if (e.type === \"keyup\" && e.keyCode !== 13) {\n                return;\n            }\n            const $target = $(e.target);\n            const actionName = $target.closest(\"tr\").find(\".action-name\").text().trim();\n            const selectedAction = _.find(this.data.selectedActions, { action: actionName });\n\n            this.data.selectedActions = _.without(this.data.selectedActions, selectedAction);\n            this.renderSelectedActions();\n\n            delete this.data.entity.actionValues[actionName];\n\n            this.data.availableActions.push(selectedAction);\n            this.renderAvailableActions();\n        }\n    });\n\n    return new PolicyActionsView();\n});\n"]}