{"version":3,"sources":["../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authorization/policies/conditions/ConditionAttrBaseView.js"],"names":["define","$","_","AbstractView","extend","noBaseTemplate","data","events","initBasic","el","cssClasses","elWrapper","append","element","find","changeInput","e","stopPropagation","target","currentTarget","propTitle","parent","children","length","title","itemData","value","populateInputGroup","populateAutoFillGroup","attrSpecificChangeInput","group","closest","inputs","populated","each","prop","first","eq","second","firstVal","firstLabel","secondVal","secondLabel","val"],"mappings":"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","file":"ConditionAttrBaseView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\"\n], function ($, _, AbstractView) {\n    return AbstractView.extend({\n        noBaseTemplate: true,\n        data: {},\n        events: {\n            \"change select:not(.type-selection):not(.selectize)\": \"changeInput\",\n            \"change input\": \"changeInput\",\n            \"keyup  input\": \"changeInput\",\n            \"dp.change input\": \"changeInput\"\n        },\n\n        initBasic (data, el, cssClasses) {\n            var elWrapper = $(`<div class=\"condition-attr form-inline ${cssClasses}\"></div>`);\n            el.append(elWrapper);\n\n            this.data = data;\n            this.element = el.find(elWrapper);\n        },\n\n        changeInput (e) {\n            e.stopPropagation();\n\n            var target = $(e.currentTarget),\n                propTitle;\n\n            if (!target.parent().children(\"label\").length) {\n                return; // this is a temporary workaround needed for a event leakage\n            }\n\n            propTitle = target.parent().children(\"label\").data().title;\n\n            this.data.itemData[propTitle] = e.currentTarget.value;\n\n            this.populateInputGroup(target);\n            this.populateAutoFillGroup(target);\n\n            if (this.attrSpecificChangeInput) {\n                this.attrSpecificChangeInput(e);\n            }\n        },\n\n        populateInputGroup (target) {\n            var group = target.closest(\".attr-group\"),\n                inputs = group.find(\":input\"),\n                populated = _.find(inputs, function (el) {\n                    return el.value !== \"\";\n                });\n\n            inputs.each(function () {\n                $(this).prop(\"required\", !!populated);\n            });\n        },\n\n        populateAutoFillGroup (target) {\n            var group = target.closest(\"li\").find(\"div.auto-fill-group\"),\n                first = group.eq(0),\n                second = group.eq(1),\n                firstVal, firstLabel,\n                secondVal, secondLabel,\n                data;\n\n            if (first.length && second.length) {\n                firstVal = first.find(\"input\").val();\n                firstLabel = first.find(\"label\").data().title;\n                secondVal = second.find(\"input\").val();\n                secondLabel = second.find(\"label\").data().title;\n                data = this.data.itemData;\n            }\n\n            if (firstVal !== \"\" && secondVal === \"\") {\n                data[secondLabel] = data[firstLabel];\n            } else if (firstVal === \"\" && secondVal !== \"\") {\n                data[firstLabel] = data[secondLabel];\n            } else if (firstVal === \"\" && secondVal === \"\") {\n                delete data[firstLabel];\n                delete data[secondLabel];\n            }\n        }\n    });\n});\n"]}