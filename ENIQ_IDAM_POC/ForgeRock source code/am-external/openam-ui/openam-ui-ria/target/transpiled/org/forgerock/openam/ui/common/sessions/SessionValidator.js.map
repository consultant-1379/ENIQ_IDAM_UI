{"version":3,"sources":["../../../../../../../XUI/org/forgerock/openam/ui/common/sessions/SessionValidator.js"],"names":["define","Router","logout","delay","ONE_SECOND_IN_MILLISECONDS","SESSION_ALMOST_EXPIRED_BACKOFF_SECONDS","stop","clearTimeout","validate","strategy","seconds","setTimeout","then","adjustedSeconds","default","routeTo","configuration","routes","sessionExpired","trigger","start","Error"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBA;;;AAGAA,OAAO,CACH,6CADG,EAEH,2CAFG,CAAP,EAGG,UAACC,MAAD,EAASC,MAAT,EAAoB;AACnB,QAAIC,cAAJ;AACA,QAAMC,6BAA6B,IAAnC;AACA,QAAMC,yCAAyC,CAA/C;;AAEA,aAASC,IAAT,GAAiB;AACbC,qBAAaJ,KAAb;;AAEAA,gBAAQ,IAAR;AACH;;AAED,aAASK,QAAT,CAAmBC,QAAnB,EAA6BC,OAA7B,EAAsC;AAClCP,gBAAQQ,WAAW,YAAM;AACrBF,uBAAWG,IAAX,CAAgB,UAACF,OAAD,EAAa;AACzB;;;;AAIA,oBAAMG,kBAAkBH,UAAU,CAAV,GAAcA,OAAd,GAAwBL,sCAAhD;;AAEAG,yBAASC,QAAT,EAAmBI,eAAnB;AACH,aARD,EAQG,YAAM;AACLP;;AAEA;AACAJ,uBAAOY,OAAP,GAAiBF,IAAjB,CAAsB,YAAM;AACxBX,2BAAOc,OAAP,CAAed,OAAOe,aAAP,CAAqBC,MAArB,CAA4BC,cAA3C,EAA2D,EAAEC,SAAS,IAAX,EAA3D;AACH,iBAFD;AAGH,aAfD;AAgBH,SAjBO,EAiBLT,UAAUN,0BAjBL,CAAR;AAkBH;;AAED,WAAO;AACH;;;;;AAKAgB,aANG,iBAMIX,QANJ,EAMc;AACb,gBAAIN,KAAJ,EAAW;AAAE,sBAAM,IAAIkB,KAAJ,CAAU,oCAAV,CAAN;AAAwD;;AAErEb,qBAASC,QAAT,EAAmB,CAAnB;AACH,SAVE;;AAWH;;;AAGAH;AAdG,KAAP;AAgBH,CAnDD;;AAqDA","file":"SessionValidator.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\n/**\n  * @module org/forgerock/openam/ui/common/sessions/SessionValidator\n  */\ndefine([\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/openam/ui/user/login/logout\"\n], (Router, logout) => {\n    let delay;\n    const ONE_SECOND_IN_MILLISECONDS = 1000;\n    const SESSION_ALMOST_EXPIRED_BACKOFF_SECONDS = 1;\n\n    function stop () {\n        clearTimeout(delay);\n\n        delay = null;\n    }\n\n    function validate (strategy, seconds) {\n        delay = setTimeout(() => {\n            strategy().then((seconds) => {\n                /**\n                 * If we're within the window of 0 seconds left on the session but still monumentality valid,\n                 * backoff the next schedule by a predetermined number of seconds. Avoids an immediate schedule.\n                 */\n                const adjustedSeconds = seconds > 0 ? seconds : SESSION_ALMOST_EXPIRED_BACKOFF_SECONDS;\n\n                validate(strategy, adjustedSeconds);\n            }, () => {\n                stop();\n\n                // Invoke generic logout module to ensure Configuration.loggedUser is nullified\n                logout.default().then(() => {\n                    Router.routeTo(Router.configuration.routes.sessionExpired, { trigger: true });\n                });\n            });\n        }, seconds * ONE_SECOND_IN_MILLISECONDS);\n    }\n\n    return {\n        /**\n         * Starts the periodic session validation progress using the specified strategy.\n         * @param {org/forgerock/openam/ui/common/sessions/SessionValidator~Strategy} strategy Strategy to use to\n         * perform validation\n         */\n        start (strategy) {\n            if (delay) { throw new Error(\"Validator has already been started\"); }\n\n            validate(strategy, 0);\n        },\n        /**\n         * Stops the periodic session validation progress.\n         */\n        stop\n    };\n});\n\n/**\n * Interface that strategies must adhere to\n * @callback Strategy\n * @memberOf module:org/forgerock/openam/ui/common/sessions/SessionValidator\n * @returns {Promise} when resolved, promise must pass a single argument with the seconds until the next check\n */\n"]}