{"version":3,"sources":["../../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/applications/oauth2/clients/edit/EditOAuth2Client.jsm"],"names":["createTabs","schema","raw","properties","map","value","key","id","order","propertyOrder","title","sortBy","addGroupSelectionToSchema","groups","AGENT_GROUP_PATH","agentgroupProperty","responseIDs","result","availableGroupsIDs","availableGroupsTitles","additional","alert","enum","options","console","error","EditOAuth2Client","template","events","subview","getBody","realm","Deferred","resolve","data","headerActions","actionPartial","icon","all","then","values","onGroupIdChange","hasInheritance","schemaKey","replace","schemaValue","renderJSONSchemaView","agentgroup","jsonSchemaView","getJSONSchemaView","hideInheritance","setData","render","selectedAgentgroup","jsonEditor","element","val","currentAgentgroup","coreOAuth2ClientConfig","getGroupValues","groupValues","defaultValues","mapProperties","newValue","inherited","getSection","groupId","parentRender","tabs","createBody","agentgroupValue","view","onRendered","watch","createFooter","partial","onChange","setTabId","$el","find","append","setElement","getTabId","extend","getData","isValid","addMessage","message","type","TYPE_DANGER","updateValues","valuesWithoutNullPasswords","removeNullPasswords","response","event","target","currentTarget","removeJSONSchemaRootPrefix","slice","propertySchemaPath","getAttribute","nextInheritedValue","nextPropValue","toggleInheritance","addValueForKey","preventDefault","showConfirmationBeforeDeleting","routeTo","configuration","routes","realmsApplicationsOAuth2","args","encodeURIComponent","trigger","model"],"mappings":"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","file":"EditOAuth2Client.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { chain, cloneDeep, get, isEmpty, pluck } from \"lodash\";\nimport { t } from \"i18next\";\nimport $ from \"jquery\";\n\nimport { get as getClient, getSchema, update, remove } from\n    \"org/forgerock/openam/ui/admin/services/realm/AgentsService\";\nimport { getAll as getAllGroups, get as getGroup } from\n    \"org/forgerock/openam/ui/admin/services/realm/AgentGroupsService\";\nimport { OAUTH2_CLIENT } from \"org/forgerock/openam/ui/admin/services/realm/AgentTypes\";\nimport AbstractView from \"org/forgerock/commons/ui/common/main/AbstractView\";\nimport FlatJSONSchemaView from \"org/forgerock/openam/ui/common/views/jsonSchema/FlatJSONSchemaView\";\nimport FormHelper from \"org/forgerock/openam/ui/admin/utils/FormHelper\";\nimport JSONSchema from \"org/forgerock/openam/ui/common/models/JSONSchema\";\nimport JSONValues from \"org/forgerock/openam/ui/common/models/JSONValues\";\nimport Messages from \"org/forgerock/commons/ui/common/components/Messages\";\nimport PartialBasedView from \"org/forgerock/openam/ui/common/components/PartialBasedView\";\nimport Promise from \"org/forgerock/openam/ui/common/util/Promise\";\nimport Router from \"org/forgerock/commons/ui/common/main/Router\";\nimport setFocusToFoundInput from \"org/forgerock/openam/ui/admin/utils/form/setFocusToFoundInput\";\nimport TabComponent from \"org/forgerock/openam/ui/common/components/TabComponent\";\nimport TabSearch from \"org/forgerock/openam/ui/admin/views/common/TabSearch\";\n\nconst createTabs = (schema) => {\n    return chain(schema.raw.properties)\n        .map((value, key) => ({ id: key, order: value.propertyOrder, title: value.title }))\n        .sortBy(\"order\")\n        .value();\n};\n\nconst addGroupSelectionToSchema = (schema, groups) => {\n    const AGENT_GROUP_PATH = \"properties.coreOAuth2ClientConfig.properties.agentgroup\";\n    const agentgroupProperty = get(schema, `[0].${AGENT_GROUP_PATH}`);\n\n    if (agentgroupProperty) {\n        const responseIDs = pluck(groups[0].result, \"_id\");\n        const availableGroupsIDs = [\"\", ...responseIDs];\n        const availableGroupsTitles = [\n            t(\"console.applications.oauth2.clients.edit.unassigned\"),\n            ...responseIDs\n        ];\n\n        // The non spec `additional` property has been added to the schema here to allow for additional properties to\n        // be passed down to the JSONEditorTheme. In this case we render the descriptions with the `alert-info` property\n        // as info alerts\n        agentgroupProperty.additional = {\n            alert: \"alert-info\"\n        };\n        agentgroupProperty.enum = availableGroupsIDs;\n        agentgroupProperty.options = {\n            \"enum_titles\": availableGroupsTitles\n        };\n    } else {\n        console.error(\"[EditOAuth2Client] Unable to add available OAuth 2.0 Groups to \" +\n            \"\\\"coreOAuth2ClientConfig.properties.agentgroup\\\" property.\");\n    }\n};\n\nclass EditOAuth2Client extends AbstractView {\n    constructor () {\n        super();\n\n        this.template = \"templates/admin/views/realms/applications/oauth2/clients/edit/EditOAuth2ClientTemplate.html\";\n        this.events = {\n            \"click [data-delete]\": \"onDelete\",\n            \"click [data-inherit-value]\": \"toggleInheritance\",\n            \"click [data-save]\": \"onSave\"\n        };\n    }\n\n    getJSONSchemaView () {\n        return this.subview.getBody();\n    }\n\n    getGroupValues (id, realm) {\n        return id ? getGroup(realm, OAUTH2_CLIENT, id) : $.Deferred().resolve({});\n    }\n\n    render ([realm, id]) {\n        this.data = {\n            id,\n            headerActions:\n                [{ actionPartial: \"form/_Button\", data: \"delete\", title: \"common.form.delete\", icon: \"fa-times\" }]\n        };\n        this.realm = realm;\n\n        Promise.all([\n            getSchema(realm, OAUTH2_CLIENT),\n            getClient(realm, OAUTH2_CLIENT, id),\n            getAllGroups(realm, OAUTH2_CLIENT)\n        ]).then(([schema, values, groups]) => {\n            addGroupSelectionToSchema(schema, groups);\n\n            this.schema = new JSONSchema(schema[0]);\n            this.values = new JSONValues(values[0]);\n\n            const onGroupIdChange = () => {\n                const hasInheritance = (schema, key) => {\n                    const schemaKey = key.replace(\".\", \".properties.\");\n                    const schemaValue = get(schema.raw.properties, schemaKey);\n                    return schema.hasInheritance(schemaValue);\n                };\n                const renderJSONSchemaView = (agentgroup, data) => {\n                    const jsonSchemaView = this.getJSONSchemaView();\n                    jsonSchemaView.options.hideInheritance = !agentgroup;\n                    jsonSchemaView.setData(data);\n                    jsonSchemaView.render();\n                };\n                const jsonSchemaView = this.getJSONSchemaView();\n                const selectedAgentgroup = $(\"[name='root[agentgroup]']\", jsonSchemaView.subview.jsonEditor.element)\n                    .val();\n                const currentAgentgroup = this.values.raw.coreOAuth2ClientConfig.agentgroup;\n\n                if (selectedAgentgroup) {\n                    if (selectedAgentgroup === currentAgentgroup) {\n                        renderJSONSchemaView(selectedAgentgroup);\n                    } else {\n                        this.getGroupValues(selectedAgentgroup, realm).then((groupValues) => {\n                            // Update defaults so the correct values are inserted when a user clicks an inherited button\n                            this.defaultValues = new JSONValues(groupValues);\n\n                            // Update this.values so inherited values across tabs are updated\n                            this.values = this.values.mapProperties((value, key) => {\n                                if (hasInheritance(this.schema, key)) {\n                                    const newValue = get(value, \"inherited\")\n                                        ? get(groupValues, key)\n                                        : value.value;\n                                    return {\n                                        inherited: value.inherited,\n                                        value: newValue\n                                    };\n                                } else {\n                                    return value;\n                                }\n                            });\n                            this.values.raw.coreOAuth2ClientConfig.agentgroup = selectedAgentgroup;\n\n                            /**\n                             * The group has changed so the user is on the tab where group selection takes place.\n                             * Thus we need to update the data contained within the editor as well.\n                             */\n                            renderJSONSchemaView(selectedAgentgroup, this.values.raw[this.getSection()]);\n                        });\n                    }\n                } else {\n                    this.values = this.values.mapProperties((value, key) => {\n                        return hasInheritance(this.schema, key) ? { inherited: false, value: value.value } : value;\n                    });\n                    this.values.raw.coreOAuth2ClientConfig.agentgroup = selectedAgentgroup;\n                    renderJSONSchemaView(selectedAgentgroup, this.values.raw[this.getSection()]);\n                }\n            };\n\n            const groupId = get(this.values.raw, \"coreOAuth2ClientConfig.agentgroup\");\n            this.getGroupValues(groupId, realm).then((groupValues) => {\n                this.defaultValues = new JSONValues(groupValues);\n\n                this.parentRender(() => {\n                    const tabs = createTabs(this.schema);\n                    this.subview = new TabComponent({\n                        tabs,\n                        createBody: (id) => {\n                            // No inheritance informaton should be displayed when a client does not belong to a group\n                            const agentgroupValue = get(this.values.raw, \"coreOAuth2ClientConfig.agentgroup\");\n                            const view = new FlatJSONSchemaView({\n                                hideInheritance: isEmpty(agentgroupValue),\n                                schema: new JSONSchema(this.schema.raw.properties[id]),\n                                values: new JSONValues(cloneDeep(this.values.raw)[id]),\n                                onRendered: () => {\n                                    view.watch(\"root.agentgroup\", onGroupIdChange);\n                                }\n                            });\n                            return view;\n                        },\n                        createFooter: () => new PartialBasedView({ partial: \"form/_JSONSchemaFooter\" })\n                    });\n                    const options = {\n                        properties: this.schema.raw.properties,\n                        onChange: (id, value) => {\n                            this.subview.setTabId(id);\n                            setFocusToFoundInput(this.$el.find(`[data-schemapath=\"root.${value}\"]`));\n                        }\n                    };\n                    this.$el.find(\"[data-tab-search]\").append(new TabSearch(options).render().$el);\n\n                    this.subview.setElement(\"[data-json-form]\");\n                    this.subview.render();\n                });\n            });\n        });\n    }\n\n    getSection () {\n        return this.subview.getTabId();\n    }\n\n    updateValues () {\n        this.values = this.values.extend({\n            [this.getSection()]: this.getJSONSchemaView().getData()\n        });\n    }\n\n    onSave () {\n        if (!this.getJSONSchemaView().isValid()) {\n            Messages.addMessage({\n                message: t(\"common.form.validation.errorsNotSaved\"), type: Messages.TYPE_DANGER\n            });\n            return;\n        }\n\n        this.updateValues();\n\n        const valuesWithoutNullPasswords = this.values.removeNullPasswords(this.schema);\n\n        update(this.realm, OAUTH2_CLIENT, valuesWithoutNullPasswords.raw, this.data.id).then(() => {\n            Messages.addMessage({ message: t(\"config.messages.AppMessages.changesSaved\") });\n        }, (response) => {\n            Messages.addMessage({ response, type: Messages.TYPE_DANGER });\n        });\n    }\n\n    toggleInheritance (event) {\n        const target = event.currentTarget;\n        const removeJSONSchemaRootPrefix = (key) => key.slice(5);\n        const propertySchemaPath = removeJSONSchemaRootPrefix(target.getAttribute(\"data-schemapath\"));\n        const nextInheritedValue = !(target.getAttribute(\"data-inherit-value\") === \"true\");\n        const nextPropValue = nextInheritedValue\n            ? this.defaultValues.raw[this.getSection()][propertySchemaPath]\n            : this.values.raw[this.getSection()][propertySchemaPath].value;\n\n        this.getJSONSchemaView().subview.toggleInheritance(propertySchemaPath, nextPropValue, nextInheritedValue);\n        this.values = this.values.addValueForKey(this.getSection(), propertySchemaPath, {\n            inherited: nextInheritedValue,\n            value: nextPropValue\n        });\n    }\n\n    onDelete (event) {\n        event.preventDefault();\n\n        FormHelper.showConfirmationBeforeDeleting({\n            message: t(\"console.common.confirmDeleteSelected\")\n        }, () => {\n            remove(this.realm, OAUTH2_CLIENT, [this.data.id]).then(() => {\n                Messages.addMessage({ message: t(\"config.messages.AppMessages.changesSaved\") });\n\n                Router.routeTo(Router.configuration.routes.realmsApplicationsOAuth2, {\n                    args: [encodeURIComponent(this.realm)], trigger: true\n                });\n            }, (model, response) => {\n                Messages.addMessage({ response, type: Messages.TYPE_DANGER });\n            });\n        });\n    }\n}\n\nexport default EditOAuth2Client;\n"]}