{"version":3,"sources":["../../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authentication/trees/edit/tree/Connection.jsx"],"names":["MIN_CONTROL_POINT_LENGTH","MAX_VERTICAL_DISTANCE","bezierCurve","start","startCp","center","endCp","end","centerControlPoints","x","y","startControlPoints","endControlPoints","calculateOffsetX","strength","minXLength","Math","abs","offSetX","createFourPointBezierCurve","clearance","height","width","offsetX","createSixPointBezierCurve","Connection","isNew","isInputForSelectedNode","isOutputForSelectedNode","isWithinVerticalRange","isEndNodeBehindStartNode","pathString","id","propTypes","shape","string","number","isRequired","bool"],"mappings":"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","file":"Connection.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\nimport classNames from \"classnames\";\nimport React, { PropTypes } from \"react\";\n\nconst MIN_CONTROL_POINT_LENGTH = 50;\nconst MAX_VERTICAL_DISTANCE = 150;\n\nconst bezierCurve = ({ start, startCp, center, endCp, end }) => {\n    const centerControlPoints = center ? `${center.x} ${center.y} , ${center.x} ${center.y} S` : \"\";\n    const startControlPoints = `M${start.x} ${start.y} C${startCp.x} ${startCp.y}, `;\n    const endControlPoints = `${endCp.x} ${endCp.y}, ${end.x} ${end.y}`;\n\n    return `${startControlPoints}${centerControlPoints}${endControlPoints}`;\n};\n\nconst calculateOffsetX = (start, end) => {\n    const strength = 0.2;\n    let minXLength = MIN_CONTROL_POINT_LENGTH;\n    if (Math.abs(start.y - end.y) < MIN_CONTROL_POINT_LENGTH) {\n        // reduce the minXLength if the nodes are very close together\n        minXLength = Math.abs(start.y - end.y);\n    }\n    const offSetX = Math.abs((start.x - end.x) * strength);\n\n    return offSetX < minXLength ? minXLength : offSetX;\n};\n\nconst createFourPointBezierCurve = (start, end) => {\n    const clearance = (start.height + start.width) / 2 || 0;\n    const offsetX = calculateOffsetX(start, end);\n    const startCp = {\n        x: start.x + offsetX,\n        y: start.y + clearance\n    };\n    const endCp = {\n        x: end.x - offsetX,\n        y: end.y + MIN_CONTROL_POINT_LENGTH\n    };\n\n    return bezierCurve({ start, startCp, endCp, end });\n};\n\nconst createSixPointBezierCurve = (start, end) => {\n    const offsetX = calculateOffsetX(start, end);\n    const center = {\n        x:start.x - (start.x - end.x) / 2,\n        y:start.y - (start.y - end.y) / 2\n    };\n    const startCp = {\n        x: start.x + offsetX,\n        y: start.y\n    };\n    const endCp = {\n        x: end.x - offsetX,\n        y: end.y\n    };\n\n    return bezierCurve({ start, startCp, center, endCp, end });\n};\n\nconst Connection = ({ end, isNew, start, isInputForSelectedNode, isOutputForSelectedNode }) => {\n    const isWithinVerticalRange = Math.abs(start.y - end.y) < MAX_VERTICAL_DISTANCE;\n    const isEndNodeBehindStartNode = end.x + start.width <= start.x;\n    const pathString = isEndNodeBehindStartNode && isWithinVerticalRange\n        ? createFourPointBezierCurve(start, end) : createSixPointBezierCurve(start, end);\n\n    return (\n        <path\n            className={ classNames({\n                \"authtree-connector\": true,\n                \"authtree-connector-new\": isNew,\n                \"authtree-connector-selected-node-input\": isInputForSelectedNode,\n                \"authtree-connector-selected-node-output\": isOutputForSelectedNode\n            }) }\n            d={ pathString }\n            id={ end.id ? `connection-${start.id}-${end.id}` : `connection-${start.id}` }\n        />\n    );\n};\n\nConnection.propTypes = {\n    end: PropTypes.shape({\n        /**\n         * end id not required as this connection might be being made (being dragged out),\n         * where there is a start node but no end node yet.\n         */\n        id: PropTypes.string,\n        height: PropTypes.number.isRequired,\n        width: PropTypes.number.isRequired,\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired\n    }).isRequired,\n    isInputForSelectedNode: PropTypes.bool.isRequired,\n    isNew: PropTypes.bool.isRequired,\n    isOutputForSelectedNode: PropTypes.bool.isRequired,\n    start: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired\n    }).isRequired\n};\n\nexport default Connection;\n"]}