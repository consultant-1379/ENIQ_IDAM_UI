{"version":3,"sources":["../../../../../../../XUI/org/forgerock/commons/ui/user-1/profile/ConfirmPasswordDialog.js"],"names":["define","$","BootstrapDialogView","ValidatorsManager","ConfirmPasswordDialog","extend","contentTemplate","events","submitForm","e","preventDefault","completedCallback","$el","find","val","dialog","close","errorsHandlers","status","title","t","actions","id","label","cssClass","disabled","action","options","onshown","element","$modal","rebind","bindValidators","render","changedProtected","data","show","validateForm","length","prop","addClass","removeClass"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,QADI,EAEJ,gEAFI,EAGJ,wDAHI,CAAP,EAIE,UAASC,CAAT,EAAYC,mBAAZ,EAAiCC,iBAAjC,EAAoD;AACnD,QAAIC,wBAAwBF,oBAAoBG,MAApB,CAA2B;AACnDC,yBAAiB,mDADkC;AAEnDC,gBAAQ;AACJ,0BAAc,YADV;AAEJ,2CAA+B,YAF3B;AAGJ,uCAA2B,cAHvB;AAIJ,sCAA0B;AAJtB,SAF2C;AAQnDC,oBAAY,oBAAUC,CAAV,EAAa;AACrB,gBAAIA,CAAJ,EAAO;AACHA,kBAAEC,cAAF;AACH;;AAED,gBAAI,KAAKC,iBAAT,EAA4B;AACxB,qBAAKA,iBAAL,CAAuB,KAAKC,GAAL,CAASC,IAAT,CAAc,kBAAd,EAAkCC,GAAlC,EAAvB;AACH;AACD,iBAAKC,MAAL,CAAYC,KAAZ;AACH,SAjBkD;AAkBnDC,wBAAgB;AACZ,2BAAe,EAAEC,QAAQ,KAAV;AADH,SAlBmC;AAqBnDC,eAAO,iBAAU;AAAE,mBAAOlB,EAAEmB,CAAF,CAAI,6BAAJ,CAAP;AAA4C,SArBZ;AAsBnDC,iBAAS,CAAC;AACNC,gBAAI,WADE;AAENC,mBAAO,iBAAU;AAAE,uBAAOtB,EAAEmB,CAAF,CAAI,oBAAJ,CAAP;AAAmC,aAFhD;AAGNI,sBAAU,aAHJ;AAINC,sBAAU,IAJJ;AAKNC,oBAAQ,gBAASX,MAAT,EAAiB;AACrBA,uBAAOY,OAAP,CAAenB,UAAf;AACH;AAPK,SAAD,CAtB0C;AA+BnDoB,iBAAS,iBAASb,MAAT,EAAgB;AACrB,iBAAKA,MAAL,GAAcA,MAAd;AACA,iBAAKc,OAAL,GAAed,OAAOe,MAAtB;AACA,iBAAKC,MAAL;AACAhB,mBAAOe,MAAP,CAAcjB,IAAd,CAAmB,0BAAnB,EAA+CC,GAA/C,CAAmD,EAAnD;AACAX,8BAAkB6B,cAAlB,CAAiCjB,OAAOe,MAAxC;AACH,SArCkD;AAsCnDG,gBAAQ,gBAASC,gBAAT,EAA2BvB,iBAA3B,EAA8C;AAClD,iBAAKwB,IAAL,CAAUD,gBAAV,GAA6BA,gBAA7B;AACA,iBAAKvB,iBAAL,GAAyBA,iBAAzB;AACA,iBAAKyB,IAAL;AACH,SA1CkD;AA2CnDC,sBAAc,wBAAU;AACpB,gBAAI,KAAKzB,GAAL,CAASC,IAAT,CAAc,kBAAd,EAAkCC,GAAlC,GAAwCwB,MAAxC,KAAmD,CAAvD,EAA0D;AACtD,qBAAK1B,GAAL,CAASC,IAAT,CAAc,YAAd,EAA4B0B,IAA5B,CAAiC,UAAjC,EAA6C,IAA7C,EAAmDC,QAAnD,CAA4D,UAA5D;AACH,aAFD,MAEO;AACH,qBAAK5B,GAAL,CAASC,IAAT,CAAc,YAAd,EAA4B0B,IAA5B,CAAiC,UAAjC,EAA6C,KAA7C,EAAoDE,WAApD,CAAgE,UAAhE;AACH;AACJ;AAjDkD,KAA3B,CAA5B;;AAoDA,WAAO,IAAIrC,qBAAJ,EAAP;AACH,CA1DA","file":"ConfirmPasswordDialog.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2015-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\",\r\n    \"org/forgerock/commons/ui/common/components/BootstrapDialogView\",\r\n    \"org/forgerock/commons/ui/common/main/ValidatorsManager\"\r\n], function($, BootstrapDialogView, ValidatorsManager) {\r\n    var ConfirmPasswordDialog = BootstrapDialogView.extend({\r\n        contentTemplate: \"templates/user/ConfirmPasswordDialogTemplate.html\",\r\n        events: {\r\n            \"onValidate\": \"onValidate\",\r\n            \"submit #confirmPasswordForm\": \"submitForm\",\r\n            \"change #currentPassword\": \"validateForm\",\r\n            \"keyup #currentPassword\": \"validateForm\"\r\n        },\r\n        submitForm: function (e) {\r\n            if (e) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            if (this.completedCallback) {\r\n                this.completedCallback(this.$el.find(\"#currentPassword\").val());\r\n            }\r\n            this.dialog.close();\r\n        },\r\n        errorsHandlers: {\r\n            \"Bad Request\": { status: \"400\" }\r\n        },\r\n        title: function(){ return $.t(\"common.user.confirmPassword\"); },\r\n        actions: [{\r\n            id: \"btnUpdate\",\r\n            label: function(){ return $.t(\"common.form.update\"); },\r\n            cssClass: \"btn-primary\",\r\n            disabled: true,\r\n            action: function(dialog) {\r\n                dialog.options.submitForm();\r\n            }\r\n        }],\r\n        onshown: function(dialog){\r\n            this.dialog = dialog;\r\n            this.element = dialog.$modal;\r\n            this.rebind();\r\n            dialog.$modal.find(\".modal-body :input:first\").val(\"\");\r\n            ValidatorsManager.bindValidators(dialog.$modal);\r\n        },\r\n        render: function(changedProtected, completedCallback) {\r\n            this.data.changedProtected = changedProtected;\r\n            this.completedCallback = completedCallback;\r\n            this.show();\r\n        },\r\n        validateForm: function(){\r\n            if (this.$el.find(\"#currentPassword\").val().length === 0) {\r\n                this.$el.find(\"#btnUpdate\").prop(\"disabled\", true).addClass(\"disabled\");\r\n            } else {\r\n                this.$el.find(\"#btnUpdate\").prop(\"disabled\", false).removeClass(\"disabled\");\r\n            }\r\n        }\r\n    });\r\n\r\n    return new ConfirmPasswordDialog();\r\n});"]}