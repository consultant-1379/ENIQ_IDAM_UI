{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/services/SubSchemaListView.js"],"names":["define","$","_","Backbone","Messages","EventManager","Router","Constants","ServicesService","FormHelper","UIUtils","Promise","deleteSubSchema","realmPath","type","subSchemaType","subSchemaInstance","subSchema","instance","remove","SubschemaListView","View","extend","template","events","initialize","options","render","all","getAll","getCreatables","then","response","data","merge","instances","creatables","fillTemplateWithData","html","$el","onDelete","event","preventDefault","target","currentTarget","closest","showConfirmationBeforeDeleting","message","t","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST","addMessage","TYPE_DANGER"],"mappings":"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","file":"SubSchemaListView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"backbone\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/admin/services/realm/ServicesService\",\n    \"org/forgerock/openam/ui/admin/utils/FormHelper\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/common/util/Promise\"\n], ($, _, Backbone, Messages, EventManager, Router, Constants, ServicesService, FormHelper, UIUtils, Promise) => {\n    function deleteSubSchema (realmPath, type, subSchemaType, subSchemaInstance) {\n        return ServicesService.type.subSchema.instance.remove(realmPath, type, subSchemaType, subSchemaInstance);\n    }\n\n    const SubschemaListView = Backbone.View.extend({\n        template: \"templates/admin/views/realms/services/SubSchemaListTemplate.html\",\n        events: {\n            \"click [data-subschema-delete]\" : \"onDelete\"\n        },\n        initialize (options) {\n            this.options = options;\n        },\n        render () {\n            Promise.all([\n                ServicesService.type.subSchema.instance.getAll(this.options.realmPath, this.options.type),\n                ServicesService.type.subSchema.type.getCreatables(this.options.realmPath, this.options.type)\n            ]).then((response) => {\n                const data = _.merge({}, this.options, {\n                    instances: response[0][0],\n                    creatables:response[1][0]\n                });\n\n                UIUtils.fillTemplateWithData(this.template, data, (html) => {\n                    this.$el.html(html);\n                });\n            });\n\n            return this;\n        },\n        onDelete (event) {\n            event.preventDefault();\n\n            const target = $(event.currentTarget);\n            const subSchemaInstance = target.closest(\"tr\").data(\"subschemaId\");\n            const subSchemaType = target.closest(\"tr\").data(\"subschemaType\");\n\n            FormHelper.showConfirmationBeforeDeleting({\n                message: $.t(\"console.services.subSchema.confirmDeleteSelected\")\n            }, () => {\n                deleteSubSchema(this.options.realmPath, this.options.type, subSchemaType, subSchemaInstance)\n                    .then(() => {\n                        EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"changesSaved\");\n                        this.render();\n                    }, (response) => Messages.addMessage({ response, type: Messages.TYPE_DANGER }));\n            });\n        }\n    });\n\n    return SubschemaListView;\n});\n"]}