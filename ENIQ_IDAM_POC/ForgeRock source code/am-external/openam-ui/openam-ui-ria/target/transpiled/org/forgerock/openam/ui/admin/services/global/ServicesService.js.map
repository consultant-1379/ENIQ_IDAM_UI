{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/admin/services/global/ServicesService.js"],"names":["define","$","_","AbstractDelegate","Constants","JSONSchema","JSONValues","fetchUrl","Promise","obj","host","context","getServiceSchema","type","options","serviceCall","merge","url","default","realm","headers","then","response","getServiceSubSchema","serviceType","subSchemaType","getServiceSubSubSchema","subSchemaInstance","subSubSchemaType","instance","getAll","result","map","item","_type","name","sortBy","value","get","getInstance","all","schema","values","getInitialState","getTemplate","update","data","create","JSON","stringify","getCreatables","subSchema","remove"],"mappings":"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","file":"ServicesService.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\n/**\n * @module org/forgerock/openam/ui/admin/services/global/ServicesService\n */\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/main/AbstractDelegate\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/common/models/JSONSchema\",\n    \"org/forgerock/openam/ui/common/models/JSONValues\",\n    \"org/forgerock/openam/ui/common/services/fetchUrl\",\n    \"org/forgerock/openam/ui/common/util/Promise\",\n    \"org/forgerock/openam/ui/common/util/RealmHelper\"\n], ($, _, AbstractDelegate, Constants, JSONSchema, JSONValues, fetchUrl, Promise) => {\n    const obj = new AbstractDelegate(`${Constants.host}${Constants.context}/json`);\n\n    const getServiceSchema = function (type, options) {\n        return obj.serviceCall(_.merge({\n            url: fetchUrl.default(`/global-config/services/${type}?_action=schema`, { realm: false }),\n            headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n            type: \"POST\"\n        }, options)).then((response) => {\n            return new JSONSchema(response);\n        });\n    };\n    const getServiceSubSchema = function (serviceType, subSchemaType) {\n        return obj.serviceCall({\n            url: fetchUrl.default(\n                `/global-config/services/${serviceType}/${subSchemaType}?_action=schema`, { realm: false }),\n            headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n            type: \"POST\"\n        }).then((response) => new JSONSchema(response));\n    };\n    const getServiceSubSubSchema = function (serviceType, subSchemaType, subSchemaInstance, subSubSchemaType) {\n        return obj.serviceCall({\n            url: fetchUrl.default(\n                `/global-config/services/${serviceType}/${subSchemaType}/${subSchemaInstance}/${subSubSchemaType}` +\n                \"?_action=schema\",\n                { realm: false }),\n            headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n            type: \"POST\"\n        }).then((response) => new JSONSchema(response));\n    };\n\n    obj.instance = {\n        getAll () { // TODO this is the only difference in GLOBAL and REALM service rest calls\n            return obj.serviceCall({\n                url: fetchUrl.default(\"/global-config/services?_action=nextdescendents&forUI=true\", { realm: false }),\n                type: \"POST\",\n                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" }\n            }).then((response) =>\n                _(response.result).map((item) => {\n                    item[\"name\"] = item._type.name;\n                    return item;\n                }).sortBy(\"name\").value()\n            );\n        },\n        get (type, options) {\n            const getInstance = () => obj.serviceCall(_.merge({\n                url: fetchUrl.default(`/global-config/services/${type}`, { realm: false }),\n                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" }\n            }, options));\n\n            return Promise.all([getServiceSchema(type, options), getInstance()]).then((response) => ({\n                name: response[1][0]._type.name,\n                schema: response[0],\n                values: new JSONValues(response[1][0])\n            }));\n        },\n        getInitialState (type) {\n            function getTemplate () {\n                return obj.serviceCall({\n                    url: fetchUrl.default(`/global-config/services/${type}?_action=template`, { realm: false }),\n                    headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                    type: \"POST\"\n                }).then((response) => new JSONValues(response));\n            }\n\n            return Promise.all([getServiceSchema(type), getTemplate()]).then((response) => ({\n                schema: response[0],\n                values: response[1]\n            }));\n        },\n        update (type, data) {\n            return obj.serviceCall({\n                url: fetchUrl.default(`/global-config/services/${type}`, { realm: false }),\n                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                type: \"PUT\",\n                data\n            }).then((response) => new JSONValues(response));\n        },\n        create (type, data) {\n            return obj.serviceCall({\n                url: fetchUrl.default(`/global-config/services/${type}?_action=create`, { realm: false }),\n                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                type: \"POST\",\n                data: JSON.stringify(data)\n            });\n        }\n    };\n\n    obj.type = {\n        getCreatables () {\n            return obj.serviceCall({\n                url: fetchUrl.default(\"/global-config/services?_action=getCreatableTypes&forUI=true\", { realm: false }),\n                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                type: \"POST\"\n            }).then((response) => _.sortBy(response.result, \"name\"));\n        },\n        subSchema: {\n            type: {\n                getAll (serviceType) {\n                    return obj.serviceCall({\n                        url: fetchUrl.default(\n                            `/global-config/services/${serviceType}?_action=getAllTypes`, { realm: false }),\n                        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                        type: \"POST\"\n                    }).then((response) => response.result);\n                },\n                getCreatables (serviceType) {\n                    return obj.serviceCall({\n                        url: fetchUrl.default(\n                            `/global-config/services/${serviceType}?_action=getCreatableTypes&forUI=true`,\n                            { realm: false }),\n                        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                        type: \"POST\"\n                    }).then((response) => _.sortBy(response.result, \"name\"));\n                },\n                subSchema: {\n                    type: {\n                        getAll (serviceType, subSchemaType) {\n                            return obj.serviceCall({\n                                url: fetchUrl.default(\n                                    `/global-config/services/${serviceType}/${subSchemaType}?_action=getAllTypes`,\n                                    { realm: false }),\n                                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                                type: \"POST\"\n                            }).then((response) => response.result);\n                        },\n                        getCreatables (serviceType, subSchemaType, subSchemaInstance) {\n                            return obj.serviceCall({\n                                url: fetchUrl.default(\n                                    `/global-config/services/${serviceType}/${subSchemaType}/${subSchemaInstance}` +\n                                    \"?_action=getCreatableTypes&forUI=true\",\n                                    { realm: false }),\n                                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                                type: \"POST\"\n                            }).then((response) => _.sortBy(response.result, \"name\"));\n                        }\n                    },\n                    instance: {\n                        getAll (serviceType, subSchemaType, subSchemaInstance) {\n                            return obj.serviceCall({\n                                url: fetchUrl.default(\n                                    `/global-config/services/${serviceType}/${subSchemaType}/${subSchemaInstance}` +\n                                    \"?_action=nextdescendents\",\n                                    { realm: false }),\n                                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                                type: \"POST\"\n                            }).then((response) => _.sortBy(response.result, \"_id\"));\n                        },\n                        get (serviceType, subSchemaType, subSchemaInstance, subSubSchemaType) {\n                            function getInstance () {\n                                return obj.serviceCall({\n                                    url: fetchUrl.default(\n                                        \"/global-config/services/\" +\n                                        `${serviceType}/${subSchemaType}/${subSchemaInstance}/${subSubSchemaType}`,\n                                        { realm: false }),\n                                    headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" }\n                                }).then((response) => new JSONValues(response));\n                            }\n\n                            return Promise.all([getServiceSubSubSchema(serviceType, subSchemaType, subSchemaInstance,\n                                subSubSchemaType), getInstance()])\n                                .then((response) => ({\n                                    schema: response[0],\n                                    values: response[1]\n                                }));\n                        },\n                        update (serviceType, subSchemaType, subSchemaInstance, subSubSchemaType, data) {\n                            return obj.serviceCall({\n                                url: fetchUrl.default(\n                                    \"/global-config/services/\" +\n                                    `${serviceType}/${subSchemaType}/${subSchemaInstance}/${subSubSchemaType}`,\n                                    { realm: false }),\n                                headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                                type: \"PUT\",\n                                data\n                            });\n                        }\n                    }\n                }\n            },\n            instance: {\n                getAll (serviceType) {\n                    return obj.serviceCall({\n                        url: fetchUrl.default(\n                            `/global-config/services/${serviceType}?_action=nextdescendents&forUI=true`,\n                            { realm: false }),\n                        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                        type: \"POST\"\n                    }).then((response) => _.sortBy(response.result, \"_id\"));\n                },\n                get (serviceType, subSchemaType, subSchemaInstance) {\n                    function getInstance () {\n                        return obj.serviceCall({\n                            url: fetchUrl.default(\n                                `/global-config/services/${serviceType}/${subSchemaType}/${subSchemaInstance}`,\n                                { realm: false }),\n                            headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" }\n                        }).then((response) => new JSONValues(response));\n                    }\n\n                    return Promise.all([getServiceSubSchema(serviceType, subSchemaType), getInstance()])\n                        .then((response) => ({\n                            schema: response[0],\n                            values: response[1]\n                        }));\n                },\n\n                getInitialState (serviceType, subSchemaType) {\n                    function getTemplate (serviceType, subSchemaType) {\n                        return obj.serviceCall({\n                            url: fetchUrl.default(\n                                `/global-config/services/${serviceType}/${subSchemaType}?_action=template`,\n                                { realm: false }),\n                            headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                            type: \"POST\"\n                        }).then((response) => new JSONValues(response));\n                    }\n\n                    return Promise.all([\n                        getServiceSubSchema(serviceType, subSchemaType),\n                        getTemplate(serviceType, subSchemaType)\n                    ]).then((response) => ({\n                        schema: response[0],\n                        values: response[1]\n                    }));\n                },\n\n                remove (serviceType, subSchemaType, subSchemaInstance) {\n                    return obj.serviceCall({\n                        url: fetchUrl.default(\n                            `/global-config/services/${serviceType}/${subSchemaType}/${subSchemaInstance}`,\n                            { realm: false }),\n                        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                        type: \"DELETE\"\n                    });\n                },\n\n                update (serviceType, subSchemaType, subSchemaInstance, data) {\n                    return obj.serviceCall({\n                        url: fetchUrl.default(\n                            `/global-config/services/${serviceType}/${subSchemaType}/${subSchemaInstance}`,\n                            { realm: false }),\n                        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                        type: \"PUT\",\n                        data\n                    });\n                },\n\n                create (serviceType, subSchemaType, data) {\n                    return obj.serviceCall({\n                        url: fetchUrl.default(\n                            `/global-config/services/${serviceType}/${subSchemaType}?_action=create`, { realm: false }),\n                        headers: { \"Accept-API-Version\": \"protocol=1.0,resource=1.0\" },\n                        type: \"POST\",\n                        data: JSON.stringify(data)\n                    });\n                }\n            }\n        }\n    };\n\n    return obj;\n});\n"]}