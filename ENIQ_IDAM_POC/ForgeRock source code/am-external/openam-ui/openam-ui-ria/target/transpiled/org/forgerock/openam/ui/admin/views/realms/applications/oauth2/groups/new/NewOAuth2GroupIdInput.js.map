{"version":3,"sources":["../../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/applications/oauth2/groups/new/NewOAuth2GroupIdInput.jsx"],"names":["NewOAuth2GroupIdInput","groupId","onGroupIdChange","handleGroupIdChange","event","target","value","propTypes","string","isRequired","func"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAqBA,QAAMA,wBAAwB,SAAxBA,qBAAwB,OAAkC;AAAA,YAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,YAAtBC,eAAsB,QAAtBA,eAAsB;;AAC5D,YAAMC,sBAAsB,SAAtBA,mBAAsB,CAACC,KAAD;AAAA,mBAAWF,gBAAgBE,MAAMC,MAAN,CAAaC,KAA7B,CAAX;AAAA,SAA5B;;AAEA,eACI;AAAA;AAAA,cAAM,gBAAN;AACI;AAAA;AAAA,kBAAW,WAAY,sBAAS,SAAT,CAAvB;AACI;AAAA;AAAA,sBAAc,WAAU,UAAxB;AACM,oCAAE,gDAAF;AADN,iBADJ;AAII;AAAA;AAAA,sBAAK,IAAK,CAAV;AACI;AACI,kCAAWH,mBADf;AAEI,8BAAK,MAFT;AAGI,+BAAQF;AAHZ;AADJ;AAJJ;AADJ,SADJ;AAgBH,KAnBD;;AAqBAD,0BAAsBO,SAAtB,GAAkC;AAC9BN,iBAAS,iBAAUO,MAAV,CAAiBC,UADI;AAE9BP,yBAAiB,iBAAUQ,IAAV,CAAeD;AAFF,KAAlC;;sBAKeT,qB","file":"NewOAuth2GroupIdInput.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { Col, ControlLabel, FormControl, Form, FormGroup } from \"react-bootstrap\";\nimport { t } from \"i18next\";\nimport { uniqueId } from \"lodash\";\nimport React, { PropTypes } from \"react\";\n\nconst NewOAuth2GroupIdInput = ({ groupId, onGroupIdChange }) => {\n    const handleGroupIdChange = (event) => onGroupIdChange(event.target.value);\n\n    return (\n        <Form horizontal>\n            <FormGroup controlId={ uniqueId(\"groupId\") }>\n                <ControlLabel className=\"col-sm-4\">\n                    { t(\"console.applications.oauth2.groups.new.groupId\") }\n                </ControlLabel>\n                <Col sm={ 6 }>\n                    <FormControl\n                        onChange={ handleGroupIdChange }\n                        type=\"text\"\n                        value={ groupId }\n                    />\n                </Col>\n            </FormGroup>\n        </Form>\n    );\n};\n\nNewOAuth2GroupIdInput.propTypes = {\n    groupId: PropTypes.string.isRequired,\n    onGroupIdChange: PropTypes.func.isRequired\n};\n\nexport default NewOAuth2GroupIdInput;\n"]}