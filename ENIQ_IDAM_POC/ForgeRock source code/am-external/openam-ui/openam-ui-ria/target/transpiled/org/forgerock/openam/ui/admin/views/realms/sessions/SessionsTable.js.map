{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/sessions/SessionsTable.jsx"],"names":["findOwnSession","dataList","find","data","sessionHandle","getState","local","session","SessionsTable","props","handleSelectAll","bind","handleSelectRow","handleDeleteRow","handleDeleteSelected","state","checked","ownSession","nextProps","updated","findByValues","pluck","setState","onSessionsInvalidate","e","target","without","concat","isChecked","includes","isAllChecked","numberOfDeletableSessions","length","username","map","propTypes","arrayOf","shape","idleTime","string","maxIdleExpirationTime","maxSessionExpirationTime","func","isRequired"],"mappings":"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","file":"SessionsTable.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\nimport _ from \"lodash\";\nimport { Button, ButtonToolbar, ControlLabel, Panel, Table } from \"react-bootstrap\";\nimport { t } from \"i18next\";\nimport Block from \"components/Block\";\nimport React, { Component, PropTypes } from \"react\";\nimport SessionsTableRow from \"./SessionsTableRow\";\nimport store from \"store/index\";\n\nconst findOwnSession = (dataList) =>\n    _.find(dataList, (data) => data.sessionHandle === store.getState().local.session.sessionHandle);\n\nclass SessionsTable extends Component {\n    constructor (props) {\n        super(props);\n        this.handleSelectAll = this.handleSelectAll.bind(this);\n        this.handleSelectRow = this.handleSelectRow.bind(this);\n        this.handleDeleteRow = this.handleDeleteRow.bind(this);\n        this.handleDeleteSelected = this.handleDeleteSelected.bind(this);\n        this.state = {\n            checked: [],\n            ownSession: findOwnSession(this.props.data)\n        };\n    }\n\n    componentWillReceiveProps (nextProps) {\n        const updated = _.findByValues(nextProps.data, \"sessionHandle\", _.pluck(this.state.checked, \"sessionHandle\"));\n        this.setState({\n            checked: updated,\n            ownSession: findOwnSession(nextProps.data)\n        });\n    }\n\n    handleDeleteRow (session) {\n        this.props.onSessionsInvalidate([session]);\n    }\n\n    handleDeleteSelected () {\n        this.props.onSessionsInvalidate(this.state.checked);\n    }\n\n    handleSelectAll (e) {\n        this.setState({\n            checked: e.target.checked\n                ? _.without(this.props.data, this.state.ownSession)\n                : []\n        });\n    }\n\n    handleSelectRow (session, checked) {\n        const updated = checked ? this.state.checked.concat(session) : _.without(this.state.checked, session);\n        this.setState({ checked: updated });\n    }\n\n    render () {\n        const isChecked = (session) => _.includes(this.state.checked, session);\n        const isAllChecked = () => {\n            const numberOfDeletableSessions =\n                this.state.ownSession ? this.props.data.length - 1 : this.props.data.length;\n            return numberOfDeletableSessions > 0 && this.state.checked.length === numberOfDeletableSessions;\n        };\n\n        return (\n            <div>\n                <ButtonToolbar className=\"page-toolbar\">\n                    <Button disabled={ !this.state.checked.length } onClick={ this.handleDeleteSelected }>\n                        <span className=\"fa fa-close\" /> { t(\"console.sessions.invalidateSelected\") }\n                    </Button>\n                </ButtonToolbar>\n\n                <Panel>\n                    <Block header={ this.props.username }>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th className=\"select-all-header-cell\">\n                                        <ControlLabel htmlFor=\"selectAll\" srOnly>\n                                            { t(\"common.form.selectAll\") }\n                                        </ControlLabel>\n                                        <input\n                                            checked={ isAllChecked() }\n                                            id=\"selectAll\"\n                                            onChange={ this.handleSelectAll }\n                                            type=\"checkbox\"\n                                        />\n                                    </th>\n                                    <th>{ t(\"console.sessions.table.headers.0\") }</th>\n                                    <th>{ t(\"console.sessions.table.headers.1\") }</th>\n                                    <th>{ t(\"console.sessions.table.headers.2\") }</th>\n                                    <th className=\"fr-col-btn-1\" />\n                                </tr>\n                            </thead>\n                            <tbody>\n                                { _.map(this.props.data, (session) => (\n                                    <SessionsTableRow\n                                        checked={ isChecked(session) }\n                                        data={ session }\n                                        onDelete={ this.handleDeleteRow }\n                                        onSelect={ this.handleSelectRow }\n                                        sessionHandle={ store.getState().local.session.sessionHandle }\n                                    />\n                                )) }\n                            </tbody>\n                        </Table>\n                    </Block>\n                </Panel>\n            </div>\n        );\n    }\n}\n\nSessionsTable.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        idleTime: PropTypes.string,\n        maxIdleExpirationTime: PropTypes.string,\n        maxSessionExpirationTime: PropTypes.string,\n        sessionHandle: PropTypes.string\n    })),\n    onSessionsInvalidate: PropTypes.func.isRequired,\n    username: PropTypes.string.isRequired\n};\n\nexport default SessionsTable;\n"]}