{"version":3,"sources":["../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/common/schema/NewSchemaComponent.js"],"names":["define","_","Backbone","Messages","Router","UIUtils","Promise","FlatJSONSchemaView","GroupedJSONSchemaView","JSONValues","View","extend","events","onIdChange","event","isEmpty","currentTarget","value","setCreateEnabled","enabled","$el","find","prop","initialize","data","listRoute","listRouteArgs","editRoute","editRouteArgs","template","getInitialState","createInstance","render","then","response","schema","options","values","showOnlyRequiredAndEmpty","isCollection","jsonSchemaView","compileTemplate","html","onSave","formData","cloneDeep","getData","instanceId","val","valuesWithoutNullPasswords","removeNullPasswords","raw","routeTo","args","encodeURIComponent","trigger","addMessage","type","TYPE_DANGER","onCancel"],"mappings":"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","file":"NewSchemaComponent.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\ndefine([\n    \"lodash\",\n    \"backbone\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/common/util/Promise\",\n    \"org/forgerock/openam/ui/common/views/jsonSchema/FlatJSONSchemaView\",\n    \"org/forgerock/openam/ui/common/views/jsonSchema/GroupedJSONSchemaView\",\n    \"org/forgerock/openam/ui/common/models/JSONValues\"\n], (_, Backbone, Messages, Router, UIUtils, Promise, FlatJSONSchemaView, GroupedJSONSchemaView, JSONValues) =>\n    Backbone.View.extend({\n        events: {\n            \"click [data-save]\": \"onSave\",\n            \"click [data-cancel]\": \"onCancel\",\n            \"keyup [data-instance-id]\": \"onIdChange\",\n            \"change [data-instance-id]\": \"onIdChange\"\n        },\n\n        onIdChange (event) {\n            const isEmpty = _.isEmpty(event.currentTarget.value);\n            this.setCreateEnabled(!isEmpty);\n        },\n\n        setCreateEnabled (enabled) {\n            this.$el.find(\"[data-save]\").prop(\"disabled\", !enabled);\n        },\n\n        // TODO: document the interface and put guard clauses\n        initialize ({\n            data,\n            listRoute,\n            listRouteArgs,\n            editRoute,\n            editRouteArgs,\n            template,\n            getInitialState,\n            createInstance\n        }) {\n            this.data = data;\n            this.listRoute = listRoute;\n            this.listRouteArgs = listRouteArgs;\n            this.editRoute = editRoute;\n            this.editRouteArgs = editRouteArgs;\n            this.template = template;\n            this.getInitialState = getInitialState;\n            this.createInstance = createInstance;\n        },\n\n        render () {\n            this.getInitialState().then((response) => {\n                this.schema = response.schema;\n                const options = {\n                    schema: this.schema,\n                    values: response.values,\n                    showOnlyRequiredAndEmpty: true\n                };\n\n                if (this.schema.isCollection()) {\n                    this.jsonSchemaView = new GroupedJSONSchemaView(options);\n                } else {\n                    this.jsonSchemaView = new FlatJSONSchemaView(options);\n                }\n\n                UIUtils.compileTemplate(this.template, this.data).then((html) => {\n                    this.$el.html(html);\n                    this.$el.find(\"[data-json-form]\").html(this.jsonSchemaView.render().$el);\n                });\n            });\n\n            return this;\n        },\n\n        onSave () {\n            const formData = _.cloneDeep(this.jsonSchemaView.getData());\n            const instanceId = this.$el.find(\"[data-instance-id]\").val();\n            formData[\"_id\"] = instanceId;\n            const values = new JSONValues(formData);\n            const valuesWithoutNullPasswords = values.removeNullPasswords(this.schema);\n\n            this.createInstance(valuesWithoutNullPasswords.raw).then(() => {\n                Router.routeTo(this.editRoute, {\n                    args: this.editRouteArgs(encodeURIComponent(instanceId)),\n                    trigger: true\n                });\n            }, (response) => { Messages.addMessage({ response, type: Messages.TYPE_DANGER }); });\n        },\n\n        onCancel () {\n            Router.routeTo(this.listRoute, { args: this.listRouteArgs, trigger: true });\n        }\n    })\n);\n"]}