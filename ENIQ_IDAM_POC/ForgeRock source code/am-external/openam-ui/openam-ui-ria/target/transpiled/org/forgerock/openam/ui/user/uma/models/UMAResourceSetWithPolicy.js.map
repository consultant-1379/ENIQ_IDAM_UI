{"version":3,"sources":["../../../../../../../../XUI/org/forgerock/openam/ui/user/uma/models/UMAResourceSetWithPolicy.js"],"names":["define","$","_","Backbone","BackboneRelational","Configuration","Constants","fetchUrl","UMAPolicy","UMAPolicyPermissionScope","RelationalModel","extend","fetch","d","Deferred","prototype","call","success","model","resolve","error","response","reject","promise","idAttribute","parse","policy","permissions","policyId","_id","scopes","map","scope","id","relations","type","HasOne","key","relatedModel","HasMany","includeInJSON","Model","toggleStarred","starredLabelId","isStarred","contains","get","set","label","push","urlRoot","host","context","default","loggedUser"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBAA,OAAO,CACH,QADG,EAEH,QAFG,EAGH,UAHG,EAIH,qBAJG,EAKH,oDALG,EAMH,gDANG,EAOH,kDAPG,EAQH,mDARG,EASH,kEATG,CAAP,EAUG,UAACC,CAAD,EAAIC,CAAJ,EAAOC,QAAP,EAAiBC,kBAAjB,EAAqCC,aAArC,EAAoDC,SAApD,EAA+DC,QAA/D,EAAyEC,SAAzE,EAAoFC,wBAApF,EAAiH;AAChH,WAAON,SAASO,eAAT,CAAyBC,MAAzB,CAAgC;AACnC;AACAC,aAFmC,mBAE1B;AACL,gBAAIC,IAAIZ,EAAEa,QAAF,EAAR;AACAX,qBAASO,eAAT,CAAyBK,SAAzB,CAAmCH,KAAnC,CAAyCI,IAAzC,CAA8C,IAA9C,EAAoD;AAChDC,uBADgD,mBACvCC,KADuC,EAChC;AACZL,sBAAEM,OAAF,CAAUD,KAAV;AACH,iBAH+C;AAIhDE,qBAJgD,iBAIzCF,KAJyC,EAIlCG,QAJkC,EAIxB;AACpBR,sBAAES,MAAF,CAASD,QAAT;AACH;AAN+C,aAApD;AAQA,mBAAOR,EAAEU,OAAF,EAAP;AACH,SAbkC;;AAcnCC,qBAAa,KAdsB;AAenCC,aAfmC,iBAe5BJ,QAf4B,EAelB;AACb;AACA,gBAAI,CAACA,SAASK,MAAd,EAAsB;AAClBL,yBAASK,MAAT,GAAkB,EAAlB;AACAL,yBAASK,MAAT,CAAgBC,WAAhB,GAA8B,EAA9B;AACH;AACDN,qBAASK,MAAT,CAAgBE,QAAhB,GAA2BP,SAASQ,GAApC;;AAEAR,qBAASS,MAAT,GAAkB5B,EAAE6B,GAAF,CAAMV,SAASS,MAAf,EAAuB,UAAUE,KAAV,EAAiB;AACtD,uBAAO,EAAEC,IAAID,KAAN,EAAP;AACH,aAFiB,CAAlB;;AAIA,mBAAOX,QAAP;AACH,SA5BkC;;AA6BnCa,mBAAW,CAAC;AACRC,kBAAMhC,SAASiC,MADP;AAERC,iBAAK,QAFG;AAGRC,0BAAc9B,SAHN;AAIRiB,mBAAO;AAJC,SAAD,EAKR;AACCU,kBAAMhC,SAASoC,OADhB;AAECF,iBAAK,QAFN;AAGCC,0BAAc7B,wBAHf;AAIC+B,2BAAerC,SAASsC,KAAT,CAAe1B,SAAf,CAAyBS,WAJzC;AAKCC,mBAAO;AALR,SALQ,CA7BwB;AAyCnCiB,qBAzCmC,yBAyCpBC,cAzCoB,EAyCJ;AAC3B,gBAAIC,YAAY1C,EAAE2C,QAAF,CAAW,KAAKC,GAAL,CAAS,QAAT,CAAX,EAA+BH,cAA/B,CAAhB;;AAEA,gBAAIC,SAAJ,EAAe;AACX,qBAAKG,GAAL,CAAS,QAAT,EAAmB7C,EAAEoB,MAAF,CAAS,KAAKwB,GAAL,CAAS,QAAT,CAAT,EAA6B,UAAUE,KAAV,EAAiB;AAC7D,2BAAOA,UAAUL,cAAjB;AACH,iBAFkB,CAAnB;AAGH,aAJD,MAIO;AACH,qBAAKG,GAAL,CAAS,QAAT,EAAmBG,IAAnB,CAAwBN,cAAxB;AACH;AACJ,SAnDkC;;AAoDnCO,sBAAY5C,UAAU6C,IAAtB,GAA6B7C,UAAU8C,OAAvC,aACI7C,SAAS8C,OAAT,aAA2BhD,cAAciD,UAAd,CAAyBR,GAAzB,CAA6B,UAA7B,CAA3B;AArD+B,KAAhC,CAAP;AAuDH,CAlED","file":"UMAResourceSetWithPolicy.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2015-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"backbone\",\n    \"backbone-relational\",\n    \"org/forgerock/commons/ui/common/main/Configuration\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/openam/ui/common/services/fetchUrl\",\n    \"org/forgerock/openam/ui/user/uma/models/UMAPolicy\",\n    \"org/forgerock/openam/ui/user/uma/models/UMAPolicyPermissionScope\"\n], ($, _, Backbone, BackboneRelational, Configuration, Constants, fetchUrl, UMAPolicy, UMAPolicyPermissionScope) => {\n    return Backbone.RelationalModel.extend({\n        // Promise version of fetch\n        fetch () {\n            var d = $.Deferred();\n            Backbone.RelationalModel.prototype.fetch.call(this, {\n                success (model) {\n                    d.resolve(model);\n                },\n                error (model, response) {\n                    d.reject(response);\n                }\n            });\n            return d.promise();\n        },\n        idAttribute: \"_id\",\n        parse (response) {\n            // Hardwiring the id across to the UMAPolicy object as the server doesn't provide it\n            if (!response.policy) {\n                response.policy = {};\n                response.policy.permissions = [];\n            }\n            response.policy.policyId = response._id;\n\n            response.scopes = _.map(response.scopes, function (scope) {\n                return { id: scope };\n            });\n\n            return response;\n        },\n        relations: [{\n            type: Backbone.HasOne,\n            key: \"policy\",\n            relatedModel: UMAPolicy,\n            parse: true\n        }, {\n            type: Backbone.HasMany,\n            key: \"scopes\",\n            relatedModel: UMAPolicyPermissionScope,\n            includeInJSON: Backbone.Model.prototype.idAttribute,\n            parse: true\n        }],\n        toggleStarred (starredLabelId) {\n            var isStarred = _.contains(this.get(\"labels\"), starredLabelId);\n\n            if (isStarred) {\n                this.set(\"labels\", _.reject(this.get(\"labels\"), function (label) {\n                    return label === starredLabelId;\n                }));\n            } else {\n                this.get(\"labels\").push(starredLabelId);\n            }\n        },\n        urlRoot: `${Constants.host}${Constants.context}/json${\n            fetchUrl.default(`/users/${Configuration.loggedUser.get(\"username\")}/oauth2/resources/sets`)}`\n    });\n});\n"]}