{"version":3,"sources":["../../../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/applications/oauth2/clients/new/NewOAuth2Client.jsx"],"names":["NewOAuth2Client","props","setRef","bind","schema","properties","coreOAuth2ClientConfig","defaultProperties","jsonSchemaView","template","hideInheritance","values","showOnlyRequiredAndEmpty","jsonForm","appendChild","render","el","element","handleCreate","onCreate","getData","footer","isCreateAllowed","content","isFetching","clientId","onClientIdChange","propTypes","string","isRequired","bool","func","objectOf","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA6BMA,e;;;AACF,iCAAaC,KAAb,EAAoB;AAAA;;AAAA,0IACVA,KADU;;AAEhB,kBAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,OAAd;AAFgB;AAGnB;;;;iDAEqB;AAClB;;;;AAIA,oBAAMC,SAAS,uBAAU,KAAKH,KAAL,CAAWG,MAArB,CAAf;AACA,oBAAIA,MAAJ,EAAY;AACRA,2BAAOC,UAAP,CAAkBC,sBAAlB,CAAyCC,iBAAzC,GAA6D,CACzD,eADyD,EAEzD,iBAFyD,EAGzD,QAHyD,CAA7D;AAKH;AACD,oBAAI,CAAC,KAAKC,cAAN,IAAwB,KAAKP,KAAL,CAAWQ,QAAvC,EAAiD;AAC7C,yBAAKD,cAAL,GAAsB,oCAA0B;AAC5CE,yCAAiB,IAD2B;AAE5CN,gCAAQ,yBAAeA,MAAf,CAFoC;AAG5CO,gCAAQ,yBAAe,KAAKV,KAAL,CAAWQ,QAA1B,CAHoC;AAI5CG,kDAA0B;AAJkB,qBAA1B,CAAtB;AAMA,yBAAKC,QAAL,CAAcC,WAAd,CAA0B,KAAKN,cAAL,CAAoBO,MAApB,GAA6BC,EAAvD;AACH;AACJ;;;mCAEOC,O,EAAS;AACb,qBAAKJ,QAAL,GAAgBI,OAAhB;AACH;;;qCAES;AAAA;;AACN,oBAAMC,eAAe,SAAfA,YAAe;AAAA,2BAAM,OAAKjB,KAAL,CAAWkB,QAAX,CAAoB,OAAKX,cAAL,CAAoBY,OAApB,EAApB,CAAN;AAAA,iBAArB;;AAEA,oBAAMC,SACF;AACI,mCAAgB,CAAC,KAAKpB,KAAL,CAAWqB,eADhC;AAEI,mCAAgBJ;AAFpB,kBADJ;;AAOA,oBAAIK,gBAAJ;;AAEA,oBAAI,KAAKtB,KAAL,CAAWuB,UAAf,EAA2B;AACvBD,8BAAU,sDAAV;AACH,iBAFD,MAEO;AACHA,8BACI;AAAA;AAAA;AACI;AACI,sCAAW,KAAKtB,KAAL,CAAWwB,QAD1B;AAEI,8CAAmB,KAAKxB,KAAL,CAAWyB;AAFlC,0BADJ;AAKI,+DAAK,KAAM,KAAKxB,MAAhB;AALJ,qBADJ;AASH;;AAED,uBACI;AAAA;AAAA;AACI,0EAAY,OAAQ,gBAAE,+CAAF,CAApB,GADJ;AAEI;AAAA;AAAA,0BAAO,QAASmB,MAAhB;AACME;AADN;AAFJ,iBADJ;AAQH;;;;;;AAGLvB,oBAAgB2B,SAAhB,GAA4B;AACxBF,kBAAU,iBAAUG,MAAV,CAAiBC,UADH;AAExBP,yBAAiB,iBAAUQ,IAAV,CAAeD,UAFR;AAGxBL,oBAAY,iBAAUM,IAAV,CAAeD,UAHH;AAIxBH,0BAAkB,iBAAUK,IAAV,CAAeF,UAJT;AAKxBV,kBAAU,iBAAUY,IAAV,CAAeF,UALD;AAMxBzB,gBAAQ,iBAAU4B,QAAV,CAAmB,iBAAUC,MAA7B,EAAqCJ,UANrB;AAOxBpB,kBAAU,iBAAUuB,QAAV,CAAmB,iBAAUC,MAA7B,EAAqCJ;AAPvB,KAA5B;;sBAUe7B,e","file":"NewOAuth2Client.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { cloneDeep } from \"lodash\";\nimport { Panel } from \"react-bootstrap\";\nimport { t } from \"i18next\";\nimport React, { Component, PropTypes } from \"react\";\n\nimport GroupedJSONSchemaView from \"org/forgerock/openam/ui/common/views/jsonSchema/GroupedJSONSchemaView\";\nimport JSONSchema from \"org/forgerock/openam/ui/common/models/JSONSchema\";\nimport JSONValues from \"org/forgerock/openam/ui/common/models/JSONValues\";\nimport Loading from \"components/Loading\";\nimport NewOAuth2ClientFooter from \"./NewOAuth2ClientFooter\";\nimport NewOAuth2ClientIdInput from \"./NewOAuth2ClientIdInput\";\nimport PageHeader from \"components/PageHeader\";\n\nclass NewOAuth2Client extends Component {\n    constructor (props) {\n        super(props);\n        this.setRef = this.setRef.bind(this);\n    }\n\n    componentDidUpdate () {\n        /**\n         * The properties redirectionUris, scopes/defaultScopes are helpful to users when creating an OAuth2.0 Client,\n         * however they are not set as required properties in the schema so they are manually added here.\n         */\n        const schema = cloneDeep(this.props.schema);\n        if (schema) {\n            schema.properties.coreOAuth2ClientConfig.defaultProperties = [\n                \"defaultScopes\",\n                \"redirectionUris\",\n                \"scopes\"\n            ];\n        }\n        if (!this.jsonSchemaView && this.props.template) {\n            this.jsonSchemaView = new GroupedJSONSchemaView({\n                hideInheritance: true,\n                schema: new JSONSchema(schema),\n                values: new JSONValues(this.props.template),\n                showOnlyRequiredAndEmpty: true\n            });\n            this.jsonForm.appendChild(this.jsonSchemaView.render().el);\n        }\n    }\n\n    setRef (element) {\n        this.jsonForm = element;\n    }\n\n    render () {\n        const handleCreate = () => this.props.onCreate(this.jsonSchemaView.getData());\n\n        const footer = (\n            <NewOAuth2ClientFooter\n                disableCreate={ !this.props.isCreateAllowed }\n                onCreateClick={ handleCreate }\n            />\n        );\n\n        let content;\n\n        if (this.props.isFetching) {\n            content = <Loading />;\n        } else {\n            content = (\n                <div>\n                    <NewOAuth2ClientIdInput\n                        clientId={ this.props.clientId }\n                        onClientIdChange={ this.props.onClientIdChange }\n                    />\n                    <div ref={ this.setRef } />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <PageHeader title={ t(\"console.applications.oauth2.clients.new.title\") } />\n                <Panel footer={ footer }>\n                    { content }\n                </Panel>\n            </div>\n        );\n    }\n}\n\nNewOAuth2Client.propTypes = {\n    clientId: PropTypes.string.isRequired,\n    isCreateAllowed: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    onClientIdChange: PropTypes.func.isRequired,\n    onCreate: PropTypes.func.isRequired,\n    schema: PropTypes.objectOf(PropTypes.object).isRequired,\n    template: PropTypes.objectOf(PropTypes.object).isRequired\n};\n\nexport default NewOAuth2Client;\n"]}