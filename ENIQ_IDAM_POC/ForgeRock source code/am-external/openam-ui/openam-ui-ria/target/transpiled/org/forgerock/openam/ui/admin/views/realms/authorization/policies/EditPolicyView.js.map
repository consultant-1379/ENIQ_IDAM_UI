{"version":3,"sources":["../../../../../../../../../../XUI/org/forgerock/openam/ui/admin/views/realms/authorization/policies/EditPolicyView.js"],"names":["define","Backbone","PanelFooter","$","_","Messages","AbstractView","EventManager","Router","Constants","reactify","UIUtils","PolicyModel","PolicySetModel","PoliciesService","FormHelper","CustomResponseAttributesView","StaticResponseAttributesView","SubjectResponseAttributesView","ManageEnvironmentsView","ManageSubjectsView","CreatedResourcesView","PolicyActionsView","PolicySettingsModal","SummaryView","unmountAt","React","extend","partials","validationFields","events","getAllResponseAttributes","model","attributes","resourceAttributes","union","staticAttrsView","getGroupedData","getAttrs","tabs","name","attr","action","initialize","prototype","call","preloadPartial","render","args","callback","policyName","renderCallback","data","realmPath","policySetName","policySetModelPromise","fetch","resourceTypesPromise","listResourceTypes","allSubjectsPromise","getSubjectConditions","allEnvironmentsPromise","getEnvironmentConditions","allUserAttributesPromise","getAllUserAttributes","headerActions","actionPartial","helpLink","template","listenTo","renderPolicy","newEntity","self","entity","cloneDeep","applicationName","options","status","active","text","icon","class","when","done","policySetModel","resourceTypes","availableResourceTypes","filter","result","item","contains","resourceTypeUuids","uuid","parentRender","buildResourceTypeSelection","allSubjects","allEnvironments","allUserAttributes","policySet","staticAttributes","where","type","userAttributes","customAttributes","difference","sortBy","availableEnvironments","findByValues","conditions","availableSubjects","subjects","resourceType","find","resourceTypeUuid","availableActions","getAvailableActionsForResourceType","availablePatterns","patterns","default","$el","tabdrop","createElement","onClick","sectionName","onSummarySectionClick","el","setActiveTab","tab","openSettingsModal","e","preventDefault","description","handleSubmit","updateAndSaveModel","bind","selectize","sortField","valueField","labelField","searchField","onChange","value","changeResourceType","each","actions","val","key","push","newPattern","resources","actionValues","updateFields","app","dataFields","dataField","field","getAttribute","checked","updateModel","activeTabId","activeTabIndex","index","activeTab","activeTabProperties","pick","saveTab","saveModel","settings","savePromise","save","routeTo","configuration","routes","realmsPolicyEdit","map","id","encodeURIComponent","trigger","sendEvent","EVENT_DISPLAY_MESSAGE_REQUEST","validationError","onDeleteClick","showConfirmationBeforeDeleting","t","deletePolicy","onSuccess","realmsPolicySetEdit","onError","response","addMessage","TYPE_DANGER","destroy","success","error","wait","renderFooter","summaryTabSelected","footer"],"mappings":"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","file":"EditPolicyView.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2014-2017 ForgeRock AS.\n */\n\ndefine([\n    \"backbone\",\n    \"components/PanelFooter\",\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/commons/ui/common/components/Messages\",\n    \"org/forgerock/commons/ui/common/main/AbstractView\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Router\",\n    \"org/forgerock/commons/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/util/reactify\",\n    \"org/forgerock/commons/ui/common/util/UIUtils\",\n    \"org/forgerock/openam/ui/admin/models/authorization/PolicyModel\",\n    \"org/forgerock/openam/ui/admin/models/authorization/PolicySetModel\",\n    \"org/forgerock/openam/ui/admin/services/realm/PoliciesService\",\n    \"org/forgerock/openam/ui/admin/utils/FormHelper\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/attributes/CustomResponseAttributesView\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/attributes/StaticResponseAttributesView\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/attributes/SubjectResponseAttributesView\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/conditions/ManageEnvironmentsView\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/conditions/ManageSubjectsView\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/CreatedResourcesView\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/PolicyActionsView\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/PolicySettingsModal\",\n    \"org/forgerock/openam/ui/admin/views/realms/authorization/policies/summary/SummaryView\",\n    \"org/forgerock/openam/ui/common/util/react/unmountAt\",\n    \"react\",\n    \"bootstrap-tabdrop\",\n    \"selectize\"\n], (Backbone, PanelFooter, $, _, Messages, AbstractView, EventManager, Router, Constants, reactify, UIUtils,\n    PolicyModel, PolicySetModel, PoliciesService, FormHelper, CustomResponseAttributesView,\n    StaticResponseAttributesView, SubjectResponseAttributesView, ManageEnvironmentsView, ManageSubjectsView,\n    CreatedResourcesView, PolicyActionsView, PolicySettingsModal, SummaryView, unmountAt, React) =>\n    AbstractView.extend({\n        partials: [\n            \"partials/util/_HelpLink.html\"\n        ],\n        validationFields: [\"name\", \"resources\"],\n        events: {\n            \"click [data-delete]\": \"onDeleteClick\",\n            \"click [data-properties]\": \"openSettingsModal\",\n            \"click [data-save]\": \"saveTab\",\n            \"shown.bs.tab\": \"renderFooter\"\n        },\n\n        getAllResponseAttributes () {\n            this.model.attributes.resourceAttributes = _.union(\n                this.staticAttrsView.getGroupedData(),\n                SubjectResponseAttributesView.getAttrs(),\n                CustomResponseAttributesView.getAttrs());\n        },\n\n        tabs: [\n            { }, // summary panel\n            { name: \"resources\", attr: [\"resourceTypeUuid\", \"resources\"] },\n            { name: \"actions\", attr: [\"actionValues\"] },\n            { name: \"subjects\", attr: [\"subject\"] },\n            { name: \"environments\", attr: [\"condition\"] },\n            { name: \"responseAttributes\", action: \"getAllResponseAttributes\" }\n        ],\n\n        initialize () {\n            AbstractView.prototype.initialize.call(this);\n            UIUtils.preloadPartial(\n                \"templates/admin/views/realms/authorization/policies/_PolicyOperationsDropDown.html\");\n        },\n\n        render (args, callback) {\n            const policyName = args[2];\n\n            if (callback) {\n                this.renderCallback = callback;\n            }\n\n            this.data.realmPath = args[0];\n            this.data.policySetName = args[1];\n\n            // This piece of information is necessary both when creating new and editing existing policy\n            this.policySetModelPromise = new PolicySetModel({ name: this.data.policySetName }).fetch();\n            this.resourceTypesPromise = PoliciesService.listResourceTypes();\n\n            if (policyName) {\n                this.allSubjectsPromise = PoliciesService.getSubjectConditions();\n                this.allEnvironmentsPromise = PoliciesService.getEnvironmentConditions();\n                this.allUserAttributesPromise = PoliciesService.getAllUserAttributes();\n                this.data.headerActions = [\n                    { actionPartial: \"util/_HelpLink\", helpLink: \"backstage.authz.policies\" },\n                    { actionPartial: \"templates/admin/views/realms/authorization/policies/_PolicyOperationsDropDown\" }\n                ];\n                this.template = \"templates/admin/views/realms/authorization/policies/EditPolicyTemplate.html\";\n                this.model = new PolicyModel({ name: policyName });\n                this.listenTo(this.model, \"sync\", this.renderPolicy);\n                this.model.fetch();\n            } else {\n                this.template = \"templates/admin/views/realms/authorization/policies/NewPolicyTemplate.html\";\n                this.newEntity = true;\n                this.model = new PolicyModel();\n                this.data.headerActions = [{ actionPartial: \"util/_HelpLink\", helpLink: \"backstage.authz.policies\" }];\n                this.listenTo(this.model, \"sync\", this.renderPolicy);\n                this.renderPolicy();\n            }\n        },\n\n        renderPolicy () {\n            var self = this;\n\n            this.data.entity = _.cloneDeep(this.model.attributes);\n            // this line is needed for the correctly saving policy\n            this.data.entity.applicationName = self.data.policySetName;\n            this.data.options = {};\n            this.data.status = {};\n\n            if (this.data.entity.active) {\n                this.data.status.text = \"common.user.active\";\n                this.data.status.icon = \"fa-check-circle\";\n                this.data.status.class = \"text-success\";\n            } else {\n                this.data.status.text = \"common.user.inactive\";\n                this.data.status.icon = \"fa-ban\";\n                this.data.status.class = \"text-warning\";\n            }\n\n            if (self.newEntity) {\n                $.when(this.policySetModelPromise, this.resourceTypesPromise).done(\n                    (policySetModel, resourceTypes) => {\n                        self.data.options.availableResourceTypes = _.filter(resourceTypes[0].result,\n                            (item) => _.contains(policySetModel[0].resourceTypeUuids, item.uuid));\n                        self.parentRender(() => { self.buildResourceTypeSelection(); });\n                    });\n            } else {\n                $.when(\n                    this.policySetModelPromise,\n                    this.allSubjectsPromise,\n                    this.allEnvironmentsPromise,\n                    this.allUserAttributesPromise,\n                    this.resourceTypesPromise\n                ).done((policySetModel, allSubjects, allEnvironments, allUserAttributes, resourceTypes) => {\n                    const policySet = policySetModel[0];\n\n                    self.data.options.availableResourceTypes = _.filter(resourceTypes[0].result,\n                        (item) => _.contains(policySet.resourceTypeUuids, item.uuid));\n\n                    self.staticAttributes = _.where(self.model.attributes.resourceAttributes, { type: \"Static\" });\n                    self.userAttributes = _.where(self.model.attributes.resourceAttributes, { type: \"User\" });\n                    self.customAttributes = _.difference(self.model.attributes.resourceAttributes,\n                        self.staticAttributes, self.userAttributes);\n                    self.allUserAttributes = _.sortBy(allUserAttributes[0].result);\n\n                    self.data.options.availableEnvironments =\n                        _.findByValues(allEnvironments[0].result, \"title\", policySet.conditions);\n                    self.data.options.availableSubjects =\n                        _.findByValues(allSubjects[0].result, \"title\", policySet.subjects);\n\n                    const resourceType = _.find(self.data.options.availableResourceTypes, {\n                        uuid: self.model.attributes.resourceTypeUuid\n                    });\n\n                    self.data.options.availableActions = self.getAvailableActionsForResourceType(resourceType);\n                    self.data.options.availablePatterns = resourceType.patterns;\n\n                    // Model.save() triggers this renderPolicy, so we need to manually clean up any previous react elements\n                    unmountAt.default(this.$el.find(\"#summaryTab\")[0]);\n                    unmountAt.default(this.$el.find(\"#policyFooter\")[0]);\n\n                    self.parentRender(() => {\n                        self.$el.find(\".tab-menu .nav-tabs\").tabdrop();\n                        self.buildResourceTypeSelection();\n\n                        reactify(React.createElement(SummaryView.default, {\n                            ...self.data.entity,\n                            onClick: (sectionName) => { this.onSummarySectionClick(sectionName); },\n                            staticAttributes: self.staticAttributes,\n                            customAttributes: self.customAttributes,\n                            userAttributes: self.userAttributes\n                        }), this.$el.find(\"#summaryTab\"));\n\n                        ManageSubjectsView.render(self.data);\n                        ManageEnvironmentsView.render(self.data);\n\n                        PolicyActionsView.render(self.data);\n                        CreatedResourcesView.render(self.data);\n\n                        self.staticAttrsView = new StaticResponseAttributesView({\n                            staticAttributes: self.staticAttributes,\n                            el: \"[data-static-attributes]\"\n                        });\n                        self.staticAttrsView.render();\n\n                        SubjectResponseAttributesView.render([self.userAttributes, self.allUserAttributes]);\n                        CustomResponseAttributesView.render(self.customAttributes);\n\n                        FormHelper.setActiveTab(self);\n\n                        if (self.renderCallback) {\n                            self.renderCallback();\n                        }\n                    });\n                });\n            }\n        },\n\n        onSummarySectionClick (sectionName) {\n            this.$el.find(`.tab-menu li a:contains(\"${sectionName}\")`).tab(\"show\");\n        },\n\n        openSettingsModal (e) {\n            e.preventDefault();\n\n            reactify(React.createElement(PolicySettingsModal.default, {\n                data: {\n                    active: this.data.entity.active,\n                    description: this.data.entity.description,\n                    name: this.data.entity.name\n                },\n                handleSubmit: this.updateAndSaveModel.bind(this)\n            }), this.$el.find(\"#settingsModal\"));\n        },\n\n        buildResourceTypeSelection () {\n            var self = this;\n            this.$el.find(\"#resTypesSelection\").selectize({\n                sortField: \"name\",\n                valueField: \"uuid\",\n                labelField: \"name\",\n                searchField: \"name\",\n                options: self.data.options.availableResourceTypes,\n                onChange (value) {\n                    self.changeResourceType(value);\n                }\n            });\n        },\n\n        getAvailableActionsForResourceType (resourceType) {\n            var availableActions = [];\n            if (resourceType) {\n                _.each(resourceType.actions, function (val, key) {\n                    availableActions.push({ action: key, value: val });\n                });\n            }\n            return availableActions;\n        },\n\n        changeResourceType (value) {\n            this.data.entity.resourceTypeUuid = value;\n\n            var resourceType = _.find(this.data.options.availableResourceTypes, { uuid: value });\n\n            this.data.options.availableActions = this.getAvailableActionsForResourceType(resourceType);\n            this.data.options.availablePatterns = resourceType ? resourceType.patterns : [];\n\n            this.data.options.newPattern = null;\n            this.data.entity.resources = [];\n            this.data.entity.actionValues = {};\n\n            CreatedResourcesView.render(this.data);\n\n            if (!this.newEntity) {\n                PolicyActionsView.render(this.data);\n            }\n        },\n\n        updateFields () {\n            var app = this.data.entity,\n                dataFields = this.$el.find(\"[data-field]\"),\n                dataField;\n\n            _.each(dataFields, function (field) {\n                dataField = field.getAttribute(\"data-field\");\n\n                if (field.type === \"checkbox\") {\n                    app[dataField] = field.checked;\n                } else {\n                    app[dataField] = field.value;\n                }\n            });\n        },\n\n        updateModel () {\n            this.updateFields();\n            this.activeTabId = this.$el.find(\".tab-menu li.active a\").attr(\"href\");\n\n            if (this.newEntity) {\n                _.extend(this.model.attributes, this.data.entity);\n            } else {\n                const activeTabIndex = this.$el.find(\".tab-pane.active\").index();\n                const activeTab = this.tabs[activeTabIndex];\n\n                if (activeTab.action) {\n                    this[activeTab.action]();\n                }\n\n                if (activeTab.attr) {\n                    const activeTabProperties = _.pick(this.data.entity, this.tabs[activeTabIndex].attr);\n                    _.extend(this.model.attributes, activeTabProperties);\n                }\n            }\n        },\n\n        saveTab () {\n            this.updateModel();\n            this.saveModel();\n        },\n\n        updateAndSaveModel (settings) {\n            _.extend(this.model.attributes, settings);\n            this.saveModel();\n        },\n\n        saveModel () {\n            const savePromise = this.model.save();\n\n            if (savePromise) {\n                savePromise\n                    .done(() => {\n                        if (this.newEntity) {\n                            Router.routeTo(Router.configuration.routes.realmsPolicyEdit, {\n                                args: _.map([this.data.realmPath, this.data.policySetName, this.model.id],\n                                    encodeURIComponent),\n                                trigger: true\n                            });\n                        } else {\n                            EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"changesSaved\");\n                        }\n                    });\n            } else {\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, this.model.validationError);\n            }\n        },\n\n        onDeleteClick (e) {\n            e.preventDefault();\n\n            FormHelper.showConfirmationBeforeDeleting({ type: $.t(\"console.authorization.common.policy\") },\n                _.bind(this.deletePolicy, this));\n        },\n\n        deletePolicy () {\n            var self = this,\n                onSuccess = function () {\n                    Router.routeTo(Router.configuration.routes.realmsPolicySetEdit, {\n                        args: _.map([self.data.realmPath, self.data.policySetName], encodeURIComponent),\n                        trigger: true\n                    });\n                    EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"changesSaved\");\n                },\n                onError = function (model, response) {\n                    Messages.addMessage({\n                        response,\n                        type: Messages.TYPE_DANGER\n                    });\n                };\n\n            this.model.destroy({\n                success: onSuccess,\n                error: onError,\n                wait: true\n            });\n        },\n\n        renderFooter () {\n            const summaryTabSelected = this.$el.find(\".tab-pane.active\").index() === 0;\n            const footer = this.$el.find(\"#policyFooter\");\n\n            if (summaryTabSelected) {\n                unmountAt.default(footer[0]);\n            } else {\n                reactify(React.createElement(PanelFooter.default), footer);\n            }\n        }\n    })\n);\n"]}