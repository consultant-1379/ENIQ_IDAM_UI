{"version":3,"sources":["../../../../../../XUI/css/bootstrap-3.3.5-custom/js/tests/unit/alert.js"],"names":["$","QUnit","module","test","assert","expect","ok","document","body","alert","beforeEach","fn","bootstrapAlert","noConflict","afterEach","strictEqual","undefined","$el","$alert","alertHTML","find","trigger","hasClass","appendTo","notEqual","length","done","async","on","e","preventDefault"],"mappings":"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","file":"alert.js","sourcesContent":["$(function () {\n  'use strict';\n\n  QUnit.module('alert plugin')\n\n  QUnit.test('should be defined on jquery object', function (assert) {\n    assert.expect(1)\n    assert.ok($(document.body).alert, 'alert method is defined')\n  })\n\n  QUnit.module('alert', {\n    beforeEach: function () {\n      // Run all tests in noConflict mode -- it's the only way to ensure that the plugin works in noConflict mode\n      $.fn.bootstrapAlert = $.fn.alert.noConflict()\n    },\n    afterEach: function () {\n      $.fn.alert = $.fn.bootstrapAlert\n      delete $.fn.bootstrapAlert\n    }\n  })\n\n  QUnit.test('should provide no conflict', function (assert) {\n    assert.expect(1)\n    assert.strictEqual($.fn.alert, undefined, 'alert was set back to undefined (org value)')\n  })\n\n  QUnit.test('should return jquery collection containing the element', function (assert) {\n    assert.expect(2)\n    var $el = $('<div/>')\n    var $alert = $el.bootstrapAlert()\n    assert.ok($alert instanceof $, 'returns jquery collection')\n    assert.strictEqual($alert[0], $el[0], 'collection contains element')\n  })\n\n  QUnit.test('should fade element out on clicking .close', function (assert) {\n    assert.expect(1)\n    var alertHTML = '<div class=\"alert alert-danger fade in\">'\n        + '<a class=\"close\" href=\"#\" data-dismiss=\"alert\">×</a>'\n        + '<p><strong>Holy guacamole!</strong> Best check yo self, you\\'re not looking too good.</p>'\n        + '</div>'\n    var $alert = $(alertHTML).bootstrapAlert()\n\n    $alert.find('.close').trigger('click')\n\n    assert.strictEqual($alert.hasClass('in'), false, 'remove .in class on .close click')\n  })\n\n  QUnit.test('should remove element when clicking .close', function (assert) {\n    assert.expect(2)\n    var alertHTML = '<div class=\"alert alert-danger fade in\">'\n        + '<a class=\"close\" href=\"#\" data-dismiss=\"alert\">×</a>'\n        + '<p><strong>Holy guacamole!</strong> Best check yo self, you\\'re not looking too good.</p>'\n        + '</div>'\n    var $alert = $(alertHTML).appendTo('#qunit-fixture').bootstrapAlert()\n\n    assert.notEqual($('#qunit-fixture').find('.alert').length, 0, 'element added to dom')\n\n    $alert.find('.close').trigger('click')\n\n    assert.strictEqual($('#qunit-fixture').find('.alert').length, 0, 'element removed from dom')\n  })\n\n  QUnit.test('should not fire closed when close is prevented', function (assert) {\n    assert.expect(1)\n    var done = assert.async()\n    $('<div class=\"alert\"/>')\n      .on('close.bs.alert', function (e) {\n        e.preventDefault()\n        assert.ok(true, 'close event fired')\n        done()\n      })\n      .on('closed.bs.alert', function () {\n        assert.ok(false, 'closed event fired')\n      })\n      .bootstrapAlert('close')\n  })\n\n})\n"]}