{"version":3,"sources":["../../XUI/components/Tree.jsx"],"names":["Tree","activePaths","collapsed","data","filter","onNodeSelect","createNode","node","isNodeHighlighted","objectPath","children","map","propTypes","PropTypes","arrayOf","string","isRequired","bool","objectOf","id","array","path","func"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAqBA,QAAMA,OAAO,SAAPA,IAAO,OAA4D;AAAA,YAAzDC,WAAyD,QAAzDA,WAAyD;AAAA,YAA5CC,SAA4C,QAA5CA,SAA4C;AAAA,YAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,YAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,YAAnBC,YAAmB,QAAnBA,YAAmB;;AACrE;AACA,YAAMC,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAON,WAAP,EAAuB;AAAE;AACxC,gBAAMO,oBAAoB,sBAASP,WAAT,EAAsBM,KAAKE,UAA3B,CAA1B;;AAEA,gBAAIF,KAAKG,QAAT,EAAmB;AACf,oBAAMA,WAAW,iBAAIH,KAAKG,QAAT,EAAmB,UAACH,IAAD;AAAA,2BAAUD,WAAWC,IAAX,EAAiBN,WAAjB,CAAV;AAAA,iBAAnB,CAAjB;;AAEA,uBACI;AAAA;AAAA;AACI,mCAAYC,SADhB;AAEI,gCAASE,MAFb;AAGI,qCAAcI,iBAHlB;AAII,8BAAOD,IAJX;AAKI,kCAAWF;AALf;AAOMK;AAPN,iBADJ;AAWH,aAdD,MAcO;AACH,uBACI;AACI,4BAASN,MADb;AAEI,iCAAcI,iBAFlB;AAGI,0BAAOD,IAHX;AAII,8BAAWF;AAJf,kBADJ;AAQH;AACJ,SA3BD;;AA6BA,eACI;AAAA;AAAA,cAAI,WAAU,uBAAd;AACMF,iBAAKQ,GAAL,CAAS,UAACJ,IAAD;AAAA,uBAAUD,WAAWC,IAAX,EAAiBN,WAAjB,CAAV;AAAA,aAAT;AADN,SADJ;AAKH,KApCD;;AAsCAD,SAAKY,SAAL,GAAiB;AACbX,qBAAa,gBAAMY,SAAN,CAAgBC,OAAhB,CAAwB,iBAAUC,MAAlC,EAA0CC,UAD1C;AAEbd,mBAAW,iBAAUe,IAFR;AAGbd,cAAM,gBAAMU,SAAN,CAAgBC,OAAhB,CAAwB,iBAAUI,QAAV,CAAmB;AAC7CC,gBAAI,iBAAUJ,MAAV,CAAiBC,UADwB;AAE7CN,sBAAU,iBAAUU,KAFyB;AAG7CX,wBAAY,iBAAUM,MAAV,CAAiBC,UAHgB;AAI7CK,kBAAM,iBAAUN;AAJ6B,SAAnB,CAAxB,EAKFC,UARS;AASbZ,gBAAQ,iBAAUW,MATL;AAUbV,sBAAc,iBAAUiB,IAAV,CAAeN;AAVhB,KAAjB;;sBAaehB,I","file":"Tree.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2016-2017 ForgeRock AS.\n */\n\nimport { includes, map } from \"lodash\";\nimport React, { PropTypes } from \"react\";\nimport TreeLeafNode from \"./TreeLeafNode\";\nimport TreeNode from \"./TreeNode\";\n\nconst Tree = ({ activePaths, collapsed, data, filter, onNodeSelect }) => {\n    // We've disabled the rule here as we are not creating multiple components in this file\n    const createNode = (node, activePaths) => { // eslint-disable-line react/no-multi-comp\n        const isNodeHighlighted = includes(activePaths, node.objectPath);\n\n        if (node.children) {\n            const children = map(node.children, (node) => createNode(node, activePaths));\n\n            return (\n                <TreeNode\n                    collapsed={ collapsed }\n                    filter={ filter }\n                    highlighted={ isNodeHighlighted }\n                    node={ node }\n                    onSelect={ onNodeSelect }\n                >\n                    { children }\n                </TreeNode>\n            );\n        } else {\n            return (\n                <TreeLeafNode\n                    filter={ filter }\n                    highlighted={ isNodeHighlighted }\n                    node={ node }\n                    onSelect={ onNodeSelect }\n                />\n            );\n        }\n    };\n\n    return (\n        <ol className=\"am-tree list-unstyled\">\n            { data.map((node) => createNode(node, activePaths)) }\n        </ol>\n    );\n};\n\nTree.propTypes = {\n    activePaths: React.PropTypes.arrayOf(PropTypes.string).isRequired,\n    collapsed: PropTypes.bool,\n    data: React.PropTypes.arrayOf(PropTypes.objectOf({\n        id: PropTypes.string.isRequired,\n        children: PropTypes.array,\n        objectPath: PropTypes.string.isRequired,\n        path: PropTypes.string\n    })).isRequired,\n    filter: PropTypes.string,\n    onNodeSelect: PropTypes.func.isRequired\n};\n\nexport default Tree;\n"]}