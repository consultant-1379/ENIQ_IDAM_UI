{"version":3,"sources":["../../../../XUI/components/table/selection/HeaderSelection.jsx"],"names":["HeaderSelection","props","setRef","bind","update","checked","input","indeterminate","rowIndex","onChange","propTypes","bool","isRequired","func","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAkBMA,e;;;AACF,iCAAaC,KAAb,EAAoB;AAAA;;AAAA,0IACVA,KADU;;AAEhB,kBAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,OAAd;AAFgB;AAGnB;;;;gDAEoB;AACjB,qBAAKC,MAAL,CAAY,KAAKH,KAAL,CAAWI,OAAvB;AACH;;;sDAE0BJ,K,EAAO;AAC9B,qBAAKG,MAAL,CAAYH,MAAMI,OAAlB;AACH;;;mCAEOA,O,EAAS;AACb,qBAAKC,KAAL,CAAWC,aAAX,GAA2BF,YAAY,eAAvC;AACH;;;mCAEOC,K,EAAO;AACX,qBAAKA,KAAL,GAAaA,KAAb;AACH;;;qCAES;AACN,uBACI;AACI,6BAAU,KAAKL,KAAL,CAAWI,OADzB;AAEI,+BAAU,qBAFd;AAGI,qCAAgB,KAAKJ,KAAL,CAAWO,QAH/B;AAII,uCAAkB,KAAKP,KAAL,CAAWO,QAJjC;AAKI,8BAAW,KAAKP,KAAL,CAAWQ,QAL1B;AAMI,yBAAM,KAAKP,MANf;AAOI,0BAAK;AAPT,kBADJ;AAWH;;;;;;AAGLF,oBAAgBU,SAAhB,GAA4B;AACxBL,iBAAS,iBAAUM,IAAV,CAAeC,UADA;AAExBH,kBAAU,iBAAUI,IAAV,CAAeD,UAFD;AAGxBJ,kBAAU,iBAAUM,MAAV,CAAiBF;AAHH,KAA5B;;sBAMeZ,e","file":"HeaderSelection.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport React, { Component, PropTypes } from \"react\";\n\nclass HeaderSelection extends Component {\n    constructor (props) {\n        super(props);\n        this.setRef = this.setRef.bind(this);\n    }\n\n    componentDidMount () {\n        this.update(this.props.checked);\n    }\n\n    componentWillReceiveProps (props) {\n        this.update(props.checked);\n    }\n\n    update (checked) {\n        this.input.indeterminate = checked === \"indeterminate\";\n    }\n\n    setRef (input) {\n        this.input = input;\n    }\n\n    render () {\n        return (\n            <input\n                checked={ this.props.checked }\n                className=\"react-bs-select-all\"\n                id={ `checkbox${this.props.rowIndex}` }\n                name={ `checkbox${this.props.rowIndex}` }\n                onChange={ this.props.onChange }\n                ref={ this.setRef }\n                type=\"checkbox\"\n            />\n        );\n    }\n}\n\nHeaderSelection.propTypes = {\n    checked: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    rowIndex: PropTypes.string.isRequired\n};\n\nexport default HeaderSelection;\n"]}