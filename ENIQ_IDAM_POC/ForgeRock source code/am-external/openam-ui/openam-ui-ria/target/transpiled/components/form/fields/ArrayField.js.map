{"version":3,"sources":["../../../../XUI/components/form/fields/ArrayField.jsx"],"names":["ArrayField","formData","onChange","restProps","handleOnChange","value","data","label","propTypes","arrayOf","string","func","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,QAAMA,aAAa,SAAbA,UAAa,OAA0C;AAAA,YAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,YAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,YAAhBC,SAAgB;;AACzD,YAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD;AAAA,mBAAWH,SAAS,mBAAMG,KAAN,EAAa,OAAb,CAAT,CAAX;AAAA,SAAvB;;AAEA,eACI,mEACSF,SADT;AAEI,uBAFJ;AAGI,sBAAWC,cAHf;AAII,qBAAU,iBAAIH,QAAJ,EAAc,UAACK,IAAD;AAAA,uBAAW,EAAEC,OAAOD,IAAT,EAAeD,OAAOC,IAAtB,EAAX;AAAA,aAAd,CAJd;AAKI,mBAAQ,iBAAIL,QAAJ,EAAc,UAACK,IAAD;AAAA,uBAAW,EAAEC,OAAOD,IAAT,EAAeD,OAAOC,IAAtB,EAAX;AAAA,aAAd;AALZ,WADJ;AASH,KAZD;;AAcAN,eAAWQ,SAAX,GAAuB;AACnBP,kBAAU,iBAAUQ,OAAV,CAAkB,iBAAUC,MAA5B,CADS;AAEnBR,kBAAU,iBAAUS,IAAV,CAAeC;AAFN,KAAvB;;sBAKeZ,U","file":"ArrayField.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { Creatable } from \"react-select\";\nimport { map, pluck } from \"lodash\";\nimport React, { PropTypes } from \"react\";\n\nconst ArrayField = ({ formData, onChange, ...restProps }) => {\n    const handleOnChange = (value) => onChange(pluck(value, \"value\"));\n\n    return (\n        <Creatable\n            { ...restProps }\n            multi\n            onChange={ handleOnChange }\n            options={ map(formData, (data) => ({ label: data, value: data })) }\n            value={ map(formData, (data) => ({ label: data, value: data })) }\n        />\n    );\n};\n\nArrayField.propTypes = {\n    formData: PropTypes.arrayOf(PropTypes.string),\n    onChange: PropTypes.func.isRequired\n};\n\nexport default ArrayField;\n"]}