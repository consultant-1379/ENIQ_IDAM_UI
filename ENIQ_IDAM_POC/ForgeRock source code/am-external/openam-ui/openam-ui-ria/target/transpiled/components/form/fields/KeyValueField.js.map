{"version":3,"sources":["../../../../XUI/components/form/fields/KeyValueField.jsx"],"names":["initialState","error","key","showAdd","value","KeyValueField","state","handleAddClick","bind","handleChangeKey","handleChangeValue","handleRowDelete","handleSubmit","setRef","setState","event","target","row","props","onChange","formData","tableRef","handleAddRow","element","arrayData","newKeyValueComponent","errorComponent","rowTextComponent","data","rowDeleteComponent","addButton","mode","handleOnSelectedChange","hideSelectColumn","propTypes","objectOf","string","isRequired","func"],"mappings":"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","file":"KeyValueField.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2017 ForgeRock AS.\n */\n\nimport { Button, FormControl, Form, Table as BootstrapTable } from \"react-bootstrap\";\nimport { map, omit, partial } from \"lodash\";\nimport { t } from \"i18next\";\nimport { TableHeaderColumn } from \"react-bootstrap-table\";\nimport React, { Component, PropTypes } from \"react\";\n\nimport ReactBootstrapTable from \"components/table/Table\";\n\nconst initialState = {\n    error: false,\n    key: \"\",\n    showAdd: true,\n    value: \"\"\n};\n\nclass KeyValueField extends Component {\n    constructor () {\n        super();\n\n        this.state = initialState;\n\n        this.handleAddClick = this.handleAddClick.bind(this);\n        this.handleChangeKey = this.handleChangeKey.bind(this);\n        this.handleChangeValue = this.handleChangeValue.bind(this);\n        this.handleRowDelete = this.handleRowDelete.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setRef = this.setRef.bind(this);\n    }\n\n    handleAddClick () {\n        this.setState({ showAdd: false });\n    }\n\n    handleChangeKey (event) {\n        this.setState({ key: event.target.value });\n    }\n\n    handleChangeValue (event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleRowDelete (row) {\n        this.props.onChange(omit(this.props.formData, row.key));\n    }\n\n    handleSubmit () {\n        const error = this.tableRef.handleAddRow(this.state);\n\n        if (error) {\n            this.setState({ error });\n        } else {\n            this.props.onChange({\n                ...this.props.formData,\n                [this.state.key]: this.state.value\n            });\n            this.setState(initialState);\n        }\n    }\n\n    setRef (element) {\n        this.tableRef = element;\n    }\n\n    render () {\n        const arrayData = map(this.props.formData, (value, key) => ({ key, value }));\n        const newKeyValueComponent = this.state.showAdd\n            ? null\n            : (\n                <Form onSubmit={ this.handleSubmit }>\n                    <BootstrapTable condensed>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    { /* eslint-disable jsx-a11y/no-autofocus */ }\n                                    <FormControl\n                                        autoFocus\n                                        bsSize=\"small\"\n                                        onChange={ this.handleChangeKey }\n                                        placeholder={ t(\"common.form.key\") }\n                                        type=\"text\"\n                                        value={ this.state.key }\n                                    />\n                                    { /* eslint-enable */ }\n                                </td>\n                                <td>\n                                    <FormControl\n                                        bsSize=\"small\"\n                                        onChange={ this.handleChangeValue }\n                                        placeholder={ t(\"common.form.value\") }\n                                        type=\"text\"\n                                        value={ this.state.value }\n                                    />\n                                </td>\n                                <td className=\"fr-col-btn-1\">\n                                    <Button bsSize=\"small\" type=\"submit\">\n                                        <i className=\"fa fa-plus\" />\n                                    </Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </BootstrapTable>\n                </Form>\n            );\n        const errorComponent = this.state.error\n            ? <span className=\"text-danger small\">{ this.state.error }</span>\n            : null;\n        const rowTextComponent = (data) => <span title={ data }>{ data }</span>;\n        const rowDeleteComponent = (data, row) => (\n            <Button bsSize=\"small\" bsStyle=\"link\" onClick={ partial(this.handleRowDelete, row) }>\n                <i className=\"fa fa-trash\" />\n            </Button>\n        );\n        const addButton = this.state.showAdd\n            ? (\n                <Button bsSize=\"small\" className=\"pull-right\" onClick={ this.handleAddClick }>\n                    { t(\"common.form.add\") }\n                </Button>\n            )\n            : null;\n\n        return (\n            <div className=\"key-value-field clearfix\">\n                <ReactBootstrapTable\n                    cellEdit={ { mode: \"click\" } }\n                    condensed\n                    data={ arrayData }\n                    idField=\"key\"\n                    onSelectedChange={ this.handleOnSelectedChange }\n                    selectRow={ { hideSelectColumn: true } }\n                    tableRef={ this.setRef }\n                >\n                    <TableHeaderColumn dataField=\"key\" dataFormat={ rowTextComponent } isKey>\n                        { t(\"common.form.key\") }\n                    </TableHeaderColumn>\n                    <TableHeaderColumn dataField=\"value\" dataFormat={ rowTextComponent }>\n                        { t(\"common.form.value\") }\n                    </TableHeaderColumn>\n                    <TableHeaderColumn\n                        columnClassName=\"fr-col-btn-1\"\n                        dataAlign=\"center\"\n                        dataFormat={ rowDeleteComponent }\n                        editable={ false }\n                    />\n                </ReactBootstrapTable>\n                { newKeyValueComponent }\n                { errorComponent }\n                { addButton }\n            </div>\n        );\n    }\n}\n\nKeyValueField.propTypes = {\n    formData: PropTypes.objectOf(PropTypes.string).isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default KeyValueField;\n"]}