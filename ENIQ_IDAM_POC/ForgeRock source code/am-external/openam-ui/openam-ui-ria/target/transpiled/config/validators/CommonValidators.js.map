{"version":3,"sources":["../../../XUI/config/validators/CommonValidators.js"],"names":["define","$","obj","el","input","callback","v","val","t","confirmValue","mainInput","find","attr","len","length","minLength","minNumbers","foundNumbers","match","numNums","minCapitals","foundCapitals","numCaps"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeA;AACCA,OAAO,CACJ,QADI,CAAP,EAEE,UAASC,CAAT,EAAY;AACX,QAAIC,MAAM;AACN,oBAAY;AACR,oBAAQ,gBADA;AAER,4BAAgB,EAFR;AAGR,yBAAa,mBAASC,EAAT,EAAaC,KAAb,EAAoBC,QAApB,EAA8B;AACvC,oBAAIC,IAAIF,MAAMG,GAAN,EAAR;AACA,oBAAI,CAACD,CAAD,IAAMA,MAAM,EAAhB,EAAoB;AAChBD,6BAAS,CAACJ,EAAEO,CAAF,CAAI,iCAAJ,CAAD,CAAT;AACH,iBAFD,MAEO;AACHH;AACH;AAEJ;AAXO,SADN;AAcN,2BAAmB;AACf,oBAAQ,uBADO;AAEf,4BAAgB,EAFD;AAGf,yBAAa,mBAASF,EAAT,EAAaC,KAAb,EAAoBC,QAApB,EAA8B;AACvC,oBAAII,eAAeL,MAAMG,GAAN,EAAnB;AAAA,oBACIG,YAAYP,GAAGQ,IAAH,CAAQ,YAAYP,MAAMQ,IAAN,CAAW,eAAX,CAApB,CADhB;;AAGA,oBAAIF,UAAUH,GAAV,OAAoBE,YAApB,IAAoCC,UAAUE,IAAV,CAAe,wBAAf,MAA6C,OAArF,EAA8F;AAC1FP,6BAAS,CAACJ,EAAEO,CAAF,CAAI,oDAAJ,CAAD,CAAT;AACH,iBAFD,MAEO;AACHH;AACH;AACJ;AAZc,SAdb;AA4BN,qBAAa;AACT,oBAAQ,8BADC;AAET,4BAAgB,EAFP;AAGT,yBAAa,mBAASF,EAAT,EAAaC,KAAb,EAAoBC,QAApB,EAA8B;AACvC,oBAAIC,IAAIF,MAAMG,GAAN,EAAR;AAAA,oBACIM,MAAMT,MAAMQ,IAAN,CAAW,WAAX,CADV;;AAGA,oBAAIN,EAAEQ,MAAF,GAAWD,GAAf,EAAoB;AAChBR,6BAAS,CAACJ,EAAEO,CAAF,CAAI,mCAAJ,EAAyC,EAACO,WAAWF,GAAZ,EAAzC,CAAD,CAAT;AACH,iBAFD,MAEO;AACHR;AACH;AACJ;AAZQ,SA5BP;AA0CN,2BAAmB;AACf,oBAAQ,oDADO;AAEf,4BAAgB,EAFD;AAGf,yBAAa,mBAASF,EAAT,EAAaC,KAAb,EAAoBC,QAApB,EAA8B;AACvC,oBAAIC,IAAIF,MAAMG,GAAN,EAAR;AAAA,oBACIS,aAAaZ,MAAMQ,IAAN,CAAW,iBAAX,CADjB;AAAA,oBAEIK,eAAeX,EAAEY,KAAF,CAAQ,KAAR,CAFnB;;AAIA,oBAAI,CAACD,YAAD,IAAiBA,aAAaH,MAAb,GAAsBE,UAA3C,EAAuD;AACnDX,6BAAS,CAACJ,EAAEO,CAAF,CAAI,2CAAJ,EAAiD,EAACW,SAASH,UAAV,EAAjD,CAAD,CAAT;AACH,iBAFD,MAEO;AACHX;AACH;AACJ;AAbc,SA1Cb;AAyDN,kCAA0B;AACtB,oBAAQ,2DADc;AAEtB,4BAAgB,EAFM;AAGtB,yBAAa,mBAASF,EAAT,EAAaC,KAAb,EAAoBC,QAApB,EAA8B;AACvC,oBAAIC,IAAIF,MAAMG,GAAN,EAAR;AAAA,oBACIa,cAAchB,MAAMQ,IAAN,CAAW,wBAAX,CADlB;AAAA,oBAEIS,gBAAgBf,EAAEY,KAAF,CAAQ,UAAR,CAFpB;;AAIA,oBAAI,CAACG,aAAD,IAAkBA,cAAcP,MAAd,GAAuBM,WAA7C,EAA0D;AACtDf,6BAAS,CAACJ,EAAEO,CAAF,CAAI,mDAAJ,EAAyD,EAACc,SAASF,WAAV,EAAzD,CAAD,CAAT;AACH,iBAFD,MAEO;AACHf;AACH;AACJ;AAbqB;AAzDpB,KAAV;AAyEA,WAAOH,GAAP;AACH,CA7EA","file":"CommonValidators.js","sourcesContent":["/**\r\n * The contents of this file are subject to the terms of the Common Development and\r\n * Distribution License (the License). You may not use this file except in compliance with the\r\n * License.\r\n *\r\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\r\n * specific language governing permission and limitations under the License.\r\n *\r\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\r\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\r\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\r\n * information: \"Portions copyright [year] [name of copyright owner]\".\r\n *\r\n * Copyright 2011-2016 ForgeRock AS.\r\n */\r\n/* eslint-disable */\r\n define([\r\n    \"jquery\"\r\n], function($) {\r\n    var obj = {\r\n        \"required\": {\r\n            \"name\": \"Required field\",\r\n            \"dependencies\": [ ],\r\n            \"validator\": function(el, input, callback) {\r\n                var v = input.val();\r\n                if (!v || v === \"\") {\r\n                    callback([$.t(\"common.form.validation.required\")]);\r\n                } else {\r\n                    callback();\r\n                }\r\n\r\n            }\r\n        },\r\n        \"passwordConfirm\": {\r\n            \"name\": \"Password confirmation\",\r\n            \"dependencies\": [ ],\r\n            \"validator\": function(el, input, callback) {\r\n                var confirmValue = input.val(),\r\n                    mainInput = el.find(\":input#\" + input.attr(\"passwordField\"));\r\n\r\n                if (mainInput.val() !== confirmValue || mainInput.attr(\"data-validation-status\") === \"error\") {\r\n                    callback([$.t(\"common.form.validation.confirmationMatchesPassword\")]);\r\n                } else {\r\n                    callback();\r\n                }\r\n            }\r\n        },\r\n        \"minLength\": {\r\n            \"name\": \"Minimum number of characters\",\r\n            \"dependencies\": [ ],\r\n            \"validator\": function(el, input, callback) {\r\n                var v = input.val(),\r\n                    len = input.attr('minLength');\r\n\r\n                if (v.length < len) {\r\n                    callback([$.t(\"common.form.validation.MIN_LENGTH\", {minLength: len})]);\r\n                } else {\r\n                    callback();\r\n                }\r\n            }\r\n        },\r\n        \"atLeastXNumbers\": {\r\n            \"name\": \"Minimum occurrence of numeric characters in string\",\r\n            \"dependencies\": [ ],\r\n            \"validator\": function(el, input, callback) {\r\n                var v = input.val(),\r\n                    minNumbers = input.attr('atLeastXNumbers'),\r\n                    foundNumbers = v.match(/\\d/g);\r\n\r\n                if (!foundNumbers || foundNumbers.length < minNumbers) {\r\n                    callback([$.t(\"common.form.validation.AT_LEAST_X_NUMBERS\", {numNums: minNumbers})]);\r\n                } else {\r\n                    callback();\r\n                }\r\n            }\r\n        },\r\n        \"atLeastXCapitalLetters\": {\r\n            \"name\": \"Minimum occurrence of capital letter characters in string\",\r\n            \"dependencies\": [ ],\r\n            \"validator\": function(el, input, callback) {\r\n                var v = input.val(),\r\n                    minCapitals = input.attr('atLeastXCapitalLetters'),\r\n                    foundCapitals = v.match(/[(A-Z)]/g);\r\n\r\n                if (!foundCapitals || foundCapitals.length < minCapitals) {\r\n                    callback([$.t(\"common.form.validation.AT_LEAST_X_CAPITAL_LETTERS\", {numCaps: minCapitals})]);\r\n                } else {\r\n                    callback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return obj;\r\n});"]}