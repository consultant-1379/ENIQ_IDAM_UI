{"version":3,"sources":["../../../XUI/config/process/AMConfig.js"],"names":["define","$","_","Constants","EventManager","Router","startEvent","EVENT_LOGOUT","description","override","dependencies","processDescription","event","Configuration","SessionValidator","session","store","gotoUrl","logout","query","URIUtils","stop","logoutSuccess","response","default","dispatch","removeRealm","sendEvent","EVENT_AUTHENTICATION_DATA_CHANGED","anonymousMode","gotoURL","exists","window","location","href","toHref","has","decodeURIComponent","goto","EVENT_CHANGE_VIEW","route","configuration","routes","loggedOut","logoutFail","EVENT_DISPLAY_MESSAGE_REQUEST","login","unvalidatedGotoParam","parseParameters","getCurrentFragment","getCurrentQueryString","validateParam","then","validatedUrl","setValidated","remove","EVENT_INVALID_REALM","router","conf","error","responseJSON","message","indexOf","baseTemplate","navigate","trigger","EVENT_RETURN_TO_AM_CONSOLE","subRealm","globalData","auth","context","encodeURIComponent","EVENT_REDIRECT_TO_JATO_FEDERATION","RedirectToLegacyConsole","global","federation","EVENT_REDIRECT_TO_JATO_DATASTORE","realm","dataStores","EVENT_REDIRECT_TO_JATO_PRIVILEGES","privileges","EVENT_REDIRECT_TO_JATO_SUBJECTS","subjects","EVENT_REDIRECT_TO_JATO_AGENTS_OAUTH20","agents","oauth20","list","EVENT_REDIRECT_TO_JATO_AGENTS_RCS","rcs","EVENT_REDIRECT_TO_JATO_AGENTS","web","EVENT_REDIRECT_TO_JATO_STS","sts","EVENT_HANDLE_DEFAULT_ROUTE","routerParams","replace","loggedUser","routeTo","contains","uiroles","realms","args","profile","EVENT_THEME_CHANGED","Footer","LoginHeader","render","EVENT_AUTHENTICATED","RealmsService","ServicesService","MaxIdleTimeLeftStrategy","NavigationHelper","queueName","authenticatedCallback","hasRole","all","populateRealmsDropdown","suppressError","errorsHandlers","status","instance","get","hideAPILinksOnAPIDescriptionsDisabled","xuiUserSessionValidationEnabled","start","EVENT_UNAUTHORIZED","RouteTo","forbiddenPage","forbiddenError","EVENT_SHOW_LOGIN_DIALOG","LoginDialog","Queue","sessionExpired","peek","add"],"mappings":"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","file":"AMConfig.js","sourcesContent":["/*\n * The contents of this file are subject to the terms of the Common Development and\n * Distribution License (the License). You may not use this file except in compliance with the\n * License.\n *\n * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the\n * specific language governing permission and limitations under the License.\n *\n * When distributing Covered Software, include this CDDL Header Notice in each file and include\n * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL\n * Header, with the fields enclosed by brackets [] replaced by your own identifying\n * information: \"Portions copyright [year] [name of copyright owner]\".\n *\n * Copyright 2011-2017 ForgeRock AS.\n */\n\ndefine([\n    \"jquery\",\n    \"lodash\",\n    \"org/forgerock/openam/ui/common/util/Constants\",\n    \"org/forgerock/commons/ui/common/main/EventManager\",\n    \"org/forgerock/commons/ui/common/main/Router\"\n], ($, _, Constants, EventManager, Router) => {\n    return [{\n        startEvent: Constants.EVENT_LOGOUT,\n        description: \"used to override common logout event\",\n        override: true,\n        dependencies: [\n            \"org/forgerock/commons/ui/common/main/Router\",\n            \"org/forgerock/commons/ui/common/main/Configuration\",\n            \"org/forgerock/openam/ui/common/sessions/SessionValidator\",\n            \"store/modules/local/session\",\n            \"store/index\",\n            \"org/forgerock/openam/ui/user/login/gotoUrl\",\n            \"org/forgerock/openam/ui/user/login/logout\",\n            \"org/forgerock/openam/ui/common/util/uri/query\",\n            \"org/forgerock/commons/ui/common/util/URIUtils\"\n        ],\n        processDescription (event, Router, Configuration, SessionValidator, session, store, gotoUrl, logout,\n            query, URIUtils) {\n            SessionValidator.stop();\n\n            const logoutSuccess = (response) => {\n                store.default.dispatch(session.removeRealm());\n                EventManager.sendEvent(Constants.EVENT_AUTHENTICATION_DATA_CHANGED, { anonymousMode: true });\n                delete Configuration.gotoURL;\n\n                if (gotoUrl.exists()) {\n                    window.location.href = gotoUrl.toHref();\n                } else if (_.has(response, \"goto\")) {\n                    // The response.goto comes from the \"Logout Location\" that can be configured in SAML2\n                    window.location.href = decodeURIComponent(response.goto);\n                } else {\n                    EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\n                        route: Router.configuration.routes.loggedOut\n                    });\n                }\n            };\n\n            const logoutFail = () => {\n                EventManager.sendEvent(Constants.EVENT_AUTHENTICATION_DATA_CHANGED, { anonymousMode: true });\n                EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"unauthorized\");\n\n                if (gotoUrl.exists()) {\n                    window.location.href = gotoUrl.toHref();\n                } else {\n                    EventManager.sendEvent(Constants.EVENT_CHANGE_VIEW, {\n                        route: Router.configuration.routes.login\n                    });\n                }\n            };\n\n            const unvalidatedGotoParam = query.parseParameters(URIUtils.getCurrentFragment()).goto ||\n                query.parseParameters(URIUtils.getCurrentQueryString()).goto;\n            if (unvalidatedGotoParam) {\n                gotoUrl.validateParam(unvalidatedGotoParam).then((validatedUrl) => {\n                    gotoUrl.setValidated(validatedUrl);\n                    logout.default().then(logoutSuccess, logoutFail);\n                }, () => {\n                    gotoUrl.remove();\n                    logout.default().then(logoutSuccess, logoutFail);\n                });\n            } else {\n                gotoUrl.remove();\n                logout.default().then(logoutSuccess, logoutFail);\n            }\n        }\n    }, {\n        startEvent: Constants.EVENT_INVALID_REALM,\n        override: true,\n        dependencies: [\n            \"org/forgerock/commons/ui/common/main/Router\",\n            \"org/forgerock/commons/ui/common/main/Configuration\"\n        ],\n        processDescription (event, router, conf) {\n            if (event.error.responseJSON.message.indexOf(\"Invalid realm\") > -1) {\n                if (conf.baseTemplate) {\n                    EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"invalidRealm\");\n                } else {\n                    router.navigate(\"login\", { trigger: true });\n                    EventManager.sendEvent(Constants.EVENT_DISPLAY_MESSAGE_REQUEST, \"invalidRealm\");\n                }\n            }\n        }\n    }, {\n        startEvent: Constants.EVENT_RETURN_TO_AM_CONSOLE,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/commons/ui/common/main/Configuration\"\n        ],\n        processDescription (event, conf) {\n            const subRealm = conf.globalData.auth.subRealm || \"/\";\n            window.location.href = `${Constants.context}/realm/RMRealm?RMRealm.tblDataActionHref=${\n                encodeURIComponent(subRealm)\n            }`;\n        }\n    }, {\n        startEvent: Constants.EVENT_REDIRECT_TO_JATO_FEDERATION,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/openam/ui/admin/utils/RedirectToLegacyConsole\"\n        ],\n        processDescription (event, RedirectToLegacyConsole) {\n            RedirectToLegacyConsole.global.federation();\n        }\n    }, {\n        startEvent: Constants.EVENT_REDIRECT_TO_JATO_DATASTORE,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/openam/ui/admin/utils/RedirectToLegacyConsole\"\n        ],\n        processDescription (event, RedirectToLegacyConsole) {\n            RedirectToLegacyConsole.realm.dataStores(event);\n        }\n    }, {\n        startEvent: Constants.EVENT_REDIRECT_TO_JATO_PRIVILEGES,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/openam/ui/admin/utils/RedirectToLegacyConsole\"\n        ],\n        processDescription (event, RedirectToLegacyConsole) {\n            RedirectToLegacyConsole.realm.privileges(event);\n        }\n    }, {\n        startEvent: Constants.EVENT_REDIRECT_TO_JATO_SUBJECTS,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/openam/ui/admin/utils/RedirectToLegacyConsole\"\n        ],\n        processDescription (event, RedirectToLegacyConsole) {\n            RedirectToLegacyConsole.realm.subjects(event);\n        }\n    }, {\n        startEvent: Constants.EVENT_REDIRECT_TO_JATO_AGENTS_OAUTH20,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/openam/ui/admin/utils/RedirectToLegacyConsole\"\n        ],\n        processDescription (event, RedirectToLegacyConsole) {\n            RedirectToLegacyConsole.agents.oauth20.list(event);\n        }\n    }, {\n        startEvent: Constants.EVENT_REDIRECT_TO_JATO_AGENTS_RCS,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/openam/ui/admin/utils/RedirectToLegacyConsole\"\n        ],\n        processDescription (event, RedirectToLegacyConsole) {\n            RedirectToLegacyConsole.agents.rcs(event);\n        }\n    }, {\n        startEvent: Constants.EVENT_REDIRECT_TO_JATO_AGENTS,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/openam/ui/admin/utils/RedirectToLegacyConsole\"\n        ],\n        processDescription (event, RedirectToLegacyConsole) {\n            RedirectToLegacyConsole.agents.web(event);\n        }\n    }, {\n        startEvent: Constants.EVENT_REDIRECT_TO_JATO_STS,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/openam/ui/admin/utils/RedirectToLegacyConsole\"\n        ],\n        processDescription (event, RedirectToLegacyConsole) {\n            RedirectToLegacyConsole.realm.sts(event);\n        }\n    }, {\n        startEvent: Constants.EVENT_HANDLE_DEFAULT_ROUTE,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/commons/ui/common/main/Configuration\",\n            \"org/forgerock/commons/ui/common/main/Router\"\n        ],\n        processDescription (event, Configuration, Router) {\n            const routerParams = {\n                trigger: true,\n                replace: true\n            };\n\n            if (!Configuration.loggedUser) {\n                Router.routeTo(Router.configuration.routes.login, routerParams);\n            } else if (_.contains(Configuration.loggedUser.uiroles, \"ui-realm-admin\")) {\n                Router.routeTo(Router.configuration.routes.realms, {\n                    args: [],\n                    ...routerParams\n                });\n            } else {\n                Router.routeTo(Router.configuration.routes.profile, routerParams);\n            }\n        }\n    }, {\n        startEvent: Constants.EVENT_THEME_CHANGED,\n        description: \"\",\n        dependencies: [\n            \"Footer\",\n            \"org/forgerock/commons/ui/common/components/LoginHeader\"\n        ],\n        processDescription (event, Footer, LoginHeader) {\n            Footer.render();\n            LoginHeader.render();\n        }\n    }, {\n        startEvent: Constants.EVENT_AUTHENTICATED,\n        description: \"\",\n        dependencies: [\n            \"org/forgerock/commons/ui/common/main/Configuration\",\n            \"org/forgerock/openam/ui/admin/services/global/RealmsService\",\n            \"org/forgerock/openam/ui/admin/services/global/ServicesService\",\n            \"org/forgerock/openam/ui/common/sessions/SessionValidator\",\n            \"org/forgerock/openam/ui/common/sessions/strategies/MaxIdleTimeLeftStrategy\",\n            \"org/forgerock/openam/ui/common/util/NavigationHelper\"\n        ],\n        processDescription (event, Configuration, RealmsService, ServicesService, SessionValidator,\n            MaxIdleTimeLeftStrategy, NavigationHelper) {\n            const queueName = \"loginDialogAuthCallbacks\";\n            let authenticatedCallback;\n\n            if (Configuration.globalData[queueName]) {\n                authenticatedCallback = Configuration.globalData[queueName].remove();\n            }\n\n            if (Configuration.loggedUser && Configuration.loggedUser.hasRole(\"ui-realm-admin\")) {\n                RealmsService.realms.all().then(NavigationHelper.populateRealmsDropdown);\n                const suppressError = { errorsHandlers : { \"Forbidden\": { status: 403 } } };\n                ServicesService.instance.get(\"rest\", suppressError)\n                    .then(NavigationHelper.hideAPILinksOnAPIDescriptionsDisabled);\n            }\n\n            if (Configuration.loggedUser && Configuration.globalData.xuiUserSessionValidationEnabled &&\n                !Configuration.loggedUser.hasRole([\"ui-realm-admin\", \"ui-global-admin\"])) {\n                SessionValidator.start(MaxIdleTimeLeftStrategy);\n            }\n\n            while (authenticatedCallback) {\n                authenticatedCallback();\n                authenticatedCallback = Configuration.globalData[queueName].remove();\n            }\n        }\n    }, {\n        startEvent: Constants.EVENT_UNAUTHORIZED,\n        description: \"\",\n        override: true,\n        dependencies: [\n            \"org/forgerock/commons/ui/common/main/Configuration\",\n            \"org/forgerock/openam/ui/common/RouteTo\"\n        ],\n        processDescription (event, Configuration, RouteTo) {\n            if (!Configuration.loggedUser) {\n                // 401 no session\n                return RouteTo.logout();\n            } else if (_.get(event, \"fromRouter\")) {\n                // 403 route change\n                return RouteTo.forbiddenPage();\n            } else {\n                // 403 rest call\n                return RouteTo.forbiddenError();\n            }\n        }\n    }, {\n        startEvent: Constants.EVENT_SHOW_LOGIN_DIALOG,\n        description: \"\",\n        override: true,\n        dependencies: [\n            \"LoginDialog\",\n            \"org/forgerock/commons/ui/common/main/Configuration\",\n            \"org/forgerock/commons/ui/common/util/Queue\",\n            \"org/forgerock/openam/ui/user/login/logout\"\n        ],\n        processDescription (event, LoginDialog, Configuration, Queue, logout) {\n            const queueName = \"loginDialogAuthCallbacks\";\n\n            /**\n             * EVENT_SHOW_LOGIN_DIALOG may be invoked multiple times. The presence of user is explicitly checked because\n             * there should still be a user present if the user's session has expired (and not purposefully logged out).\n             * This is required to protect against when this function is invoked multiple times, the first time\n             * invoking the first condition and triggering a logout (and clearing Configuration.loggedUser), meaning\n             * subsequent invocations incorrectly trigger the second condition.\n             */\n            if (Configuration.loggedUser) {\n                if (Configuration.loggedUser.hasRole(\"ui-self-service-user\")) {\n                    /**\n                     * User may have sensetive information on screen so we exit them from the system when their session\n                     * has expired with a message telling them as such\n                     */\n                    // TODO move the logout logic to the Session Expiry view\n                    return logout.default().then(() => {\n                        Router.routeTo(Router.configuration.routes.sessionExpired, { trigger: true });\n                    });\n                } else {\n                    /**\n                     * Admins are more likely to have work in-progress so they are presented with a login dialog to give\n                     * them the opportunity to continue their work\n                     */\n\n                    if (!Configuration.globalData[queueName]) {\n                        Configuration.globalData[queueName] = new Queue();\n                    }\n\n                    // only render the LoginDialog if it has an empty callback queue\n                    if (!Configuration.globalData[queueName].peek()) {\n                        LoginDialog.render();\n                    }\n                    if (event.authenticatedCallback) {\n                        Configuration.globalData[queueName].add(event.authenticatedCallback);\n                    }\n                }\n            }\n        }\n    }];\n});\n"]}